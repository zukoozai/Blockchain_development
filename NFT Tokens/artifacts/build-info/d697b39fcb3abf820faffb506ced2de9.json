{
	"id": "d697b39fcb3abf820faffb506ced2de9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"NFT Tokens/Tk5.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.25;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract DAGG is ERC721(\"DAGG NFT\", \"DAGG\") {\n\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenCounter;\n    uint public treasuryBalance;\n    mapping(address => uint[]) public borrowedNFTs;\n    event NFTAcquired(uint tokenId, string name);\n    event NFTBorrowed(uint tokenId, address borrower);\n    uint public membershipFee;\n    address payable public marketplace;\n    uint public nftPrice;\n    string public nftName;\n    uint public nftTokenId;\n    address public nftOwner;\n    uint public nftBalance;\n    uint public totalNFTSupply;\n    uint public nftDistribution;\n    uint public nftDistributionPercentage;\n    uint public nftDistributionAmount;\n    address payable public nftDistributionAddress;\n    event NFTDistribution(uint nftDistributionAmount, address nftDistributionAddress);\n\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal {\n        _setTokenURI(tokenId, _tokenURI);\n    }\n\n    function distributeNFT() public {\n        nftDistributionAmount = nftBalance * nftDistributionPercentage / 100;\n        nftDistributionAddress.transfer(nftDistributionAmount);\n        emit NFTDistribution(nftDistributionAmount, nftDistributionAddress);\n    }\n\n    function internalSetTokenURI(uint256 tokenId, string memory _tokenURI) internal {\n        _setTokenURI(tokenId, _tokenURI);\n    }\n\n    function acquireNFT(string memory name, uint tokenId, uint price) public payable {\n        require(treasuryBalance >= price, \"Insufficient funds in treasury\");\n        marketplace.transfer(price);\n        _mint(address(this), tokenId);\n        _setTokenURI(tokenId, name);\n        emit NFTAcquired(tokenId, name);\n    }\n\n    function borrowNFT(uint tokenId) public {\n        require(_ownerOf(tokenId) == address(this), \"NFT not owned by the guild\");\n        borrowedNFTs[msg.sender].push(tokenId);\n        emit NFTBorrowed(tokenId, msg.sender);\n    }\n\n    function totalSupply() public view returns (uint) {\n        return _tokenCounter.current();\n    }\n\n    function distributeProfits(uint profit) public onlyTokenHolders {\n        uint totalTokens = totalSupply();\n        for (uint i = 0; i < totalTokens; i++) {\n            address member = ownerOf(i);\n            if (balanceOf(member) > 0) {\n                uint amount = profit * balanceOf(member) / totalTokens;\n                payable(member).transfer(amount);\n            }\n        }\n    }\n\n    modifier onlyTokenHolders() {\n        require(balanceOf(msg.sender) > 0, \"Only guild members can perform this action\");\n        _;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 788,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 790,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 794,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 798,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 802,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 808,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ebc9e71a21ae2f1fc1064bef4f8a273ccce7d1abc9b284baa4d84aa57f79809664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ebc9e71a21ae2f1fc1064bef4f8a273ccce7d1abc9b284baa4d84aa57f79809664736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0xC9 0xE7 BYTE 0x21 0xAE 0x2F 0x1F 0xC1 MOD 0x4B 0xEF 0x4F DUP11 0x27 EXTCODECOPY 0xCC 0xE7 0xD1 0xAB 0xC9 0xB2 DUP5 0xBA LOG4 0xD8 BLOBBASEFEE 0xA5 PUSH32 0x79809664736F6C63430008190033000000000000000000000000000000000000 ",
							"sourceMap": "424:971:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ebc9e71a21ae2f1fc1064bef4f8a273ccce7d1abc9b284baa4d84aa57f79809664736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0xC9 0xE7 BYTE 0x21 0xAE 0x2F 0x1F 0xC1 MOD 0x4B 0xEF 0x4F DUP11 0x27 EXTCODECOPY 0xCC 0xE7 0xD1 0xAB 0xC9 0xB2 DUP5 0xBA LOG4 0xD8 BLOBBASEFEE 0xA5 PUSH32 0x79809664736F6C63430008190033000000000000000000000000000000000000 ",
							"sourceMap": "424:971:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ebc9e71a21ae2f1fc1064bef4f8a273ccce7d1abc9b284baa4d84aa57f79809664736f6c63430008190033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"NFT Tokens/Tk5.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"NFT Tokens/Tk5.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"NFT Tokens/Tk5.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"NFT Tokens/Tk5.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NFT Tokens/Tk5.sol": {
				"DAGG": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "NFTAcquired",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								}
							],
							"name": "NFTBorrowed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nftDistributionAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "nftDistributionAddress",
									"type": "address"
								}
							],
							"name": "NFTDistribution",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "acquireNFT",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "borrowNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "borrowedNFTs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distributeNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "profit",
									"type": "uint256"
								}
							],
							"name": "distributeProfits",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketplace",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "membershipFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftDistribution",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftDistributionAddress",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftDistributionAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftDistributionPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalNFTSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFT Tokens/Tk5.sol\":226:2767  contract DAGG is ERC721(\"DAGG NFT\", \"DAGG\") {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x44414747204e4654000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4441474700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"NFT Tokens/Tk5.sol\":226:2767  contract DAGG is ERC721(\"DAGG NFT\", \"DAGG\") {... */\n  jump(tag_7)\n    /* \"#utility.yul\":7:106   */\ntag_8:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_9:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_10:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_11:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_33:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_35\n  tag_10\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":714:798   */\ntag_34:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_12:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_13:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_14:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_15:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_40\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_14\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1429:1468   */\n  tag_41\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_14\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_16:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_17:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_18:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_45\n    /* \"#utility.yul\":1818:1852   */\n  tag_46\n    /* \"#utility.yul\":1827:1851   */\n  tag_47\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_16\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1818:1852   */\n  tag_17\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1800:1853   */\n  tag_16\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_19:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_20:\n    /* \"#utility.yul\":2056:2095   */\n  tag_50\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_18\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2117:2208   */\n  tag_51\n    /* \"#utility.yul\":2166:2207   */\n  tag_52\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_19\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_21:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_22:\n    /* \"#utility.yul\":2377:2409   */\n  tag_55\n  tag_21\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2418:2483   */\n  tag_56\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_23:\n    /* \"#utility.yul\":2555:2675   */\ntag_58:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_61\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_22\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_24:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_64\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_12\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2906:2935   */\n  tag_65\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_13\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_66:\n    /* \"#utility.yul\":3133:3213   */\n  tag_67\n    /* \"#utility.yul\":3189:3211   */\n  tag_68\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_13\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_23\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_63:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_25:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_26:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_71\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_25\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_27:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_73\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_26\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_5:\n    /* \"#utility.yul\":3950:3987   */\n  tag_75\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_8\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_77\n  tag_9\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4038:4094   */\ntag_76:\n    /* \"#utility.yul\":4118:4156   */\n  tag_78\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_11\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":4203:4270   */\n  tag_79\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_81\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_82:\n    /* \"#utility.yul\":5144:5211   */\n  tag_83\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_27\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_80)\n    /* \"#utility.yul\":4365:4983   */\ntag_81:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_84\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_12\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_85:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_89\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_26\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_88:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_80:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"NFT Tokens/Tk5.sol\":226:2767  contract DAGG is ERC721(\"DAGG NFT\", \"DAGG\") {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFT Tokens/Tk5.sol\":226:2767  contract DAGG is ERC721(\"DAGG NFT\", \"DAGG\") {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xabc8c7af\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xe2c79281\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xe2c79281\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xede8592b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf796c2d9\n      eq\n      tag_33\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0xabc8c7af\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc713a289\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_29\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x95d89b41\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x97f7d0d5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9a969768\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_25\n      jumpi\n      jump(tag_1)\n    tag_37:\n      dup1\n      0x6352211e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x68f5cd3b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x7e830574\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x23b872dd\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x4c39a749\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x4c39a749\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x529062fa\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5301fa6f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5743ceda\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_39:\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313dab20\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x31c258e8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_38:\n      dup1\n      0x095ea7b3\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0c29f635\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x0d39fc81\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_40:\n      dup1\n      0x8bfb00\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"NFT Tokens/Tk5.sol\":649:670  string public nftName */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"NFT Tokens/Tk5.sol\":1574:1893  function acquireNFT(string memory name, uint tokenId, uint price) public payable {... */\n    tag_7:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"NFT Tokens/Tk5.sol\":623:643  uint public nftPrice */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk5.sol\":2130:2227  function totalSupply() public view returns (uint) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"NFT Tokens/Tk5.sol\":362:389  uint public treasuryBalance */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk5.sol\":395:441  mapping(address => uint[]) public borrowedNFTs */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"NFT Tokens/Tk5.sol\":704:727  address public nftOwner */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk5.sol\":1899:2124  function borrowNFT(uint tokenId) public {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"NFT Tokens/Tk5.sol\":733:755  uint public nftBalance */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk5.sol\":826:863  uint public nftDistributionPercentage */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk5.sol\":869:902  uint public nftDistributionAmount */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      tag_129\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk5.sol\":676:698  uint public nftTokenId */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk5.sol\":793:820  uint public nftDistribution */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk5.sol\":2233:2623  function distributeProfits(uint profit) public onlyTokenHolders {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_148\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      tag_151\n      jump\t// in\n    tag_148:\n      stop\n        /* \"NFT Tokens/Tk5.sol\":583:617  address payable public marketplace */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_158\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      tag_161\n      jump\t// in\n    tag_158:\n      stop\n        /* \"NFT Tokens/Tk5.sol\":552:577  uint public membershipFee */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_167\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk5.sol\":761:787  uint public totalNFTSupply */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      tag_174\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_176\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      tag_179\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      tag_180\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk5.sol\":908:953  address payable public nftDistributionAddress */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      tag_184\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk5.sol\":1175:1433  function distributeNFT() public {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      tag_186\n      tag_187\n      jump\t// in\n    tag_186:\n      stop\n        /* \"NFT Tokens/Tk5.sol\":649:670  string public nftName */\n    tag_43:\n      0x0c\n      dup1\n      sload\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_190\n      swap1\n      tag_189\n      jump\t// in\n    tag_190:\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_192\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_191)\n    tag_192:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_193:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_193\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_195\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_196\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_200\n      swap1\n      tag_189\n      jump\t// in\n    tag_200:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_189\n      jump\t// in\n    tag_201:\n      dup1\n      iszero\n      tag_202\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_203\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_202)\n    tag_203:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_204:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_204\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_202:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_206:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":1574:1893  function acquireNFT(string memory name, uint tokenId, uint price) public payable {... */\n    tag_72:\n        /* \"NFT Tokens/Tk5.sol\":1692:1697  price */\n      dup1\n        /* \"NFT Tokens/Tk5.sol\":1673:1688  treasuryBalance */\n      sload(0x07)\n        /* \"NFT Tokens/Tk5.sol\":1673:1697  treasuryBalance >= price */\n      lt\n      iszero\n        /* \"NFT Tokens/Tk5.sol\":1665:1732  require(treasuryBalance >= price, \"Insufficient funds in treasury\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"NFT Tokens/Tk5.sol\":1742:1753  marketplace */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT Tokens/Tk5.sol\":1742:1762  marketplace.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT Tokens/Tk5.sol\":1742:1769  marketplace.transfer(price) */\n      0x08fc\n        /* \"NFT Tokens/Tk5.sol\":1763:1768  price */\n      dup3\n        /* \"NFT Tokens/Tk5.sol\":1742:1769  marketplace.transfer(price) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n        /* \"NFT Tokens/Tk5.sol\":1779:1808  _mint(address(this), tokenId) */\n      tag_221\n        /* \"NFT Tokens/Tk5.sol\":1793:1797  this */\n      address\n        /* \"NFT Tokens/Tk5.sol\":1800:1807  tokenId */\n      dup4\n        /* \"NFT Tokens/Tk5.sol\":1779:1784  _mint */\n      tag_222\n        /* \"NFT Tokens/Tk5.sol\":1779:1808  _mint(address(this), tokenId) */\n      jump\t// in\n    tag_221:\n        /* \"NFT Tokens/Tk5.sol\":1818:1845  _setTokenURI(tokenId, name) */\n      tag_223\n        /* \"NFT Tokens/Tk5.sol\":1831:1838  tokenId */\n      dup3\n        /* \"NFT Tokens/Tk5.sol\":1840:1844  name */\n      dup5\n        /* \"NFT Tokens/Tk5.sol\":1818:1830  _setTokenURI */\n      tag_224\n        /* \"NFT Tokens/Tk5.sol\":1818:1845  _setTokenURI(tokenId, name) */\n      jump\t// in\n    tag_223:\n        /* \"NFT Tokens/Tk5.sol\":1860:1886  NFTAcquired(tokenId, name) */\n      0x29705a31c393a642035ad5f190e6f0b0b3f0ef43ed68c72cf87ae76be0e3185b\n        /* \"NFT Tokens/Tk5.sol\":1872:1879  tokenId */\n      dup3\n        /* \"NFT Tokens/Tk5.sol\":1881:1885  name */\n      dup5\n        /* \"NFT Tokens/Tk5.sol\":1860:1886  NFTAcquired(tokenId, name) */\n      mload(0x40)\n      tag_225\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NFT Tokens/Tk5.sol\":1574:1893  function acquireNFT(string memory name, uint tokenId, uint price) public payable {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":623:643  uint public nftPrice */\n    tag_75:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":2130:2227  function totalSupply() public view returns (uint) {... */\n    tag_80:\n        /* \"NFT Tokens/Tk5.sol\":2174:2178  uint */\n      0x00\n        /* \"NFT Tokens/Tk5.sol\":2197:2220  _tokenCounter.current() */\n      tag_228\n        /* \"NFT Tokens/Tk5.sol\":2197:2210  _tokenCounter */\n      0x06\n        /* \"NFT Tokens/Tk5.sol\":2197:2218  _tokenCounter.current */\n      tag_229\n        /* \"NFT Tokens/Tk5.sol\":2197:2220  _tokenCounter.current() */\n      jump\t// in\n    tag_228:\n        /* \"NFT Tokens/Tk5.sol\":2190:2220  return _tokenCounter.current() */\n      swap1\n      pop\n        /* \"NFT Tokens/Tk5.sol\":2130:2227  function totalSupply() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":362:389  uint public treasuryBalance */\n    tag_89:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":395:441  mapping(address => uint[]) public borrowedNFTs */\n    tag_94:\n      mstore(0x20, 0x08)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_239\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_239:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":704:727  address public nftOwner */\n    tag_102:\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":1899:2124  function borrowNFT(uint tokenId) public {... */\n    tag_107:\n        /* \"NFT Tokens/Tk5.sol\":1986:1990  this */\n      address\n        /* \"NFT Tokens/Tk5.sol\":1957:1991  _ownerOf(tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT Tokens/Tk5.sol\":1957:1974  _ownerOf(tokenId) */\n      tag_244\n        /* \"NFT Tokens/Tk5.sol\":1966:1973  tokenId */\n      dup3\n        /* \"NFT Tokens/Tk5.sol\":1957:1965  _ownerOf */\n      tag_245\n        /* \"NFT Tokens/Tk5.sol\":1957:1974  _ownerOf(tokenId) */\n      jump\t// in\n    tag_244:\n        /* \"NFT Tokens/Tk5.sol\":1957:1991  _ownerOf(tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFT Tokens/Tk5.sol\":1949:2022  require(_ownerOf(tokenId) == address(this), \"NFT not owned by the guild\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"NFT Tokens/Tk5.sol\":2032:2044  borrowedNFTs */\n      0x08\n        /* \"NFT Tokens/Tk5.sol\":2032:2056  borrowedNFTs[msg.sender] */\n      0x00\n        /* \"NFT Tokens/Tk5.sol\":2045:2055  msg.sender */\n      caller\n        /* \"NFT Tokens/Tk5.sol\":2032:2056  borrowedNFTs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFT Tokens/Tk5.sol\":2062:2069  tokenId */\n      dup2\n        /* \"NFT Tokens/Tk5.sol\":2032:2070  borrowedNFTs[msg.sender].push(tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"NFT Tokens/Tk5.sol\":2085:2117  NFTBorrowed(tokenId, msg.sender) */\n      0x50580f9b480d6d5cec851393deb0b48a42783dca51b04cec0e1f104d553f516c\n        /* \"NFT Tokens/Tk5.sol\":2097:2104  tokenId */\n      dup2\n        /* \"NFT Tokens/Tk5.sol\":2106:2116  msg.sender */\n      caller\n        /* \"NFT Tokens/Tk5.sol\":2085:2117  NFTBorrowed(tokenId, msg.sender) */\n      mload(0x40)\n      tag_250\n      swap3\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NFT Tokens/Tk5.sol\":1899:2124  function borrowNFT(uint tokenId) public {... */\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":733:755  uint public nftBalance */\n    tag_110:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":826:863  uint public nftDistributionPercentage */\n    tag_114:\n      sload(0x12)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":869:902  uint public nftDistributionAmount */\n    tag_123:\n      sload(0x13)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":676:698  uint public nftTokenId */\n    tag_133:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_258\n      swap1\n      tag_189\n      jump\t// in\n    tag_258:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_259\n      swap1\n      tag_189\n      jump\t// in\n    tag_259:\n      dup1\n      iszero\n      tag_260\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_261\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_260)\n    tag_261:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_262:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_262\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_260:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":793:820  uint public nftDistribution */\n    tag_141:\n      sload(0x11)\n      dup2\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":2233:2623  function distributeProfits(uint profit) public onlyTokenHolders {... */\n    tag_146:\n        /* \"NFT Tokens/Tk5.sol\":2699:2700  0 */\n      0x00\n        /* \"NFT Tokens/Tk5.sol\":2675:2696  balanceOf(msg.sender) */\n      tag_264\n        /* \"NFT Tokens/Tk5.sol\":2685:2695  msg.sender */\n      caller\n        /* \"NFT Tokens/Tk5.sol\":2675:2684  balanceOf */\n      tag_129\n        /* \"NFT Tokens/Tk5.sol\":2675:2696  balanceOf(msg.sender) */\n      jump\t// in\n    tag_264:\n        /* \"NFT Tokens/Tk5.sol\":2675:2700  balanceOf(msg.sender) > 0 */\n      gt\n        /* \"NFT Tokens/Tk5.sol\":2667:2747  require(balanceOf(msg.sender) > 0, \"Only guild members can perform this action\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_265:\n        /* \"NFT Tokens/Tk5.sol\":2307:2323  uint totalTokens */\n      0x00\n        /* \"NFT Tokens/Tk5.sol\":2326:2339  totalSupply() */\n      tag_269\n        /* \"NFT Tokens/Tk5.sol\":2326:2337  totalSupply */\n      tag_80\n        /* \"NFT Tokens/Tk5.sol\":2326:2339  totalSupply() */\n      jump\t// in\n    tag_269:\n        /* \"NFT Tokens/Tk5.sol\":2307:2339  uint totalTokens = totalSupply() */\n      swap1\n      pop\n        /* \"NFT Tokens/Tk5.sol\":2354:2360  uint i */\n      0x00\n        /* \"NFT Tokens/Tk5.sol\":2349:2617  for (uint i = 0; i < totalTokens; i++) {... */\n    tag_270:\n        /* \"NFT Tokens/Tk5.sol\":2370:2381  totalTokens */\n      dup2\n        /* \"NFT Tokens/Tk5.sol\":2366:2367  i */\n      dup2\n        /* \"NFT Tokens/Tk5.sol\":2366:2381  i < totalTokens */\n      lt\n        /* \"NFT Tokens/Tk5.sol\":2349:2617  for (uint i = 0; i < totalTokens; i++) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"NFT Tokens/Tk5.sol\":2402:2416  address member */\n      0x00\n        /* \"NFT Tokens/Tk5.sol\":2419:2429  ownerOf(i) */\n      tag_273\n        /* \"NFT Tokens/Tk5.sol\":2427:2428  i */\n      dup3\n        /* \"NFT Tokens/Tk5.sol\":2419:2426  ownerOf */\n      tag_119\n        /* \"NFT Tokens/Tk5.sol\":2419:2429  ownerOf(i) */\n      jump\t// in\n    tag_273:\n        /* \"NFT Tokens/Tk5.sol\":2402:2429  address member = ownerOf(i) */\n      swap1\n      pop\n        /* \"NFT Tokens/Tk5.sol\":2467:2468  0 */\n      0x00\n        /* \"NFT Tokens/Tk5.sol\":2447:2464  balanceOf(member) */\n      tag_274\n        /* \"NFT Tokens/Tk5.sol\":2457:2463  member */\n      dup3\n        /* \"NFT Tokens/Tk5.sol\":2447:2456  balanceOf */\n      tag_129\n        /* \"NFT Tokens/Tk5.sol\":2447:2464  balanceOf(member) */\n      jump\t// in\n    tag_274:\n        /* \"NFT Tokens/Tk5.sol\":2447:2468  balanceOf(member) > 0 */\n      gt\n        /* \"NFT Tokens/Tk5.sol\":2443:2607  if (balanceOf(member) > 0) {... */\n      iszero\n      tag_275\n      jumpi\n        /* \"NFT Tokens/Tk5.sol\":2488:2499  uint amount */\n      0x00\n        /* \"NFT Tokens/Tk5.sol\":2531:2542  totalTokens */\n      dup4\n        /* \"NFT Tokens/Tk5.sol\":2511:2528  balanceOf(member) */\n      tag_276\n        /* \"NFT Tokens/Tk5.sol\":2521:2527  member */\n      dup4\n        /* \"NFT Tokens/Tk5.sol\":2511:2520  balanceOf */\n      tag_129\n        /* \"NFT Tokens/Tk5.sol\":2511:2528  balanceOf(member) */\n      jump\t// in\n    tag_276:\n        /* \"NFT Tokens/Tk5.sol\":2502:2508  profit */\n      dup7\n        /* \"NFT Tokens/Tk5.sol\":2502:2528  profit * balanceOf(member) */\n      tag_277\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n        /* \"NFT Tokens/Tk5.sol\":2502:2542  profit * balanceOf(member) / totalTokens */\n      tag_279\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"NFT Tokens/Tk5.sol\":2488:2542  uint amount = profit * balanceOf(member) / totalTokens */\n      swap1\n      pop\n        /* \"NFT Tokens/Tk5.sol\":2568:2574  member */\n      dup2\n        /* \"NFT Tokens/Tk5.sol\":2560:2584  payable(member).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT Tokens/Tk5.sol\":2560:2592  payable(member).transfer(amount) */\n      0x08fc\n        /* \"NFT Tokens/Tk5.sol\":2585:2591  amount */\n      dup3\n        /* \"NFT Tokens/Tk5.sol\":2560:2592  payable(member).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_282\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_282:\n      pop\n        /* \"NFT Tokens/Tk5.sol\":2470:2607  {... */\n      pop\n        /* \"NFT Tokens/Tk5.sol\":2443:2607  if (balanceOf(member) > 0) {... */\n    tag_275:\n        /* \"NFT Tokens/Tk5.sol\":2388:2617  {... */\n      pop\n        /* \"NFT Tokens/Tk5.sol\":2383:2386  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"NFT Tokens/Tk5.sol\":2349:2617  for (uint i = 0; i < totalTokens; i++) {... */\n      jump(tag_270)\n    tag_271:\n      pop\n        /* \"NFT Tokens/Tk5.sol\":2297:2623  {... */\n      pop\n        /* \"NFT Tokens/Tk5.sol\":2233:2623  function distributeProfits(uint profit) public onlyTokenHolders {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_286\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":583:617  address payable public marketplace */\n    tag_154:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":552:577  uint public membershipFee */\n    tag_164:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_292\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_292:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_294\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_295\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_296)\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_299\n      swap3\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":761:787  uint public totalNFTSupply */\n    tag_173:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":908:953  address payable public nftDistributionAddress */\n    tag_183:\n      0x14\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":1175:1433  function distributeNFT() public {... */\n    tag_187:\n        /* \"NFT Tokens/Tk5.sol\":1282:1285  100 */\n      0x64\n        /* \"NFT Tokens/Tk5.sol\":1254:1279  nftDistributionPercentage */\n      sload(0x12)\n        /* \"NFT Tokens/Tk5.sol\":1241:1251  nftBalance */\n      sload(0x0f)\n        /* \"NFT Tokens/Tk5.sol\":1241:1279  nftBalance * nftDistributionPercentage */\n      tag_303\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_303:\n        /* \"NFT Tokens/Tk5.sol\":1241:1285  nftBalance * nftDistributionPercentage / 100 */\n      tag_304\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_304:\n        /* \"NFT Tokens/Tk5.sol\":1217:1238  nftDistributionAmount */\n      0x13\n        /* \"NFT Tokens/Tk5.sol\":1217:1285  nftDistributionAmount = nftBalance * nftDistributionPercentage / 100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFT Tokens/Tk5.sol\":1295:1317  nftDistributionAddress */\n      0x14\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT Tokens/Tk5.sol\":1295:1326  nftDistributionAddress.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT Tokens/Tk5.sol\":1295:1349  nftDistributionAddress.transfer(nftDistributionAmount) */\n      0x08fc\n        /* \"NFT Tokens/Tk5.sol\":1327:1348  nftDistributionAmount */\n      sload(0x13)\n        /* \"NFT Tokens/Tk5.sol\":1295:1349  nftDistributionAddress.transfer(nftDistributionAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_306\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_306:\n      pop\n        /* \"NFT Tokens/Tk5.sol\":1364:1426  NFTDistribution(nftDistributionAmount, nftDistributionAddress) */\n      0x72be57c44bdcdf29e3bded0b32580b641d4c7f1e2d1cd7aba457fe552b351aaf\n        /* \"NFT Tokens/Tk5.sol\":1380:1401  nftDistributionAmount */\n      sload(0x13)\n        /* \"NFT Tokens/Tk5.sol\":1403:1425  nftDistributionAddress */\n      0x14\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT Tokens/Tk5.sol\":1364:1426  NFTDistribution(nftDistributionAmount, nftDistributionAddress) */\n      mload(0x40)\n      tag_307\n      swap3\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NFT Tokens/Tk5.sol\":1175:1433  function distributeNFT() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_311\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_317\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_318\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_322\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk5.sol\":1047:1169  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal {... */\n    tag_224:\n        /* \"NFT Tokens/Tk5.sol\":1130:1162  _setTokenURI(tokenId, _tokenURI) */\n      tag_326\n        /* \"NFT Tokens/Tk5.sol\":1143:1150  tokenId */\n      dup3\n        /* \"NFT Tokens/Tk5.sol\":1152:1161  _tokenURI */\n      dup3\n        /* \"NFT Tokens/Tk5.sol\":1130:1142  _setTokenURI */\n      tag_224\n        /* \"NFT Tokens/Tk5.sol\":1130:1162  _setTokenURI(tokenId, _tokenURI) */\n      jump\t// in\n    tag_326:\n        /* \"NFT Tokens/Tk5.sol\":1047:1169  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_334\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_318\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_335\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_340\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_343\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_345\n      jump\t// in\n    tag_344:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_346\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_347\n      swap2\n      swap1\n      tag_348\n      jump\t// in\n    tag_347:\n      0x01\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_349\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_354\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_353)\n    tag_354:\n      0x60\n      swap2\n      pop\n    tag_353:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_356\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_356:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_359\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_360\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_360:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_363\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_364\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_363:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_365\n      jumpi\n      tag_366\n      tag_367\n      jump\t// in\n    tag_366:\n    tag_365:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_368\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_368:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_371\n      jumpi\n      tag_372\n      tag_373\n      jump\t// in\n    tag_372:\n    tag_371:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_369\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_376\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_378\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_379\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_379:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_380\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_381\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_382\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_383\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_384\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_377:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_386\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_387\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_386:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_388\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_389\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_390\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_389:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_392\n      swap3\n      swap2\n      swap1\n      tag_393\n      jump\t// in\n    tag_392:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_388:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_395\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_396\n      jumpi\n      tag_397\n      tag_373\n      jump\t// in\n    tag_397:\n    tag_396:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_398\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_399\n      jumpi\n      tag_400\n      tag_373\n      jump\t// in\n    tag_400:\n    tag_399:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_398:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_401\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_402\n      jumpi\n      tag_403\n      tag_373\n      jump\t// in\n    tag_403:\n    tag_402:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_401:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_404\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_405\n      jumpi\n      tag_406\n      tag_373\n      jump\t// in\n    tag_406:\n    tag_405:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_404:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_407\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_408\n      jumpi\n      tag_409\n      tag_373\n      jump\t// in\n    tag_409:\n    tag_408:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_407:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_410\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_411\n      jumpi\n      tag_412\n      tag_373\n      jump\t// in\n    tag_412:\n    tag_411:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_410:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_413:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_387:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_415\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_416\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_417\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_416:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_418\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_419\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_419:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_418:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_415:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_420:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_421:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_422:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_423:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_424:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_482\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_420\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":711:782   */\n      tag_483\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_421\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_484\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_422\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":881:910   */\n      tag_485\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_423\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_45:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_487\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_424\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_425:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_426:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_427:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1718   */\n    tag_428:\n        /* \"#utility.yul\":1605:1612   */\n      0x00\n        /* \"#utility.yul\":1645:1711   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1638:1643   */\n      dup3\n        /* \"#utility.yul\":1634:1712   */\n      and\n        /* \"#utility.yul\":1623:1712   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1724:1844   */\n    tag_429:\n        /* \"#utility.yul\":1796:1819   */\n      tag_493\n        /* \"#utility.yul\":1813:1818   */\n      dup2\n        /* \"#utility.yul\":1796:1819   */\n      tag_428\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":1789:1794   */\n      dup2\n        /* \"#utility.yul\":1786:1820   */\n      eq\n        /* \"#utility.yul\":1776:1838   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":1834:1835   */\n      0x00\n        /* \"#utility.yul\":1831:1832   */\n      dup1\n        /* \"#utility.yul\":1824:1836   */\n      revert\n        /* \"#utility.yul\":1776:1838   */\n    tag_494:\n        /* \"#utility.yul\":1724:1844   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1850:1987   */\n    tag_430:\n        /* \"#utility.yul\":1895:1900   */\n      0x00\n        /* \"#utility.yul\":1933:1939   */\n      dup2\n        /* \"#utility.yul\":1920:1940   */\n      calldataload\n        /* \"#utility.yul\":1911:1940   */\n      swap1\n      pop\n        /* \"#utility.yul\":1949:1981   */\n      tag_496\n        /* \"#utility.yul\":1975:1980   */\n      dup2\n        /* \"#utility.yul\":1949:1981   */\n      tag_429\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":1850:1987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1993:2320   */\n    tag_49:\n        /* \"#utility.yul\":2051:2057   */\n      0x00\n        /* \"#utility.yul\":2100:2102   */\n      0x20\n        /* \"#utility.yul\":2088:2097   */\n      dup3\n        /* \"#utility.yul\":2079:2086   */\n      dup5\n        /* \"#utility.yul\":2075:2098   */\n      sub\n        /* \"#utility.yul\":2071:2103   */\n      slt\n        /* \"#utility.yul\":2068:2187   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":2106:2185   */\n      tag_499\n      tag_426\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":2068:2187   */\n    tag_498:\n        /* \"#utility.yul\":2226:2227   */\n      0x00\n        /* \"#utility.yul\":2251:2303   */\n      tag_500\n        /* \"#utility.yul\":2295:2302   */\n      dup5\n        /* \"#utility.yul\":2286:2292   */\n      dup3\n        /* \"#utility.yul\":2275:2284   */\n      dup6\n        /* \"#utility.yul\":2271:2293   */\n      add\n        /* \"#utility.yul\":2251:2303   */\n      tag_430\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":2241:2303   */\n      swap2\n      pop\n        /* \"#utility.yul\":2197:2313   */\n      pop\n        /* \"#utility.yul\":1993:2320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2326:2416   */\n    tag_431:\n        /* \"#utility.yul\":2360:2367   */\n      0x00\n        /* \"#utility.yul\":2403:2408   */\n      dup2\n        /* \"#utility.yul\":2396:2409   */\n      iszero\n        /* \"#utility.yul\":2389:2410   */\n      iszero\n        /* \"#utility.yul\":2378:2410   */\n      swap1\n      pop\n        /* \"#utility.yul\":2326:2416   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2422:2531   */\n    tag_432:\n        /* \"#utility.yul\":2503:2524   */\n      tag_503\n        /* \"#utility.yul\":2518:2523   */\n      dup2\n        /* \"#utility.yul\":2503:2524   */\n      tag_431\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":2498:2501   */\n      dup3\n        /* \"#utility.yul\":2491:2525   */\n      mstore\n        /* \"#utility.yul\":2422:2531   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2537:2747   */\n    tag_52:\n        /* \"#utility.yul\":2624:2628   */\n      0x00\n        /* \"#utility.yul\":2662:2664   */\n      0x20\n        /* \"#utility.yul\":2651:2660   */\n      dup3\n        /* \"#utility.yul\":2647:2665   */\n      add\n        /* \"#utility.yul\":2639:2665   */\n      swap1\n      pop\n        /* \"#utility.yul\":2675:2740   */\n      tag_505\n        /* \"#utility.yul\":2737:2738   */\n      0x00\n        /* \"#utility.yul\":2726:2735   */\n      dup4\n        /* \"#utility.yul\":2722:2739   */\n      add\n        /* \"#utility.yul\":2713:2719   */\n      dup5\n        /* \"#utility.yul\":2675:2740   */\n      tag_432\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":2537:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_433:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_434:\n        /* \"#utility.yul\":2909:2933   */\n      tag_508\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_433\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_509:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_435:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_511\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_434\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_60:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_514\n      tag_426\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":3185:3304   */\n    tag_513:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_515\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_435\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_436:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_437:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_518\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_436\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_438:\n        /* \"#utility.yul\":3765:3789   */\n      tag_520\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_437\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_63:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_522\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_438\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_439:\n        /* \"#utility.yul\":4103:4127   */\n      tag_524\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_437\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_525\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_525:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_440:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_527\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_439\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_67:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_530\n      tag_426\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":4396:4515   */\n    tag_529:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_531\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_440\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_532\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_435\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:4900   */\n    tag_441:\n        /* \"#utility.yul\":4892:4893   */\n      0x00\n        /* \"#utility.yul\":4889:4890   */\n      dup1\n        /* \"#utility.yul\":4882:4894   */\n      revert\n        /* \"#utility.yul\":4906:5023   */\n    tag_442:\n        /* \"#utility.yul\":5015:5016   */\n      0x00\n        /* \"#utility.yul\":5012:5013   */\n      dup1\n        /* \"#utility.yul\":5005:5017   */\n      revert\n        /* \"#utility.yul\":5029:5209   */\n    tag_367:\n        /* \"#utility.yul\":5077:5154   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5074:5075   */\n      0x00\n        /* \"#utility.yul\":5067:5155   */\n      mstore\n        /* \"#utility.yul\":5174:5178   */\n      0x41\n        /* \"#utility.yul\":5171:5172   */\n      0x04\n        /* \"#utility.yul\":5164:5179   */\n      mstore\n        /* \"#utility.yul\":5198:5202   */\n      0x24\n        /* \"#utility.yul\":5195:5196   */\n      0x00\n        /* \"#utility.yul\":5188:5203   */\n      revert\n        /* \"#utility.yul\":5215:5496   */\n    tag_443:\n        /* \"#utility.yul\":5298:5325   */\n      tag_537\n        /* \"#utility.yul\":5320:5324   */\n      dup3\n        /* \"#utility.yul\":5298:5325   */\n      tag_423\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":5290:5296   */\n      dup2\n        /* \"#utility.yul\":5286:5326   */\n      add\n        /* \"#utility.yul\":5428:5434   */\n      dup2\n        /* \"#utility.yul\":5416:5426   */\n      dup2\n        /* \"#utility.yul\":5413:5435   */\n      lt\n        /* \"#utility.yul\":5392:5410   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5380:5390   */\n      dup3\n        /* \"#utility.yul\":5377:5411   */\n      gt\n        /* \"#utility.yul\":5374:5436   */\n      or\n        /* \"#utility.yul\":5371:5459   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":5439:5457   */\n      tag_539\n      tag_367\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":5371:5459   */\n    tag_538:\n        /* \"#utility.yul\":5479:5489   */\n      dup1\n        /* \"#utility.yul\":5475:5477   */\n      0x40\n        /* \"#utility.yul\":5468:5490   */\n      mstore\n        /* \"#utility.yul\":5258:5496   */\n      pop\n        /* \"#utility.yul\":5215:5496   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5502:5631   */\n    tag_444:\n        /* \"#utility.yul\":5536:5542   */\n      0x00\n        /* \"#utility.yul\":5563:5583   */\n      tag_541\n      tag_425\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":5553:5583   */\n      swap1\n      pop\n        /* \"#utility.yul\":5592:5625   */\n      tag_542\n        /* \"#utility.yul\":5620:5624   */\n      dup3\n        /* \"#utility.yul\":5612:5618   */\n      dup3\n        /* \"#utility.yul\":5592:5625   */\n      tag_443\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":5502:5631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5637:5945   */\n    tag_445:\n        /* \"#utility.yul\":5699:5703   */\n      0x00\n        /* \"#utility.yul\":5789:5807   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5781:5787   */\n      dup3\n        /* \"#utility.yul\":5778:5808   */\n      gt\n        /* \"#utility.yul\":5775:5831   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":5811:5829   */\n      tag_545\n      tag_367\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":5775:5831   */\n    tag_544:\n        /* \"#utility.yul\":5849:5878   */\n      tag_546\n        /* \"#utility.yul\":5871:5877   */\n      dup3\n        /* \"#utility.yul\":5849:5878   */\n      tag_423\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":5841:5878   */\n      swap1\n      pop\n        /* \"#utility.yul\":5933:5937   */\n      0x20\n        /* \"#utility.yul\":5927:5931   */\n      dup2\n        /* \"#utility.yul\":5923:5938   */\n      add\n        /* \"#utility.yul\":5915:5938   */\n      swap1\n      pop\n        /* \"#utility.yul\":5637:5945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5951:6099   */\n    tag_446:\n        /* \"#utility.yul\":6049:6055   */\n      dup3\n        /* \"#utility.yul\":6044:6047   */\n      dup2\n        /* \"#utility.yul\":6039:6042   */\n      dup4\n        /* \"#utility.yul\":6026:6056   */\n      calldatacopy\n        /* \"#utility.yul\":6090:6091   */\n      0x00\n        /* \"#utility.yul\":6081:6087   */\n      dup4\n        /* \"#utility.yul\":6076:6079   */\n      dup4\n        /* \"#utility.yul\":6072:6088   */\n      add\n        /* \"#utility.yul\":6065:6092   */\n      mstore\n        /* \"#utility.yul\":5951:6099   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6105:6530   */\n    tag_447:\n        /* \"#utility.yul\":6183:6188   */\n      0x00\n        /* \"#utility.yul\":6208:6274   */\n      tag_549\n        /* \"#utility.yul\":6224:6273   */\n      tag_550\n        /* \"#utility.yul\":6266:6272   */\n      dup5\n        /* \"#utility.yul\":6224:6273   */\n      tag_445\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":6208:6274   */\n      tag_444\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":6199:6274   */\n      swap1\n      pop\n        /* \"#utility.yul\":6297:6303   */\n      dup3\n        /* \"#utility.yul\":6290:6295   */\n      dup2\n        /* \"#utility.yul\":6283:6304   */\n      mstore\n        /* \"#utility.yul\":6335:6339   */\n      0x20\n        /* \"#utility.yul\":6328:6333   */\n      dup2\n        /* \"#utility.yul\":6324:6340   */\n      add\n        /* \"#utility.yul\":6373:6376   */\n      dup5\n        /* \"#utility.yul\":6364:6370   */\n      dup5\n        /* \"#utility.yul\":6359:6362   */\n      dup5\n        /* \"#utility.yul\":6355:6371   */\n      add\n        /* \"#utility.yul\":6352:6377   */\n      gt\n        /* \"#utility.yul\":6349:6461   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":6380:6459   */\n      tag_552\n      tag_442\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":6349:6461   */\n    tag_551:\n        /* \"#utility.yul\":6470:6524   */\n      tag_553\n        /* \"#utility.yul\":6517:6523   */\n      dup5\n        /* \"#utility.yul\":6512:6515   */\n      dup3\n        /* \"#utility.yul\":6507:6510   */\n      dup6\n        /* \"#utility.yul\":6470:6524   */\n      tag_446\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":6189:6530   */\n      pop\n        /* \"#utility.yul\":6105:6530   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6550:6890   */\n    tag_448:\n        /* \"#utility.yul\":6606:6611   */\n      0x00\n        /* \"#utility.yul\":6655:6658   */\n      dup3\n        /* \"#utility.yul\":6648:6652   */\n      0x1f\n        /* \"#utility.yul\":6640:6646   */\n      dup4\n        /* \"#utility.yul\":6636:6653   */\n      add\n        /* \"#utility.yul\":6632:6659   */\n      slt\n        /* \"#utility.yul\":6622:6744   */\n      tag_555\n      jumpi\n        /* \"#utility.yul\":6663:6742   */\n      tag_556\n      tag_441\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":6622:6744   */\n    tag_555:\n        /* \"#utility.yul\":6780:6786   */\n      dup2\n        /* \"#utility.yul\":6767:6787   */\n      calldataload\n        /* \"#utility.yul\":6805:6884   */\n      tag_557\n        /* \"#utility.yul\":6880:6883   */\n      dup5\n        /* \"#utility.yul\":6872:6878   */\n      dup3\n        /* \"#utility.yul\":6865:6869   */\n      0x20\n        /* \"#utility.yul\":6857:6863   */\n      dup7\n        /* \"#utility.yul\":6853:6870   */\n      add\n        /* \"#utility.yul\":6805:6884   */\n      tag_447\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":6796:6884   */\n      swap2\n      pop\n        /* \"#utility.yul\":6612:6890   */\n      pop\n        /* \"#utility.yul\":6550:6890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6896:7695   */\n    tag_71:\n        /* \"#utility.yul\":6983:6989   */\n      0x00\n        /* \"#utility.yul\":6991:6997   */\n      dup1\n        /* \"#utility.yul\":6999:7005   */\n      0x00\n        /* \"#utility.yul\":7048:7050   */\n      0x60\n        /* \"#utility.yul\":7036:7045   */\n      dup5\n        /* \"#utility.yul\":7027:7034   */\n      dup7\n        /* \"#utility.yul\":7023:7046   */\n      sub\n        /* \"#utility.yul\":7019:7051   */\n      slt\n        /* \"#utility.yul\":7016:7135   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":7054:7133   */\n      tag_560\n      tag_426\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":7016:7135   */\n    tag_559:\n        /* \"#utility.yul\":7202:7203   */\n      0x00\n        /* \"#utility.yul\":7191:7200   */\n      dup5\n        /* \"#utility.yul\":7187:7204   */\n      add\n        /* \"#utility.yul\":7174:7205   */\n      calldataload\n        /* \"#utility.yul\":7232:7250   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7224:7230   */\n      dup2\n        /* \"#utility.yul\":7221:7251   */\n      gt\n        /* \"#utility.yul\":7218:7335   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":7254:7333   */\n      tag_562\n      tag_427\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":7218:7335   */\n    tag_561:\n        /* \"#utility.yul\":7359:7422   */\n      tag_563\n        /* \"#utility.yul\":7414:7421   */\n      dup7\n        /* \"#utility.yul\":7405:7411   */\n      dup3\n        /* \"#utility.yul\":7394:7403   */\n      dup8\n        /* \"#utility.yul\":7390:7412   */\n      add\n        /* \"#utility.yul\":7359:7422   */\n      tag_448\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":7349:7422   */\n      swap4\n      pop\n        /* \"#utility.yul\":7145:7432   */\n      pop\n        /* \"#utility.yul\":7471:7473   */\n      0x20\n        /* \"#utility.yul\":7497:7550   */\n      tag_564\n        /* \"#utility.yul\":7542:7549   */\n      dup7\n        /* \"#utility.yul\":7533:7539   */\n      dup3\n        /* \"#utility.yul\":7522:7531   */\n      dup8\n        /* \"#utility.yul\":7518:7540   */\n      add\n        /* \"#utility.yul\":7497:7550   */\n      tag_435\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":7487:7550   */\n      swap3\n      pop\n        /* \"#utility.yul\":7442:7560   */\n      pop\n        /* \"#utility.yul\":7599:7601   */\n      0x40\n        /* \"#utility.yul\":7625:7678   */\n      tag_565\n        /* \"#utility.yul\":7670:7677   */\n      dup7\n        /* \"#utility.yul\":7661:7667   */\n      dup3\n        /* \"#utility.yul\":7650:7659   */\n      dup8\n        /* \"#utility.yul\":7646:7668   */\n      add\n        /* \"#utility.yul\":7625:7678   */\n      tag_435\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":7615:7678   */\n      swap2\n      pop\n        /* \"#utility.yul\":7570:7688   */\n      pop\n        /* \"#utility.yul\":6896:7695   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7701:7819   */\n    tag_449:\n        /* \"#utility.yul\":7788:7812   */\n      tag_567\n        /* \"#utility.yul\":7806:7811   */\n      dup2\n        /* \"#utility.yul\":7788:7812   */\n      tag_433\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":7783:7786   */\n      dup3\n        /* \"#utility.yul\":7776:7813   */\n      mstore\n        /* \"#utility.yul\":7701:7819   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7825:8047   */\n    tag_77:\n        /* \"#utility.yul\":7918:7922   */\n      0x00\n        /* \"#utility.yul\":7956:7958   */\n      0x20\n        /* \"#utility.yul\":7945:7954   */\n      dup3\n        /* \"#utility.yul\":7941:7959   */\n      add\n        /* \"#utility.yul\":7933:7959   */\n      swap1\n      pop\n        /* \"#utility.yul\":7969:8040   */\n      tag_569\n        /* \"#utility.yul\":8037:8038   */\n      0x00\n        /* \"#utility.yul\":8026:8035   */\n      dup4\n        /* \"#utility.yul\":8022:8039   */\n      add\n        /* \"#utility.yul\":8013:8019   */\n      dup5\n        /* \"#utility.yul\":7969:8040   */\n      tag_449\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":7825:8047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8053:8672   */\n    tag_85:\n        /* \"#utility.yul\":8130:8136   */\n      0x00\n        /* \"#utility.yul\":8138:8144   */\n      dup1\n        /* \"#utility.yul\":8146:8152   */\n      0x00\n        /* \"#utility.yul\":8195:8197   */\n      0x60\n        /* \"#utility.yul\":8183:8192   */\n      dup5\n        /* \"#utility.yul\":8174:8181   */\n      dup7\n        /* \"#utility.yul\":8170:8193   */\n      sub\n        /* \"#utility.yul\":8166:8198   */\n      slt\n        /* \"#utility.yul\":8163:8282   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":8201:8280   */\n      tag_572\n      tag_426\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":8163:8282   */\n    tag_571:\n        /* \"#utility.yul\":8321:8322   */\n      0x00\n        /* \"#utility.yul\":8346:8399   */\n      tag_573\n        /* \"#utility.yul\":8391:8398   */\n      dup7\n        /* \"#utility.yul\":8382:8388   */\n      dup3\n        /* \"#utility.yul\":8371:8380   */\n      dup8\n        /* \"#utility.yul\":8367:8389   */\n      add\n        /* \"#utility.yul\":8346:8399   */\n      tag_440\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":8336:8399   */\n      swap4\n      pop\n        /* \"#utility.yul\":8292:8409   */\n      pop\n        /* \"#utility.yul\":8448:8450   */\n      0x20\n        /* \"#utility.yul\":8474:8527   */\n      tag_574\n        /* \"#utility.yul\":8519:8526   */\n      dup7\n        /* \"#utility.yul\":8510:8516   */\n      dup3\n        /* \"#utility.yul\":8499:8508   */\n      dup8\n        /* \"#utility.yul\":8495:8517   */\n      add\n        /* \"#utility.yul\":8474:8527   */\n      tag_440\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":8464:8527   */\n      swap3\n      pop\n        /* \"#utility.yul\":8419:8537   */\n      pop\n        /* \"#utility.yul\":8576:8578   */\n      0x40\n        /* \"#utility.yul\":8602:8655   */\n      tag_575\n        /* \"#utility.yul\":8647:8654   */\n      dup7\n        /* \"#utility.yul\":8638:8644   */\n      dup3\n        /* \"#utility.yul\":8627:8636   */\n      dup8\n        /* \"#utility.yul\":8623:8645   */\n      add\n        /* \"#utility.yul\":8602:8655   */\n      tag_435\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":8592:8655   */\n      swap2\n      pop\n        /* \"#utility.yul\":8547:8665   */\n      pop\n        /* \"#utility.yul\":8053:8672   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8678:9007   */\n    tag_128:\n        /* \"#utility.yul\":8737:8743   */\n      0x00\n        /* \"#utility.yul\":8786:8788   */\n      0x20\n        /* \"#utility.yul\":8774:8783   */\n      dup3\n        /* \"#utility.yul\":8765:8772   */\n      dup5\n        /* \"#utility.yul\":8761:8784   */\n      sub\n        /* \"#utility.yul\":8757:8789   */\n      slt\n        /* \"#utility.yul\":8754:8873   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":8792:8871   */\n      tag_578\n      tag_426\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":8754:8873   */\n    tag_577:\n        /* \"#utility.yul\":8912:8913   */\n      0x00\n        /* \"#utility.yul\":8937:8990   */\n      tag_579\n        /* \"#utility.yul\":8982:8989   */\n      dup5\n        /* \"#utility.yul\":8973:8979   */\n      dup3\n        /* \"#utility.yul\":8962:8971   */\n      dup6\n        /* \"#utility.yul\":8958:8980   */\n      add\n        /* \"#utility.yul\":8937:8990   */\n      tag_440\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":8927:8990   */\n      swap2\n      pop\n        /* \"#utility.yul\":8883:9000   */\n      pop\n        /* \"#utility.yul\":8678:9007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9013:9129   */\n    tag_450:\n        /* \"#utility.yul\":9083:9104   */\n      tag_581\n        /* \"#utility.yul\":9098:9103   */\n      dup2\n        /* \"#utility.yul\":9083:9104   */\n      tag_431\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":9076:9081   */\n      dup2\n        /* \"#utility.yul\":9073:9105   */\n      eq\n        /* \"#utility.yul\":9063:9123   */\n      tag_582\n      jumpi\n        /* \"#utility.yul\":9119:9120   */\n      0x00\n        /* \"#utility.yul\":9116:9117   */\n      dup1\n        /* \"#utility.yul\":9109:9121   */\n      revert\n        /* \"#utility.yul\":9063:9123   */\n    tag_582:\n        /* \"#utility.yul\":9013:9129   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9135:9268   */\n    tag_451:\n        /* \"#utility.yul\":9178:9183   */\n      0x00\n        /* \"#utility.yul\":9216:9222   */\n      dup2\n        /* \"#utility.yul\":9203:9223   */\n      calldataload\n        /* \"#utility.yul\":9194:9223   */\n      swap1\n      pop\n        /* \"#utility.yul\":9232:9262   */\n      tag_584\n        /* \"#utility.yul\":9256:9261   */\n      dup2\n        /* \"#utility.yul\":9232:9262   */\n      tag_450\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":9135:9268   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9274:9742   */\n    tag_150:\n        /* \"#utility.yul\":9339:9345   */\n      0x00\n        /* \"#utility.yul\":9347:9353   */\n      dup1\n        /* \"#utility.yul\":9396:9398   */\n      0x40\n        /* \"#utility.yul\":9384:9393   */\n      dup4\n        /* \"#utility.yul\":9375:9382   */\n      dup6\n        /* \"#utility.yul\":9371:9394   */\n      sub\n        /* \"#utility.yul\":9367:9399   */\n      slt\n        /* \"#utility.yul\":9364:9483   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":9402:9481   */\n      tag_587\n      tag_426\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":9364:9483   */\n    tag_586:\n        /* \"#utility.yul\":9522:9523   */\n      0x00\n        /* \"#utility.yul\":9547:9600   */\n      tag_588\n        /* \"#utility.yul\":9592:9599   */\n      dup6\n        /* \"#utility.yul\":9583:9589   */\n      dup3\n        /* \"#utility.yul\":9572:9581   */\n      dup7\n        /* \"#utility.yul\":9568:9590   */\n      add\n        /* \"#utility.yul\":9547:9600   */\n      tag_440\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":9537:9600   */\n      swap3\n      pop\n        /* \"#utility.yul\":9493:9610   */\n      pop\n        /* \"#utility.yul\":9649:9651   */\n      0x20\n        /* \"#utility.yul\":9675:9725   */\n      tag_589\n        /* \"#utility.yul\":9717:9724   */\n      dup6\n        /* \"#utility.yul\":9708:9714   */\n      dup3\n        /* \"#utility.yul\":9697:9706   */\n      dup7\n        /* \"#utility.yul\":9693:9715   */\n      add\n        /* \"#utility.yul\":9675:9725   */\n      tag_451\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":9665:9725   */\n      swap2\n      pop\n        /* \"#utility.yul\":9620:9735   */\n      pop\n        /* \"#utility.yul\":9274:9742   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9748:9852   */\n    tag_452:\n        /* \"#utility.yul\":9793:9800   */\n      0x00\n        /* \"#utility.yul\":9822:9846   */\n      tag_591\n        /* \"#utility.yul\":9840:9845   */\n      dup3\n        /* \"#utility.yul\":9822:9846   */\n      tag_436\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":9811:9846   */\n      swap1\n      pop\n        /* \"#utility.yul\":9748:9852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9858:10000   */\n    tag_453:\n        /* \"#utility.yul\":9961:9993   */\n      tag_593\n        /* \"#utility.yul\":9987:9992   */\n      dup2\n        /* \"#utility.yul\":9961:9993   */\n      tag_452\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":9956:9959   */\n      dup3\n        /* \"#utility.yul\":9949:9994   */\n      mstore\n        /* \"#utility.yul\":9858:10000   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10006:10260   */\n    tag_156:\n        /* \"#utility.yul\":10115:10119   */\n      0x00\n        /* \"#utility.yul\":10153:10155   */\n      0x20\n        /* \"#utility.yul\":10142:10151   */\n      dup3\n        /* \"#utility.yul\":10138:10156   */\n      add\n        /* \"#utility.yul\":10130:10156   */\n      swap1\n      pop\n        /* \"#utility.yul\":10166:10253   */\n      tag_595\n        /* \"#utility.yul\":10250:10251   */\n      0x00\n        /* \"#utility.yul\":10239:10248   */\n      dup4\n        /* \"#utility.yul\":10235:10252   */\n      add\n        /* \"#utility.yul\":10226:10232   */\n      dup5\n        /* \"#utility.yul\":10166:10253   */\n      tag_453\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":10006:10260   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10266:10573   */\n    tag_454:\n        /* \"#utility.yul\":10327:10331   */\n      0x00\n        /* \"#utility.yul\":10417:10435   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10409:10415   */\n      dup3\n        /* \"#utility.yul\":10406:10436   */\n      gt\n        /* \"#utility.yul\":10403:10459   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":10439:10457   */\n      tag_598\n      tag_367\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":10403:10459   */\n    tag_597:\n        /* \"#utility.yul\":10477:10506   */\n      tag_599\n        /* \"#utility.yul\":10499:10505   */\n      dup3\n        /* \"#utility.yul\":10477:10506   */\n      tag_423\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":10469:10506   */\n      swap1\n      pop\n        /* \"#utility.yul\":10561:10565   */\n      0x20\n        /* \"#utility.yul\":10555:10559   */\n      dup2\n        /* \"#utility.yul\":10551:10566   */\n      add\n        /* \"#utility.yul\":10543:10566   */\n      swap1\n      pop\n        /* \"#utility.yul\":10266:10573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10579:11002   */\n    tag_455:\n        /* \"#utility.yul\":10656:10661   */\n      0x00\n        /* \"#utility.yul\":10681:10746   */\n      tag_601\n        /* \"#utility.yul\":10697:10745   */\n      tag_602\n        /* \"#utility.yul\":10738:10744   */\n      dup5\n        /* \"#utility.yul\":10697:10745   */\n      tag_454\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":10681:10746   */\n      tag_444\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":10672:10746   */\n      swap1\n      pop\n        /* \"#utility.yul\":10769:10775   */\n      dup3\n        /* \"#utility.yul\":10762:10767   */\n      dup2\n        /* \"#utility.yul\":10755:10776   */\n      mstore\n        /* \"#utility.yul\":10807:10811   */\n      0x20\n        /* \"#utility.yul\":10800:10805   */\n      dup2\n        /* \"#utility.yul\":10796:10812   */\n      add\n        /* \"#utility.yul\":10845:10848   */\n      dup5\n        /* \"#utility.yul\":10836:10842   */\n      dup5\n        /* \"#utility.yul\":10831:10834   */\n      dup5\n        /* \"#utility.yul\":10827:10843   */\n      add\n        /* \"#utility.yul\":10824:10849   */\n      gt\n        /* \"#utility.yul\":10821:10933   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":10852:10931   */\n      tag_604\n      tag_442\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":10821:10933   */\n    tag_603:\n        /* \"#utility.yul\":10942:10996   */\n      tag_605\n        /* \"#utility.yul\":10989:10995   */\n      dup5\n        /* \"#utility.yul\":10984:10987   */\n      dup3\n        /* \"#utility.yul\":10979:10982   */\n      dup6\n        /* \"#utility.yul\":10942:10996   */\n      tag_446\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":10662:11002   */\n      pop\n        /* \"#utility.yul\":10579:11002   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11021:11359   */\n    tag_456:\n        /* \"#utility.yul\":11076:11081   */\n      0x00\n        /* \"#utility.yul\":11125:11128   */\n      dup3\n        /* \"#utility.yul\":11118:11122   */\n      0x1f\n        /* \"#utility.yul\":11110:11116   */\n      dup4\n        /* \"#utility.yul\":11106:11123   */\n      add\n        /* \"#utility.yul\":11102:11129   */\n      slt\n        /* \"#utility.yul\":11092:11214   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":11133:11212   */\n      tag_608\n      tag_441\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":11092:11214   */\n    tag_607:\n        /* \"#utility.yul\":11250:11256   */\n      dup2\n        /* \"#utility.yul\":11237:11257   */\n      calldataload\n        /* \"#utility.yul\":11275:11353   */\n      tag_609\n        /* \"#utility.yul\":11349:11352   */\n      dup5\n        /* \"#utility.yul\":11341:11347   */\n      dup3\n        /* \"#utility.yul\":11334:11338   */\n      0x20\n        /* \"#utility.yul\":11326:11332   */\n      dup7\n        /* \"#utility.yul\":11322:11339   */\n      add\n        /* \"#utility.yul\":11275:11353   */\n      tag_455\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":11266:11353   */\n      swap2\n      pop\n        /* \"#utility.yul\":11082:11359   */\n      pop\n        /* \"#utility.yul\":11021:11359   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11365:12308   */\n    tag_160:\n        /* \"#utility.yul\":11460:11466   */\n      0x00\n        /* \"#utility.yul\":11468:11474   */\n      dup1\n        /* \"#utility.yul\":11476:11482   */\n      0x00\n        /* \"#utility.yul\":11484:11490   */\n      dup1\n        /* \"#utility.yul\":11533:11536   */\n      0x80\n        /* \"#utility.yul\":11521:11530   */\n      dup6\n        /* \"#utility.yul\":11512:11519   */\n      dup8\n        /* \"#utility.yul\":11508:11531   */\n      sub\n        /* \"#utility.yul\":11504:11537   */\n      slt\n        /* \"#utility.yul\":11501:11621   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":11540:11619   */\n      tag_612\n      tag_426\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":11501:11621   */\n    tag_611:\n        /* \"#utility.yul\":11660:11661   */\n      0x00\n        /* \"#utility.yul\":11685:11738   */\n      tag_613\n        /* \"#utility.yul\":11730:11737   */\n      dup8\n        /* \"#utility.yul\":11721:11727   */\n      dup3\n        /* \"#utility.yul\":11710:11719   */\n      dup9\n        /* \"#utility.yul\":11706:11728   */\n      add\n        /* \"#utility.yul\":11685:11738   */\n      tag_440\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":11675:11738   */\n      swap5\n      pop\n        /* \"#utility.yul\":11631:11748   */\n      pop\n        /* \"#utility.yul\":11787:11789   */\n      0x20\n        /* \"#utility.yul\":11813:11866   */\n      tag_614\n        /* \"#utility.yul\":11858:11865   */\n      dup8\n        /* \"#utility.yul\":11849:11855   */\n      dup3\n        /* \"#utility.yul\":11838:11847   */\n      dup9\n        /* \"#utility.yul\":11834:11856   */\n      add\n        /* \"#utility.yul\":11813:11866   */\n      tag_440\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":11803:11866   */\n      swap4\n      pop\n        /* \"#utility.yul\":11758:11876   */\n      pop\n        /* \"#utility.yul\":11915:11917   */\n      0x40\n        /* \"#utility.yul\":11941:11994   */\n      tag_615\n        /* \"#utility.yul\":11986:11993   */\n      dup8\n        /* \"#utility.yul\":11977:11983   */\n      dup3\n        /* \"#utility.yul\":11966:11975   */\n      dup9\n        /* \"#utility.yul\":11962:11984   */\n      add\n        /* \"#utility.yul\":11941:11994   */\n      tag_435\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":11931:11994   */\n      swap3\n      pop\n        /* \"#utility.yul\":11886:12004   */\n      pop\n        /* \"#utility.yul\":12071:12073   */\n      0x60\n        /* \"#utility.yul\":12060:12069   */\n      dup6\n        /* \"#utility.yul\":12056:12074   */\n      add\n        /* \"#utility.yul\":12043:12075   */\n      calldataload\n        /* \"#utility.yul\":12102:12120   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12094:12100   */\n      dup2\n        /* \"#utility.yul\":12091:12121   */\n      gt\n        /* \"#utility.yul\":12088:12205   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":12124:12203   */\n      tag_617\n      tag_427\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":12088:12205   */\n    tag_616:\n        /* \"#utility.yul\":12229:12291   */\n      tag_618\n        /* \"#utility.yul\":12283:12290   */\n      dup8\n        /* \"#utility.yul\":12274:12280   */\n      dup3\n        /* \"#utility.yul\":12263:12272   */\n      dup9\n        /* \"#utility.yul\":12259:12281   */\n      add\n        /* \"#utility.yul\":12229:12291   */\n      tag_456\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":12219:12291   */\n      swap2\n      pop\n        /* \"#utility.yul\":12014:12301   */\n      pop\n        /* \"#utility.yul\":11365:12308   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12314:12788   */\n    tag_178:\n        /* \"#utility.yul\":12382:12388   */\n      0x00\n        /* \"#utility.yul\":12390:12396   */\n      dup1\n        /* \"#utility.yul\":12439:12441   */\n      0x40\n        /* \"#utility.yul\":12427:12436   */\n      dup4\n        /* \"#utility.yul\":12418:12425   */\n      dup6\n        /* \"#utility.yul\":12414:12437   */\n      sub\n        /* \"#utility.yul\":12410:12442   */\n      slt\n        /* \"#utility.yul\":12407:12526   */\n      iszero\n      tag_620\n      jumpi\n        /* \"#utility.yul\":12445:12524   */\n      tag_621\n      tag_426\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":12407:12526   */\n    tag_620:\n        /* \"#utility.yul\":12565:12566   */\n      0x00\n        /* \"#utility.yul\":12590:12643   */\n      tag_622\n        /* \"#utility.yul\":12635:12642   */\n      dup6\n        /* \"#utility.yul\":12626:12632   */\n      dup3\n        /* \"#utility.yul\":12615:12624   */\n      dup7\n        /* \"#utility.yul\":12611:12633   */\n      add\n        /* \"#utility.yul\":12590:12643   */\n      tag_440\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":12580:12643   */\n      swap3\n      pop\n        /* \"#utility.yul\":12536:12653   */\n      pop\n        /* \"#utility.yul\":12692:12694   */\n      0x20\n        /* \"#utility.yul\":12718:12771   */\n      tag_623\n        /* \"#utility.yul\":12763:12770   */\n      dup6\n        /* \"#utility.yul\":12754:12760   */\n      dup3\n        /* \"#utility.yul\":12743:12752   */\n      dup7\n        /* \"#utility.yul\":12739:12761   */\n      add\n        /* \"#utility.yul\":12718:12771   */\n      tag_440\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":12708:12771   */\n      swap2\n      pop\n        /* \"#utility.yul\":12663:12781   */\n      pop\n        /* \"#utility.yul\":12314:12788   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12794:12974   */\n    tag_457:\n        /* \"#utility.yul\":12842:12919   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12839:12840   */\n      0x00\n        /* \"#utility.yul\":12832:12920   */\n      mstore\n        /* \"#utility.yul\":12939:12943   */\n      0x22\n        /* \"#utility.yul\":12936:12937   */\n      0x04\n        /* \"#utility.yul\":12929:12944   */\n      mstore\n        /* \"#utility.yul\":12963:12967   */\n      0x24\n        /* \"#utility.yul\":12960:12961   */\n      0x00\n        /* \"#utility.yul\":12953:12968   */\n      revert\n        /* \"#utility.yul\":12980:13300   */\n    tag_189:\n        /* \"#utility.yul\":13024:13030   */\n      0x00\n        /* \"#utility.yul\":13061:13062   */\n      0x02\n        /* \"#utility.yul\":13055:13059   */\n      dup3\n        /* \"#utility.yul\":13051:13063   */\n      div\n        /* \"#utility.yul\":13041:13063   */\n      swap1\n      pop\n        /* \"#utility.yul\":13108:13109   */\n      0x01\n        /* \"#utility.yul\":13102:13106   */\n      dup3\n        /* \"#utility.yul\":13098:13110   */\n      and\n        /* \"#utility.yul\":13129:13147   */\n      dup1\n        /* \"#utility.yul\":13119:13200   */\n      tag_626\n      jumpi\n        /* \"#utility.yul\":13185:13189   */\n      0x7f\n        /* \"#utility.yul\":13177:13183   */\n      dup3\n        /* \"#utility.yul\":13173:13190   */\n      and\n        /* \"#utility.yul\":13163:13190   */\n      swap2\n      pop\n        /* \"#utility.yul\":13119:13200   */\n    tag_626:\n        /* \"#utility.yul\":13247:13249   */\n      0x20\n        /* \"#utility.yul\":13239:13245   */\n      dup3\n        /* \"#utility.yul\":13236:13250   */\n      lt\n        /* \"#utility.yul\":13216:13234   */\n      dup2\n        /* \"#utility.yul\":13213:13251   */\n      sub\n        /* \"#utility.yul\":13210:13294   */\n      tag_627\n      jumpi\n        /* \"#utility.yul\":13266:13284   */\n      tag_628\n      tag_457\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":13210:13294   */\n    tag_627:\n        /* \"#utility.yul\":13031:13300   */\n      pop\n        /* \"#utility.yul\":12980:13300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13306:13486   */\n    tag_458:\n        /* \"#utility.yul\":13446:13478   */\n      0x496e73756666696369656e742066756e647320696e2074726561737572790000\n        /* \"#utility.yul\":13442:13443   */\n      0x00\n        /* \"#utility.yul\":13434:13440   */\n      dup3\n        /* \"#utility.yul\":13430:13444   */\n      add\n        /* \"#utility.yul\":13423:13479   */\n      mstore\n        /* \"#utility.yul\":13306:13486   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13492:13858   */\n    tag_459:\n        /* \"#utility.yul\":13634:13637   */\n      0x00\n        /* \"#utility.yul\":13655:13722   */\n      tag_631\n        /* \"#utility.yul\":13719:13721   */\n      0x1e\n        /* \"#utility.yul\":13714:13717   */\n      dup4\n        /* \"#utility.yul\":13655:13722   */\n      tag_421\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":13648:13722   */\n      swap2\n      pop\n        /* \"#utility.yul\":13731:13824   */\n      tag_632\n        /* \"#utility.yul\":13820:13823   */\n      dup3\n        /* \"#utility.yul\":13731:13824   */\n      tag_458\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":13849:13851   */\n      0x20\n        /* \"#utility.yul\":13844:13847   */\n      dup3\n        /* \"#utility.yul\":13840:13852   */\n      add\n        /* \"#utility.yul\":13833:13852   */\n      swap1\n      pop\n        /* \"#utility.yul\":13492:13858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13864:14283   */\n    tag_218:\n        /* \"#utility.yul\":14030:14034   */\n      0x00\n        /* \"#utility.yul\":14068:14070   */\n      0x20\n        /* \"#utility.yul\":14057:14066   */\n      dup3\n        /* \"#utility.yul\":14053:14071   */\n      add\n        /* \"#utility.yul\":14045:14071   */\n      swap1\n      pop\n        /* \"#utility.yul\":14117:14126   */\n      dup2\n        /* \"#utility.yul\":14111:14115   */\n      dup2\n        /* \"#utility.yul\":14107:14127   */\n      sub\n        /* \"#utility.yul\":14103:14104   */\n      0x00\n        /* \"#utility.yul\":14092:14101   */\n      dup4\n        /* \"#utility.yul\":14088:14105   */\n      add\n        /* \"#utility.yul\":14081:14128   */\n      mstore\n        /* \"#utility.yul\":14145:14276   */\n      tag_634\n        /* \"#utility.yul\":14271:14275   */\n      dup2\n        /* \"#utility.yul\":14145:14276   */\n      tag_459\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":14137:14276   */\n      swap1\n      pop\n        /* \"#utility.yul\":13864:14283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14289:14712   */\n    tag_226:\n        /* \"#utility.yul\":14430:14434   */\n      0x00\n        /* \"#utility.yul\":14468:14470   */\n      0x40\n        /* \"#utility.yul\":14457:14466   */\n      dup3\n        /* \"#utility.yul\":14453:14471   */\n      add\n        /* \"#utility.yul\":14445:14471   */\n      swap1\n      pop\n        /* \"#utility.yul\":14481:14552   */\n      tag_636\n        /* \"#utility.yul\":14549:14550   */\n      0x00\n        /* \"#utility.yul\":14538:14547   */\n      dup4\n        /* \"#utility.yul\":14534:14551   */\n      add\n        /* \"#utility.yul\":14525:14531   */\n      dup6\n        /* \"#utility.yul\":14481:14552   */\n      tag_449\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":14599:14608   */\n      dup2\n        /* \"#utility.yul\":14593:14597   */\n      dup2\n        /* \"#utility.yul\":14589:14609   */\n      sub\n        /* \"#utility.yul\":14584:14586   */\n      0x20\n        /* \"#utility.yul\":14573:14582   */\n      dup4\n        /* \"#utility.yul\":14569:14587   */\n      add\n        /* \"#utility.yul\":14562:14610   */\n      mstore\n        /* \"#utility.yul\":14627:14705   */\n      tag_637\n        /* \"#utility.yul\":14700:14704   */\n      dup2\n        /* \"#utility.yul\":14691:14697   */\n      dup5\n        /* \"#utility.yul\":14627:14705   */\n      tag_424\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":14619:14705   */\n      swap1\n      pop\n        /* \"#utility.yul\":14289:14712   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14718:15160   */\n    tag_238:\n        /* \"#utility.yul\":14867:14871   */\n      0x00\n        /* \"#utility.yul\":14905:14907   */\n      0x60\n        /* \"#utility.yul\":14894:14903   */\n      dup3\n        /* \"#utility.yul\":14890:14908   */\n      add\n        /* \"#utility.yul\":14882:14908   */\n      swap1\n      pop\n        /* \"#utility.yul\":14918:14989   */\n      tag_639\n        /* \"#utility.yul\":14986:14987   */\n      0x00\n        /* \"#utility.yul\":14975:14984   */\n      dup4\n        /* \"#utility.yul\":14971:14988   */\n      add\n        /* \"#utility.yul\":14962:14968   */\n      dup7\n        /* \"#utility.yul\":14918:14989   */\n      tag_438\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":14999:15071   */\n      tag_640\n        /* \"#utility.yul\":15067:15069   */\n      0x20\n        /* \"#utility.yul\":15056:15065   */\n      dup4\n        /* \"#utility.yul\":15052:15070   */\n      add\n        /* \"#utility.yul\":15043:15049   */\n      dup6\n        /* \"#utility.yul\":14999:15071   */\n      tag_449\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":15081:15153   */\n      tag_641\n        /* \"#utility.yul\":15149:15151   */\n      0x40\n        /* \"#utility.yul\":15138:15147   */\n      dup4\n        /* \"#utility.yul\":15134:15152   */\n      add\n        /* \"#utility.yul\":15125:15131   */\n      dup5\n        /* \"#utility.yul\":15081:15153   */\n      tag_438\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":14718:15160   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15166:15342   */\n    tag_460:\n        /* \"#utility.yul\":15306:15334   */\n      0x4e4654206e6f74206f776e656420627920746865206775696c64000000000000\n        /* \"#utility.yul\":15302:15303   */\n      0x00\n        /* \"#utility.yul\":15294:15300   */\n      dup3\n        /* \"#utility.yul\":15290:15304   */\n      add\n        /* \"#utility.yul\":15283:15335   */\n      mstore\n        /* \"#utility.yul\":15166:15342   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15348:15714   */\n    tag_461:\n        /* \"#utility.yul\":15490:15493   */\n      0x00\n        /* \"#utility.yul\":15511:15578   */\n      tag_644\n        /* \"#utility.yul\":15575:15577   */\n      0x1a\n        /* \"#utility.yul\":15570:15573   */\n      dup4\n        /* \"#utility.yul\":15511:15578   */\n      tag_421\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":15504:15578   */\n      swap2\n      pop\n        /* \"#utility.yul\":15587:15680   */\n      tag_645\n        /* \"#utility.yul\":15676:15679   */\n      dup3\n        /* \"#utility.yul\":15587:15680   */\n      tag_460\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":15705:15707   */\n      0x20\n        /* \"#utility.yul\":15700:15703   */\n      dup3\n        /* \"#utility.yul\":15696:15708   */\n      add\n        /* \"#utility.yul\":15689:15708   */\n      swap1\n      pop\n        /* \"#utility.yul\":15348:15714   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15720:16139   */\n    tag_248:\n        /* \"#utility.yul\":15886:15890   */\n      0x00\n        /* \"#utility.yul\":15924:15926   */\n      0x20\n        /* \"#utility.yul\":15913:15922   */\n      dup3\n        /* \"#utility.yul\":15909:15927   */\n      add\n        /* \"#utility.yul\":15901:15927   */\n      swap1\n      pop\n        /* \"#utility.yul\":15973:15982   */\n      dup2\n        /* \"#utility.yul\":15967:15971   */\n      dup2\n        /* \"#utility.yul\":15963:15983   */\n      sub\n        /* \"#utility.yul\":15959:15960   */\n      0x00\n        /* \"#utility.yul\":15948:15957   */\n      dup4\n        /* \"#utility.yul\":15944:15961   */\n      add\n        /* \"#utility.yul\":15937:15984   */\n      mstore\n        /* \"#utility.yul\":16001:16132   */\n      tag_647\n        /* \"#utility.yul\":16127:16131   */\n      dup2\n        /* \"#utility.yul\":16001:16132   */\n      tag_461\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":15993:16132   */\n      swap1\n      pop\n        /* \"#utility.yul\":15720:16139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16145:16477   */\n    tag_251:\n        /* \"#utility.yul\":16266:16270   */\n      0x00\n        /* \"#utility.yul\":16304:16306   */\n      0x40\n        /* \"#utility.yul\":16293:16302   */\n      dup3\n        /* \"#utility.yul\":16289:16307   */\n      add\n        /* \"#utility.yul\":16281:16307   */\n      swap1\n      pop\n        /* \"#utility.yul\":16317:16388   */\n      tag_649\n        /* \"#utility.yul\":16385:16386   */\n      0x00\n        /* \"#utility.yul\":16374:16383   */\n      dup4\n        /* \"#utility.yul\":16370:16387   */\n      add\n        /* \"#utility.yul\":16361:16367   */\n      dup6\n        /* \"#utility.yul\":16317:16388   */\n      tag_449\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":16398:16470   */\n      tag_650\n        /* \"#utility.yul\":16466:16468   */\n      0x20\n        /* \"#utility.yul\":16455:16464   */\n      dup4\n        /* \"#utility.yul\":16451:16469   */\n      add\n        /* \"#utility.yul\":16442:16448   */\n      dup5\n        /* \"#utility.yul\":16398:16470   */\n      tag_438\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":16145:16477   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16483:16712   */\n    tag_462:\n        /* \"#utility.yul\":16623:16657   */\n      0x4f6e6c79206775696c64206d656d626572732063616e20706572666f726d2074\n        /* \"#utility.yul\":16619:16620   */\n      0x00\n        /* \"#utility.yul\":16611:16617   */\n      dup3\n        /* \"#utility.yul\":16607:16621   */\n      add\n        /* \"#utility.yul\":16600:16658   */\n      mstore\n        /* \"#utility.yul\":16692:16704   */\n      0x68697320616374696f6e00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16687:16689   */\n      0x20\n        /* \"#utility.yul\":16679:16685   */\n      dup3\n        /* \"#utility.yul\":16675:16690   */\n      add\n        /* \"#utility.yul\":16668:16705   */\n      mstore\n        /* \"#utility.yul\":16483:16712   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16718:17084   */\n    tag_463:\n        /* \"#utility.yul\":16860:16863   */\n      0x00\n        /* \"#utility.yul\":16881:16948   */\n      tag_653\n        /* \"#utility.yul\":16945:16947   */\n      0x2a\n        /* \"#utility.yul\":16940:16943   */\n      dup4\n        /* \"#utility.yul\":16881:16948   */\n      tag_421\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":16874:16948   */\n      swap2\n      pop\n        /* \"#utility.yul\":16957:17050   */\n      tag_654\n        /* \"#utility.yul\":17046:17049   */\n      dup3\n        /* \"#utility.yul\":16957:17050   */\n      tag_462\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":17075:17077   */\n      0x40\n        /* \"#utility.yul\":17070:17073   */\n      dup3\n        /* \"#utility.yul\":17066:17078   */\n      add\n        /* \"#utility.yul\":17059:17078   */\n      swap1\n      pop\n        /* \"#utility.yul\":16718:17084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17090:17509   */\n    tag_267:\n        /* \"#utility.yul\":17256:17260   */\n      0x00\n        /* \"#utility.yul\":17294:17296   */\n      0x20\n        /* \"#utility.yul\":17283:17292   */\n      dup3\n        /* \"#utility.yul\":17279:17297   */\n      add\n        /* \"#utility.yul\":17271:17297   */\n      swap1\n      pop\n        /* \"#utility.yul\":17343:17352   */\n      dup2\n        /* \"#utility.yul\":17337:17341   */\n      dup2\n        /* \"#utility.yul\":17333:17353   */\n      sub\n        /* \"#utility.yul\":17329:17330   */\n      0x00\n        /* \"#utility.yul\":17318:17327   */\n      dup4\n        /* \"#utility.yul\":17314:17331   */\n      add\n        /* \"#utility.yul\":17307:17354   */\n      mstore\n        /* \"#utility.yul\":17371:17502   */\n      tag_656\n        /* \"#utility.yul\":17497:17501   */\n      dup2\n        /* \"#utility.yul\":17371:17502   */\n      tag_463\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":17363:17502   */\n      swap1\n      pop\n        /* \"#utility.yul\":17090:17509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17515:17695   */\n    tag_464:\n        /* \"#utility.yul\":17563:17640   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17560:17561   */\n      0x00\n        /* \"#utility.yul\":17553:17641   */\n      mstore\n        /* \"#utility.yul\":17660:17664   */\n      0x11\n        /* \"#utility.yul\":17657:17658   */\n      0x04\n        /* \"#utility.yul\":17650:17665   */\n      mstore\n        /* \"#utility.yul\":17684:17688   */\n      0x24\n        /* \"#utility.yul\":17681:17682   */\n      0x00\n        /* \"#utility.yul\":17674:17689   */\n      revert\n        /* \"#utility.yul\":17701:18111   */\n    tag_278:\n        /* \"#utility.yul\":17741:17748   */\n      0x00\n        /* \"#utility.yul\":17764:17784   */\n      tag_659\n        /* \"#utility.yul\":17782:17783   */\n      dup3\n        /* \"#utility.yul\":17764:17784   */\n      tag_433\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":17759:17784   */\n      swap2\n      pop\n        /* \"#utility.yul\":17798:17818   */\n      tag_660\n        /* \"#utility.yul\":17816:17817   */\n      dup4\n        /* \"#utility.yul\":17798:17818   */\n      tag_433\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":17793:17818   */\n      swap3\n      pop\n        /* \"#utility.yul\":17853:17854   */\n      dup3\n        /* \"#utility.yul\":17850:17851   */\n      dup3\n        /* \"#utility.yul\":17846:17855   */\n      mul\n        /* \"#utility.yul\":17875:17905   */\n      tag_661\n        /* \"#utility.yul\":17893:17904   */\n      dup2\n        /* \"#utility.yul\":17875:17905   */\n      tag_433\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":17864:17905   */\n      swap2\n      pop\n        /* \"#utility.yul\":18054:18055   */\n      dup3\n        /* \"#utility.yul\":18045:18052   */\n      dup3\n        /* \"#utility.yul\":18041:18056   */\n      div\n        /* \"#utility.yul\":18038:18039   */\n      dup5\n        /* \"#utility.yul\":18035:18057   */\n      eq\n        /* \"#utility.yul\":18015:18016   */\n      dup4\n        /* \"#utility.yul\":18008:18017   */\n      iszero\n        /* \"#utility.yul\":17988:18071   */\n      or\n        /* \"#utility.yul\":17965:18104   */\n      tag_662\n      jumpi\n        /* \"#utility.yul\":18084:18102   */\n      tag_663\n      tag_464\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":17965:18104   */\n    tag_662:\n        /* \"#utility.yul\":17749:18111   */\n      pop\n        /* \"#utility.yul\":17701:18111   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18117:18297   */\n    tag_373:\n        /* \"#utility.yul\":18165:18242   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18162:18163   */\n      0x00\n        /* \"#utility.yul\":18155:18243   */\n      mstore\n        /* \"#utility.yul\":18262:18266   */\n      0x12\n        /* \"#utility.yul\":18259:18260   */\n      0x04\n        /* \"#utility.yul\":18252:18267   */\n      mstore\n        /* \"#utility.yul\":18286:18290   */\n      0x24\n        /* \"#utility.yul\":18283:18284   */\n      0x00\n        /* \"#utility.yul\":18276:18291   */\n      revert\n        /* \"#utility.yul\":18303:18488   */\n    tag_280:\n        /* \"#utility.yul\":18343:18344   */\n      0x00\n        /* \"#utility.yul\":18360:18380   */\n      tag_666\n        /* \"#utility.yul\":18378:18379   */\n      dup3\n        /* \"#utility.yul\":18360:18380   */\n      tag_433\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":18355:18380   */\n      swap2\n      pop\n        /* \"#utility.yul\":18394:18414   */\n      tag_667\n        /* \"#utility.yul\":18412:18413   */\n      dup4\n        /* \"#utility.yul\":18394:18414   */\n      tag_433\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":18389:18414   */\n      swap3\n      pop\n        /* \"#utility.yul\":18433:18434   */\n      dup3\n        /* \"#utility.yul\":18423:18458   */\n      tag_668\n      jumpi\n        /* \"#utility.yul\":18438:18456   */\n      tag_669\n      tag_373\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":18423:18458   */\n    tag_668:\n        /* \"#utility.yul\":18480:18481   */\n      dup3\n        /* \"#utility.yul\":18477:18478   */\n      dup3\n        /* \"#utility.yul\":18473:18482   */\n      div\n        /* \"#utility.yul\":18468:18482   */\n      swap1\n      pop\n        /* \"#utility.yul\":18303:18488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18494:18642   */\n    tag_465:\n        /* \"#utility.yul\":18596:18607   */\n      0x00\n        /* \"#utility.yul\":18633:18636   */\n      dup2\n        /* \"#utility.yul\":18618:18636   */\n      swap1\n      pop\n        /* \"#utility.yul\":18494:18642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18648:19038   */\n    tag_466:\n        /* \"#utility.yul\":18754:18757   */\n      0x00\n        /* \"#utility.yul\":18782:18821   */\n      tag_672\n        /* \"#utility.yul\":18815:18820   */\n      dup3\n        /* \"#utility.yul\":18782:18821   */\n      tag_420\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":18837:18926   */\n      tag_673\n        /* \"#utility.yul\":18919:18925   */\n      dup2\n        /* \"#utility.yul\":18914:18917   */\n      dup6\n        /* \"#utility.yul\":18837:18926   */\n      tag_465\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":18830:18926   */\n      swap4\n      pop\n        /* \"#utility.yul\":18935:19000   */\n      tag_674\n        /* \"#utility.yul\":18993:18999   */\n      dup2\n        /* \"#utility.yul\":18988:18991   */\n      dup6\n        /* \"#utility.yul\":18981:18985   */\n      0x20\n        /* \"#utility.yul\":18974:18979   */\n      dup7\n        /* \"#utility.yul\":18970:18986   */\n      add\n        /* \"#utility.yul\":18935:19000   */\n      tag_422\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":19025:19031   */\n      dup1\n        /* \"#utility.yul\":19020:19023   */\n      dup5\n        /* \"#utility.yul\":19016:19032   */\n      add\n        /* \"#utility.yul\":19009:19032   */\n      swap2\n      pop\n        /* \"#utility.yul\":18758:19038   */\n      pop\n        /* \"#utility.yul\":18648:19038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19044:19479   */\n    tag_300:\n        /* \"#utility.yul\":19224:19227   */\n      0x00\n        /* \"#utility.yul\":19246:19341   */\n      tag_676\n        /* \"#utility.yul\":19337:19340   */\n      dup3\n        /* \"#utility.yul\":19328:19334   */\n      dup6\n        /* \"#utility.yul\":19246:19341   */\n      tag_466\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":19239:19341   */\n      swap2\n      pop\n        /* \"#utility.yul\":19358:19453   */\n      tag_677\n        /* \"#utility.yul\":19449:19452   */\n      dup3\n        /* \"#utility.yul\":19440:19446   */\n      dup5\n        /* \"#utility.yul\":19358:19453   */\n      tag_466\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":19351:19453   */\n      swap2\n      pop\n        /* \"#utility.yul\":19470:19473   */\n      dup2\n        /* \"#utility.yul\":19463:19473   */\n      swap1\n      pop\n        /* \"#utility.yul\":19044:19479   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19485:19545   */\n    tag_467:\n        /* \"#utility.yul\":19513:19516   */\n      0x00\n        /* \"#utility.yul\":19534:19539   */\n      dup2\n        /* \"#utility.yul\":19527:19539   */\n      swap1\n      pop\n        /* \"#utility.yul\":19485:19545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19551:19693   */\n    tag_468:\n        /* \"#utility.yul\":19601:19610   */\n      0x00\n        /* \"#utility.yul\":19634:19687   */\n      tag_680\n        /* \"#utility.yul\":19652:19686   */\n      tag_681\n        /* \"#utility.yul\":19661:19685   */\n      tag_682\n        /* \"#utility.yul\":19679:19684   */\n      dup5\n        /* \"#utility.yul\":19661:19685   */\n      tag_436\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":19652:19686   */\n      tag_467\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":19634:19687   */\n      tag_436\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":19621:19687   */\n      swap1\n      pop\n        /* \"#utility.yul\":19551:19693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19699:19825   */\n    tag_469:\n        /* \"#utility.yul\":19749:19758   */\n      0x00\n        /* \"#utility.yul\":19782:19819   */\n      tag_684\n        /* \"#utility.yul\":19813:19818   */\n      dup3\n        /* \"#utility.yul\":19782:19819   */\n      tag_468\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":19769:19819   */\n      swap1\n      pop\n        /* \"#utility.yul\":19699:19825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19831:19965   */\n    tag_470:\n        /* \"#utility.yul\":19889:19898   */\n      0x00\n        /* \"#utility.yul\":19922:19959   */\n      tag_686\n        /* \"#utility.yul\":19953:19958   */\n      dup3\n        /* \"#utility.yul\":19922:19959   */\n      tag_469\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":19909:19959   */\n      swap1\n      pop\n        /* \"#utility.yul\":19831:19965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19971:20118   */\n    tag_471:\n        /* \"#utility.yul\":20066:20111   */\n      tag_688\n        /* \"#utility.yul\":20105:20110   */\n      dup2\n        /* \"#utility.yul\":20066:20111   */\n      tag_470\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":20061:20064   */\n      dup3\n        /* \"#utility.yul\":20054:20112   */\n      mstore\n        /* \"#utility.yul\":19971:20118   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20124:20472   */\n    tag_308:\n        /* \"#utility.yul\":20253:20257   */\n      0x00\n        /* \"#utility.yul\":20291:20293   */\n      0x40\n        /* \"#utility.yul\":20280:20289   */\n      dup3\n        /* \"#utility.yul\":20276:20294   */\n      add\n        /* \"#utility.yul\":20268:20294   */\n      swap1\n      pop\n        /* \"#utility.yul\":20304:20375   */\n      tag_690\n        /* \"#utility.yul\":20372:20373   */\n      0x00\n        /* \"#utility.yul\":20361:20370   */\n      dup4\n        /* \"#utility.yul\":20357:20374   */\n      add\n        /* \"#utility.yul\":20348:20354   */\n      dup6\n        /* \"#utility.yul\":20304:20375   */\n      tag_449\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":20385:20465   */\n      tag_691\n        /* \"#utility.yul\":20461:20463   */\n      0x20\n        /* \"#utility.yul\":20450:20459   */\n      dup4\n        /* \"#utility.yul\":20446:20464   */\n      add\n        /* \"#utility.yul\":20437:20443   */\n      dup5\n        /* \"#utility.yul\":20385:20465   */\n      tag_471\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":20124:20472   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20478:20576   */\n    tag_472:\n        /* \"#utility.yul\":20529:20535   */\n      0x00\n        /* \"#utility.yul\":20563:20568   */\n      dup2\n        /* \"#utility.yul\":20557:20569   */\n      mload\n        /* \"#utility.yul\":20547:20569   */\n      swap1\n      pop\n        /* \"#utility.yul\":20478:20576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20582:20750   */\n    tag_473:\n        /* \"#utility.yul\":20665:20676   */\n      0x00\n        /* \"#utility.yul\":20699:20705   */\n      dup3\n        /* \"#utility.yul\":20694:20697   */\n      dup3\n        /* \"#utility.yul\":20687:20706   */\n      mstore\n        /* \"#utility.yul\":20739:20743   */\n      0x20\n        /* \"#utility.yul\":20734:20737   */\n      dup3\n        /* \"#utility.yul\":20730:20744   */\n      add\n        /* \"#utility.yul\":20715:20744   */\n      swap1\n      pop\n        /* \"#utility.yul\":20582:20750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20756:21129   */\n    tag_474:\n        /* \"#utility.yul\":20842:20845   */\n      0x00\n        /* \"#utility.yul\":20870:20908   */\n      tag_695\n        /* \"#utility.yul\":20902:20907   */\n      dup3\n        /* \"#utility.yul\":20870:20908   */\n      tag_472\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":20924:20994   */\n      tag_696\n        /* \"#utility.yul\":20987:20993   */\n      dup2\n        /* \"#utility.yul\":20982:20985   */\n      dup6\n        /* \"#utility.yul\":20924:20994   */\n      tag_473\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":20917:20994   */\n      swap4\n      pop\n        /* \"#utility.yul\":21003:21068   */\n      tag_697\n        /* \"#utility.yul\":21061:21067   */\n      dup2\n        /* \"#utility.yul\":21056:21059   */\n      dup6\n        /* \"#utility.yul\":21049:21053   */\n      0x20\n        /* \"#utility.yul\":21042:21047   */\n      dup7\n        /* \"#utility.yul\":21038:21054   */\n      add\n        /* \"#utility.yul\":21003:21068   */\n      tag_422\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":21093:21122   */\n      tag_698\n        /* \"#utility.yul\":21115:21121   */\n      dup2\n        /* \"#utility.yul\":21093:21122   */\n      tag_423\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":21088:21091   */\n      dup5\n        /* \"#utility.yul\":21084:21123   */\n      add\n        /* \"#utility.yul\":21077:21123   */\n      swap2\n      pop\n        /* \"#utility.yul\":20846:21129   */\n      pop\n        /* \"#utility.yul\":20756:21129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21135:21775   */\n    tag_345:\n        /* \"#utility.yul\":21330:21334   */\n      0x00\n        /* \"#utility.yul\":21368:21371   */\n      0x80\n        /* \"#utility.yul\":21357:21366   */\n      dup3\n        /* \"#utility.yul\":21353:21372   */\n      add\n        /* \"#utility.yul\":21345:21372   */\n      swap1\n      pop\n        /* \"#utility.yul\":21382:21453   */\n      tag_700\n        /* \"#utility.yul\":21450:21451   */\n      0x00\n        /* \"#utility.yul\":21439:21448   */\n      dup4\n        /* \"#utility.yul\":21435:21452   */\n      add\n        /* \"#utility.yul\":21426:21432   */\n      dup8\n        /* \"#utility.yul\":21382:21453   */\n      tag_438\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":21463:21535   */\n      tag_701\n        /* \"#utility.yul\":21531:21533   */\n      0x20\n        /* \"#utility.yul\":21520:21529   */\n      dup4\n        /* \"#utility.yul\":21516:21534   */\n      add\n        /* \"#utility.yul\":21507:21513   */\n      dup7\n        /* \"#utility.yul\":21463:21535   */\n      tag_438\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":21545:21617   */\n      tag_702\n        /* \"#utility.yul\":21613:21615   */\n      0x40\n        /* \"#utility.yul\":21602:21611   */\n      dup4\n        /* \"#utility.yul\":21598:21616   */\n      add\n        /* \"#utility.yul\":21589:21595   */\n      dup6\n        /* \"#utility.yul\":21545:21617   */\n      tag_449\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":21664:21673   */\n      dup2\n        /* \"#utility.yul\":21658:21662   */\n      dup2\n        /* \"#utility.yul\":21654:21674   */\n      sub\n        /* \"#utility.yul\":21649:21651   */\n      0x60\n        /* \"#utility.yul\":21638:21647   */\n      dup4\n        /* \"#utility.yul\":21634:21652   */\n      add\n        /* \"#utility.yul\":21627:21675   */\n      mstore\n        /* \"#utility.yul\":21692:21768   */\n      tag_703\n        /* \"#utility.yul\":21763:21767   */\n      dup2\n        /* \"#utility.yul\":21754:21760   */\n      dup5\n        /* \"#utility.yul\":21692:21768   */\n      tag_474\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":21684:21768   */\n      swap1\n      pop\n        /* \"#utility.yul\":21135:21775   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21781:21922   */\n    tag_475:\n        /* \"#utility.yul\":21837:21842   */\n      0x00\n        /* \"#utility.yul\":21868:21874   */\n      dup2\n        /* \"#utility.yul\":21862:21875   */\n      mload\n        /* \"#utility.yul\":21853:21875   */\n      swap1\n      pop\n        /* \"#utility.yul\":21884:21916   */\n      tag_705\n        /* \"#utility.yul\":21910:21915   */\n      dup2\n        /* \"#utility.yul\":21884:21916   */\n      tag_429\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":21781:21922   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21928:22277   */\n    tag_348:\n        /* \"#utility.yul\":21997:22003   */\n      0x00\n        /* \"#utility.yul\":22046:22048   */\n      0x20\n        /* \"#utility.yul\":22034:22043   */\n      dup3\n        /* \"#utility.yul\":22025:22032   */\n      dup5\n        /* \"#utility.yul\":22021:22044   */\n      sub\n        /* \"#utility.yul\":22017:22049   */\n      slt\n        /* \"#utility.yul\":22014:22133   */\n      iszero\n      tag_707\n      jumpi\n        /* \"#utility.yul\":22052:22131   */\n      tag_708\n      tag_426\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":22014:22133   */\n    tag_707:\n        /* \"#utility.yul\":22172:22173   */\n      0x00\n        /* \"#utility.yul\":22197:22260   */\n      tag_709\n        /* \"#utility.yul\":22252:22259   */\n      dup5\n        /* \"#utility.yul\":22243:22249   */\n      dup3\n        /* \"#utility.yul\":22232:22241   */\n      dup6\n        /* \"#utility.yul\":22228:22250   */\n      add\n        /* \"#utility.yul\":22197:22260   */\n      tag_475\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":22187:22260   */\n      swap2\n      pop\n        /* \"#utility.yul\":22143:22270   */\n      pop\n        /* \"#utility.yul\":21928:22277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22283:22615   */\n    tag_393:\n        /* \"#utility.yul\":22404:22408   */\n      0x00\n        /* \"#utility.yul\":22442:22444   */\n      0x40\n        /* \"#utility.yul\":22431:22440   */\n      dup3\n        /* \"#utility.yul\":22427:22445   */\n      add\n        /* \"#utility.yul\":22419:22445   */\n      swap1\n      pop\n        /* \"#utility.yul\":22455:22526   */\n      tag_711\n        /* \"#utility.yul\":22523:22524   */\n      0x00\n        /* \"#utility.yul\":22512:22521   */\n      dup4\n        /* \"#utility.yul\":22508:22525   */\n      add\n        /* \"#utility.yul\":22499:22505   */\n      dup6\n        /* \"#utility.yul\":22455:22526   */\n      tag_438\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":22536:22608   */\n      tag_712\n        /* \"#utility.yul\":22604:22606   */\n      0x20\n        /* \"#utility.yul\":22593:22602   */\n      dup4\n        /* \"#utility.yul\":22589:22607   */\n      add\n        /* \"#utility.yul\":22580:22586   */\n      dup5\n        /* \"#utility.yul\":22536:22608   */\n      tag_449\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":22283:22615   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220311bd884557d50102ed7c7e9c8668cd36b909e2deda34e214a3a64bf38709a3064736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_825": {
									"entryPoint": null,
									"id": 825,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:16",
										"nodeType": "YulBlock",
										"src": "0:5231:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:16",
													"nodeType": "YulBlock",
													"src": "66:40:16",
													"statements": [
														{
															"nativeSrc": "77:22:16",
															"nodeType": "YulAssignment",
															"src": "77:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:16"
																},
																"nativeSrc": "87:12:16",
																"nodeType": "YulFunctionCall",
																"src": "87:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:16",
														"nodeType": "YulTypedName",
														"src": "49:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:16",
														"nodeType": "YulTypedName",
														"src": "59:6:16",
														"type": ""
													}
												],
												"src": "7:99:16"
											},
											{
												"body": {
													"nativeSrc": "140:152:16",
													"nodeType": "YulBlock",
													"src": "140:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:16",
																		"nodeType": "YulLiteral",
																		"src": "157:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:16",
																		"nodeType": "YulLiteral",
																		"src": "160:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:16"
																},
																"nativeSrc": "150:88:16",
																"nodeType": "YulFunctionCall",
																"src": "150:88:16"
															},
															"nativeSrc": "150:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:16",
																		"nodeType": "YulLiteral",
																		"src": "254:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:16",
																		"nodeType": "YulLiteral",
																		"src": "257:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:16"
																},
																"nativeSrc": "247:15:16",
																"nodeType": "YulFunctionCall",
																"src": "247:15:16"
															},
															"nativeSrc": "247:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:16",
																		"nodeType": "YulLiteral",
																		"src": "278:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:16",
																		"nodeType": "YulLiteral",
																		"src": "281:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:16"
																},
																"nativeSrc": "271:15:16",
																"nodeType": "YulFunctionCall",
																"src": "271:15:16"
															},
															"nativeSrc": "271:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:16"
											},
											{
												"body": {
													"nativeSrc": "326:152:16",
													"nodeType": "YulBlock",
													"src": "326:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:16",
																		"nodeType": "YulLiteral",
																		"src": "343:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:16",
																		"nodeType": "YulLiteral",
																		"src": "346:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:16"
																},
																"nativeSrc": "336:88:16",
																"nodeType": "YulFunctionCall",
																"src": "336:88:16"
															},
															"nativeSrc": "336:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:16",
																		"nodeType": "YulLiteral",
																		"src": "440:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:16",
																		"nodeType": "YulLiteral",
																		"src": "443:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:16"
																},
																"nativeSrc": "433:15:16",
																"nodeType": "YulFunctionCall",
																"src": "433:15:16"
															},
															"nativeSrc": "433:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:16",
																		"nodeType": "YulLiteral",
																		"src": "464:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:16",
																		"nodeType": "YulLiteral",
																		"src": "467:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:16"
																},
																"nativeSrc": "457:15:16",
																"nodeType": "YulFunctionCall",
																"src": "457:15:16"
															},
															"nativeSrc": "457:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:16"
											},
											{
												"body": {
													"nativeSrc": "535:269:16",
													"nodeType": "YulBlock",
													"src": "535:269:16",
													"statements": [
														{
															"nativeSrc": "545:22:16",
															"nodeType": "YulAssignment",
															"src": "545:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:16",
																		"nodeType": "YulLiteral",
																		"src": "565:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:16"
																},
																"nativeSrc": "555:12:16",
																"nodeType": "YulFunctionCall",
																"src": "555:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:16"
																}
															]
														},
														{
															"nativeSrc": "576:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:16",
																		"nodeType": "YulLiteral",
																		"src": "612:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:16"
																},
																"nativeSrc": "602:12:16",
																"nodeType": "YulFunctionCall",
																"src": "602:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:16",
																	"nodeType": "YulTypedName",
																	"src": "580:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:16",
																"nodeType": "YulBlock",
																"src": "653:51:16",
																"statements": [
																	{
																		"nativeSrc": "667:27:16",
																		"nodeType": "YulAssignment",
																		"src": "667:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:16",
																					"nodeType": "YulLiteral",
																					"src": "689:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:16"
																			},
																			"nativeSrc": "677:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:16"
																},
																"nativeSrc": "626:26:16",
																"nodeType": "YulFunctionCall",
																"src": "626:26:16"
															},
															"nativeSrc": "623:81:16",
															"nodeType": "YulIf",
															"src": "623:81:16"
														},
														{
															"body": {
																"nativeSrc": "756:42:16",
																"nodeType": "YulBlock",
																"src": "756:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:16"
																			},
																			"nativeSrc": "770:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:16"
																		},
																		"nativeSrc": "770:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:16",
																				"nodeType": "YulLiteral",
																				"src": "751:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:16"
																		},
																		"nativeSrc": "740:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:16"
																},
																"nativeSrc": "717:38:16",
																"nodeType": "YulFunctionCall",
																"src": "717:38:16"
															},
															"nativeSrc": "714:84:16",
															"nodeType": "YulIf",
															"src": "714:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:16",
														"nodeType": "YulTypedName",
														"src": "519:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:16",
														"nodeType": "YulTypedName",
														"src": "528:6:16",
														"type": ""
													}
												],
												"src": "484:320:16"
											},
											{
												"body": {
													"nativeSrc": "864:87:16",
													"nodeType": "YulBlock",
													"src": "864:87:16",
													"statements": [
														{
															"nativeSrc": "874:11:16",
															"nodeType": "YulAssignment",
															"src": "874:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:16",
																"nodeType": "YulIdentifier",
																"src": "882:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:16",
																		"nodeType": "YulLiteral",
																		"src": "902:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:16"
																},
																"nativeSrc": "895:14:16",
																"nodeType": "YulFunctionCall",
																"src": "895:14:16"
															},
															"nativeSrc": "895:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:16"
														},
														{
															"nativeSrc": "918:26:16",
															"nodeType": "YulAssignment",
															"src": "918:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:16",
																		"nodeType": "YulLiteral",
																		"src": "936:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:16",
																		"nodeType": "YulLiteral",
																		"src": "939:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:16"
																},
																"nativeSrc": "926:18:16",
																"nodeType": "YulFunctionCall",
																"src": "926:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:16",
														"nodeType": "YulTypedName",
														"src": "851:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:16",
														"nodeType": "YulTypedName",
														"src": "859:4:16",
														"type": ""
													}
												],
												"src": "810:141:16"
											},
											{
												"body": {
													"nativeSrc": "1001:49:16",
													"nodeType": "YulBlock",
													"src": "1001:49:16",
													"statements": [
														{
															"nativeSrc": "1011:33:16",
															"nodeType": "YulAssignment",
															"src": "1011:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:16"
																		},
																		"nativeSrc": "1025:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:16"
																},
																"nativeSrc": "1021:23:16",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:16",
														"nodeType": "YulTypedName",
														"src": "984:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:16",
														"nodeType": "YulTypedName",
														"src": "994:6:16",
														"type": ""
													}
												],
												"src": "957:93:16"
											},
											{
												"body": {
													"nativeSrc": "1109:54:16",
													"nodeType": "YulBlock",
													"src": "1109:54:16",
													"statements": [
														{
															"nativeSrc": "1119:37:16",
															"nodeType": "YulAssignment",
															"src": "1119:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:16"
																},
																"nativeSrc": "1140:16:16",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:16",
														"nodeType": "YulTypedName",
														"src": "1084:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:16",
														"nodeType": "YulTypedName",
														"src": "1090:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:16",
														"nodeType": "YulTypedName",
														"src": "1100:8:16",
														"type": ""
													}
												],
												"src": "1056:107:16"
											},
											{
												"body": {
													"nativeSrc": "1245:317:16",
													"nodeType": "YulBlock",
													"src": "1245:317:16",
													"statements": [
														{
															"nativeSrc": "1255:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:16"
																},
																"nativeSrc": "1272:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:16",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:16",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:16"
																},
																"nativeSrc": "1311:97:16",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:16",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:16",
															"nodeType": "YulAssignment",
															"src": "1417:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:16"
																},
																"nativeSrc": "1429:39:16",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:16"
																}
															]
														},
														{
															"nativeSrc": "1477:30:16",
															"nodeType": "YulAssignment",
															"src": "1477:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:16"
																		},
																		"nativeSrc": "1497:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:16"
																},
																"nativeSrc": "1486:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:16"
																}
															]
														},
														{
															"nativeSrc": "1516:40:16",
															"nodeType": "YulAssignment",
															"src": "1516:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:16"
																		},
																		"nativeSrc": "1536:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:16"
																},
																"nativeSrc": "1526:30:16",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:16",
														"nodeType": "YulTypedName",
														"src": "1206:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:16",
														"nodeType": "YulTypedName",
														"src": "1213:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:16",
														"nodeType": "YulTypedName",
														"src": "1225:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:16",
														"nodeType": "YulTypedName",
														"src": "1238:6:16",
														"type": ""
													}
												],
												"src": "1169:393:16"
											},
											{
												"body": {
													"nativeSrc": "1613:32:16",
													"nodeType": "YulBlock",
													"src": "1613:32:16",
													"statements": [
														{
															"nativeSrc": "1623:16:16",
															"nodeType": "YulAssignment",
															"src": "1623:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:16",
																"nodeType": "YulIdentifier",
																"src": "1634:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:16",
														"nodeType": "YulTypedName",
														"src": "1595:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:16",
														"nodeType": "YulTypedName",
														"src": "1605:7:16",
														"type": ""
													}
												],
												"src": "1568:77:16"
											},
											{
												"body": {
													"nativeSrc": "1683:28:16",
													"nodeType": "YulBlock",
													"src": "1683:28:16",
													"statements": [
														{
															"nativeSrc": "1693:12:16",
															"nodeType": "YulAssignment",
															"src": "1693:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:16",
																"nodeType": "YulIdentifier",
																"src": "1700:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:16",
														"nodeType": "YulTypedName",
														"src": "1669:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:16",
														"nodeType": "YulTypedName",
														"src": "1679:3:16",
														"type": ""
													}
												],
												"src": "1651:60:16"
											},
											{
												"body": {
													"nativeSrc": "1777:82:16",
													"nodeType": "YulBlock",
													"src": "1777:82:16",
													"statements": [
														{
															"nativeSrc": "1787:66:16",
															"nodeType": "YulAssignment",
															"src": "1787:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:16"
																				},
																				"nativeSrc": "1827:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:16"
																		},
																		"nativeSrc": "1818:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:16"
																},
																"nativeSrc": "1800:53:16",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:16",
														"nodeType": "YulTypedName",
														"src": "1757:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:16",
														"nodeType": "YulTypedName",
														"src": "1767:9:16",
														"type": ""
													}
												],
												"src": "1717:142:16"
											},
											{
												"body": {
													"nativeSrc": "1912:28:16",
													"nodeType": "YulBlock",
													"src": "1912:28:16",
													"statements": [
														{
															"nativeSrc": "1922:12:16",
															"nodeType": "YulAssignment",
															"src": "1922:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:16",
																"nodeType": "YulIdentifier",
																"src": "1929:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:16",
														"nodeType": "YulTypedName",
														"src": "1898:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:16",
														"nodeType": "YulTypedName",
														"src": "1908:3:16",
														"type": ""
													}
												],
												"src": "1865:75:16"
											},
											{
												"body": {
													"nativeSrc": "2022:193:16",
													"nodeType": "YulBlock",
													"src": "2022:193:16",
													"statements": [
														{
															"nativeSrc": "2032:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:16"
																},
																"nativeSrc": "2056:39:16",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:16",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:16"
																				},
																				"nativeSrc": "2145:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:16"
																				},
																				"nativeSrc": "2166:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:16"
																		},
																		"nativeSrc": "2117:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:16"
																},
																"nativeSrc": "2104:105:16",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:16"
															},
															"nativeSrc": "2104:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:16",
														"nodeType": "YulTypedName",
														"src": "1999:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:16",
														"nodeType": "YulTypedName",
														"src": "2005:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:16",
														"nodeType": "YulTypedName",
														"src": "2013:7:16",
														"type": ""
													}
												],
												"src": "1946:269:16"
											},
											{
												"body": {
													"nativeSrc": "2270:24:16",
													"nodeType": "YulBlock",
													"src": "2270:24:16",
													"statements": [
														{
															"nativeSrc": "2280:8:16",
															"nodeType": "YulAssignment",
															"src": "2280:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:16",
																"nodeType": "YulLiteral",
																"src": "2287:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:16",
														"nodeType": "YulTypedName",
														"src": "2266:3:16",
														"type": ""
													}
												],
												"src": "2221:73:16"
											},
											{
												"body": {
													"nativeSrc": "2353:136:16",
													"nodeType": "YulBlock",
													"src": "2353:136:16",
													"statements": [
														{
															"nativeSrc": "2363:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:16"
																},
																"nativeSrc": "2377:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:16"
																},
																"nativeSrc": "2418:65:16",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:16"
															},
															"nativeSrc": "2418:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:16",
														"nodeType": "YulTypedName",
														"src": "2339:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:16",
														"nodeType": "YulTypedName",
														"src": "2345:6:16",
														"type": ""
													}
												],
												"src": "2300:189:16"
											},
											{
												"body": {
													"nativeSrc": "2545:136:16",
													"nodeType": "YulBlock",
													"src": "2545:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:16",
																"nodeType": "YulBlock",
																"src": "2612:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:16"
																			},
																			"nativeSrc": "2626:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:16"
																		},
																		"nativeSrc": "2626:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:16"
																},
																"nativeSrc": "2562:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:16"
															},
															"nativeSrc": "2555:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:16",
																"nodeType": "YulBlock",
																"src": "2577:26:16",
																"statements": [
																	{
																		"nativeSrc": "2579:22:16",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:16"
																			},
																			"nativeSrc": "2588:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:16",
																"nodeType": "YulBlock",
																"src": "2559:2:16",
																"statements": []
															},
															"src": "2555:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:16",
														"nodeType": "YulTypedName",
														"src": "2533:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:16",
														"nodeType": "YulTypedName",
														"src": "2540:3:16",
														"type": ""
													}
												],
												"src": "2495:186:16"
											},
											{
												"body": {
													"nativeSrc": "2766:464:16",
													"nodeType": "YulBlock",
													"src": "2766:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:16",
																"nodeType": "YulBlock",
																"src": "2792:431:16",
																"statements": [
																	{
																		"nativeSrc": "2806:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:16"
																			},
																			"nativeSrc": "2822:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:16",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:16"
																					},
																					"nativeSrc": "2906:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:16"
																			},
																			"nativeSrc": "2892:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:16",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:16",
																			"nodeType": "YulBlock",
																			"src": "3093:27:16",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:16",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:16",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:16"
																			},
																			"nativeSrc": "3074:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:16"
																		},
																		"nativeSrc": "3071:49:16",
																		"nodeType": "YulIf",
																		"src": "3071:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:16"
																							},
																							"nativeSrc": "3189:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:16"
																					},
																					"nativeSrc": "3175:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:16"
																			},
																			"nativeSrc": "3133:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:16"
																		},
																		"nativeSrc": "3133:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:16"
																},
																"nativeSrc": "2780:11:16",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:16"
															},
															"nativeSrc": "2777:446:16",
															"nodeType": "YulIf",
															"src": "2777:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:16",
														"nodeType": "YulTypedName",
														"src": "2742:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:16",
														"nodeType": "YulTypedName",
														"src": "2749:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:16",
														"nodeType": "YulTypedName",
														"src": "2754:10:16",
														"type": ""
													}
												],
												"src": "2687:543:16"
											},
											{
												"body": {
													"nativeSrc": "3299:54:16",
													"nodeType": "YulBlock",
													"src": "3299:54:16",
													"statements": [
														{
															"nativeSrc": "3309:37:16",
															"nodeType": "YulAssignment",
															"src": "3309:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:16"
																},
																"nativeSrc": "3330:16:16",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:16",
														"nodeType": "YulTypedName",
														"src": "3274:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:16",
														"nodeType": "YulTypedName",
														"src": "3280:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:16",
														"nodeType": "YulTypedName",
														"src": "3290:8:16",
														"type": ""
													}
												],
												"src": "3236:117:16"
											},
											{
												"body": {
													"nativeSrc": "3410:118:16",
													"nodeType": "YulBlock",
													"src": "3410:118:16",
													"statements": [
														{
															"nativeSrc": "3420:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:16"
																				},
																				"nativeSrc": "3465:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:16"
																				},
																				"nativeSrc": "3480:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:16"
																		},
																		"nativeSrc": "3436:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:16"
																},
																"nativeSrc": "3432:56:16",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:16",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:16",
															"nodeType": "YulAssignment",
															"src": "3497:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:16"
																},
																"nativeSrc": "3507:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:16",
														"nodeType": "YulTypedName",
														"src": "3387:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:16",
														"nodeType": "YulTypedName",
														"src": "3393:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:16",
														"nodeType": "YulTypedName",
														"src": "3403:6:16",
														"type": ""
													}
												],
												"src": "3359:169:16"
											},
											{
												"body": {
													"nativeSrc": "3614:214:16",
													"nodeType": "YulBlock",
													"src": "3614:214:16",
													"statements": [
														{
															"nativeSrc": "3747:37:16",
															"nodeType": "YulAssignment",
															"src": "3747:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:16"
																},
																"nativeSrc": "3755:29:16",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:16"
																}
															]
														},
														{
															"nativeSrc": "3793:29:16",
															"nodeType": "YulAssignment",
															"src": "3793:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:16"
																		},
																		"nativeSrc": "3810:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:16"
																},
																"nativeSrc": "3801:21:16",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:16",
														"nodeType": "YulTypedName",
														"src": "3595:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:16",
														"nodeType": "YulTypedName",
														"src": "3601:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:16",
														"nodeType": "YulTypedName",
														"src": "3609:4:16",
														"type": ""
													}
												],
												"src": "3533:295:16"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:16",
													"nodeType": "YulBlock",
													"src": "3925:1303:16",
													"statements": [
														{
															"nativeSrc": "3936:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:16"
																},
																"nativeSrc": "3950:37:16",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:16",
																"nodeType": "YulBlock",
																"src": "4072:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:16"
																			},
																			"nativeSrc": "4074:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:16"
																		},
																		"nativeSrc": "4074:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:16",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:16"
																},
																"nativeSrc": "4041:30:16",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:16"
															},
															"nativeSrc": "4038:56:16",
															"nodeType": "YulIf",
															"src": "4038:56:16"
														},
														{
															"nativeSrc": "4104:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:16"
																		},
																		"nativeSrc": "4144:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:16"
																},
																"nativeSrc": "4118:38:16",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:16",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:16"
																},
																"nativeSrc": "4203:67:16",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:16"
															},
															"nativeSrc": "4203:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:16"
														},
														{
															"nativeSrc": "4280:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:16",
																"nodeType": "YulLiteral",
																"src": "4297:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:16",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:16",
															"nodeType": "YulAssignment",
															"src": "4308:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:16",
																"nodeType": "YulLiteral",
																"src": "4321:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:16",
																		"nodeType": "YulBlock",
																		"src": "4372:611:16",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:16",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:16"
																							},
																							"nativeSrc": "4413:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:16"
																					},
																					"nativeSrc": "4401:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:16",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:16"
																					},
																					"nativeSrc": "4451:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:16",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:16",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:16",
																					"nodeType": "YulBlock",
																					"src": "4569:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:16"
																												},
																												"nativeSrc": "4608:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:16"
																										},
																										"nativeSrc": "4602:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:16"
																								},
																								"nativeSrc": "4587:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:16"
																							},
																							"nativeSrc": "4587:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:16"
																						},
																						{
																							"nativeSrc": "4646:24:16",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:16",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:16"
																								},
																								"nativeSrc": "4656:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:16",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:16",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:16"
																								},
																								"nativeSrc": "4700:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:16"
																					},
																					"nativeSrc": "4532:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:16"
																				},
																				"nativeSrc": "4524:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:16",
																					"nodeType": "YulBlock",
																					"src": "4547:21:16",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:16",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:16",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:16"
																								},
																								"nativeSrc": "4554:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:16",
																					"nodeType": "YulBlock",
																					"src": "4528:3:16",
																					"statements": []
																				},
																				"src": "4524:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:16",
																					"nodeType": "YulBlock",
																					"src": "4768:156:16",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:16"
																										},
																										"nativeSrc": "4809:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:16"
																								},
																								"nativeSrc": "4803:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:16",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:16",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:16"
																												},
																												"nativeSrc": "4891:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:16"
																										},
																										"nativeSrc": "4861:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:16"
																								},
																								"nativeSrc": "4846:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:16"
																							},
																							"nativeSrc": "4846:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:16"
																					},
																					"nativeSrc": "4748:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:16"
																				},
																				"nativeSrc": "4745:179:16",
																				"nodeType": "YulIf",
																				"src": "4745:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:16",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:16"
																									},
																									"nativeSrc": "4954:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:16",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:16"
																							},
																							"nativeSrc": "4950:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:16"
																					},
																					"nativeSrc": "4937:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:16"
																				},
																				"nativeSrc": "4937:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:16"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:16",
																	"nodeType": "YulCase",
																	"src": "4365:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:16",
																		"nodeType": "YulBlock",
																		"src": "5000:222:16",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:16",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:16",
																					"nodeType": "YulBlock",
																					"src": "5051:67:16",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:16",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:16"
																										},
																										"nativeSrc": "5084:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:16"
																								},
																								"nativeSrc": "5078:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:16"
																				},
																				"nativeSrc": "5041:77:16",
																				"nodeType": "YulIf",
																				"src": "5041:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:16"
																							},
																							"nativeSrc": "5144:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:16"
																					},
																					"nativeSrc": "5131:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:16"
																				},
																				"nativeSrc": "5131:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:16"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:16",
																	"nodeType": "YulCase",
																	"src": "4992:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:16"
																},
																"nativeSrc": "4342:14:16",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:16"
															},
															"nativeSrc": "4335:887:16",
															"nodeType": "YulSwitch",
															"src": "4335:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:16",
														"nodeType": "YulTypedName",
														"src": "3914:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:16",
														"nodeType": "YulTypedName",
														"src": "3920:3:16",
														"type": ""
													}
												],
												"src": "3833:1395:16"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280600881526020017f44414747204e46540000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4441474700000000000000000000000000000000000000000000000000000000815250815f908161008a91906102dc565b50806001908161009a91906102dc565b5050506103ab565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061011d57607f821691505b6020821081036101305761012f6100d9565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610157565b61019c8683610157565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101e06101db6101d6846101b4565b6101bd565b6101b4565b9050919050565b5f819050919050565b6101f9836101c6565b61020d610205826101e7565b848454610163565b825550505050565b5f90565b610221610215565b61022c8184846101f0565b505050565b5b8181101561024f576102445f82610219565b600181019050610232565b5050565b601f8211156102945761026581610136565b61026e84610148565b8101602085101561027d578190505b61029161028985610148565b830182610231565b50505b505050565b5f82821c905092915050565b5f6102b45f1984600802610299565b1980831691505092915050565b5f6102cc83836102a5565b9150826002028217905092915050565b6102e5826100a2565b67ffffffffffffffff8111156102fe576102fd6100ac565b5b6103088254610106565b610313828285610253565b5f60209050601f831160018114610344575f8415610332578287015190505b61033c85826102c1565b8655506103a3565b601f19841661035286610136565b5f5b8281101561037957848901518255600182019150602085019450602081019050610354565b868310156103965784890151610392601f8916826102a5565b8355505b6001600288020188555050505b505050505050565b612af9806103b85f395ff3fe6080604052600436106101e1575f3560e01c80636352211e11610101578063abc8c7af11610094578063e2c7928111610063578063e2c79281146106cd578063e985e9c5146106f7578063ede8592b14610733578063f796c2d91461075d576101e1565b8063abc8c7af14610615578063b88d4fde1461063f578063c713a28914610667578063c87b56dd14610691576101e1565b806395d89b41116100d057806395d89b411461057157806397f7d0d51461059b5780639a969768146105c5578063a22cb465146105ed576101e1565b80636352211e146104a557806368f5cd3b146104e157806370a082311461050b5780637e83057414610547576101e1565b806323b872dd116101795780634c39a749116101485780634c39a749146103ff578063529062fa146104295780635301fa6f146104515780635743ceda1461047b576101e1565b806323b872dd14610349578063313dab201461037157806331c258e81461039b57806342842e0e146103d7576101e1565b8063095ea7b3116101b5578063095ea7b3146102b15780630c29f635146102d95780630d39fc81146102f557806318160ddd1461031f576101e1565b80628bfb00146101e557806301ffc9a71461020f57806306fdde031461024b578063081812fc14610275575b5f80fd5b3480156101f0575f80fd5b506101f9610773565b6040516102069190611f98565b60405180910390f35b34801561021a575f80fd5b506102356004803603810190610230919061201e565b6107ff565b6040516102429190612063565b60405180910390f35b348015610256575f80fd5b5061025f6108e0565b60405161026c9190611f98565b60405180910390f35b348015610280575f80fd5b5061029b600480360381019061029691906120af565b61096f565b6040516102a89190612119565b60405180910390f35b3480156102bc575f80fd5b506102d760048036038101906102d2919061215c565b61098a565b005b6102f360048036038101906102ee91906122c6565b6109a0565b005b348015610300575f80fd5b50610309610a9c565b6040516103169190612341565b60405180910390f35b34801561032a575f80fd5b50610333610aa2565b6040516103409190612341565b60405180910390f35b348015610354575f80fd5b5061036f600480360381019061036a919061235a565b610ab2565b005b34801561037c575f80fd5b50610385610bb1565b6040516103929190612341565b60405180910390f35b3480156103a6575f80fd5b506103c160048036038101906103bc919061215c565b610bb7565b6040516103ce9190612341565b60405180910390f35b3480156103e2575f80fd5b506103fd60048036038101906103f8919061235a565b610be2565b005b34801561040a575f80fd5b50610413610c01565b6040516104209190612119565b60405180910390f35b348015610434575f80fd5b5061044f600480360381019061044a91906120af565b610c26565b005b34801561045c575f80fd5b50610465610d39565b6040516104729190612341565b60405180910390f35b348015610486575f80fd5b5061048f610d3f565b60405161049c9190612341565b60405180910390f35b3480156104b0575f80fd5b506104cb60048036038101906104c691906120af565b610d45565b6040516104d89190612119565b60405180910390f35b3480156104ec575f80fd5b506104f5610d56565b6040516105029190612341565b60405180910390f35b348015610516575f80fd5b50610531600480360381019061052c91906123aa565b610d5c565b60405161053e9190612341565b60405180910390f35b348015610552575f80fd5b5061055b610e12565b6040516105689190612341565b60405180910390f35b34801561057c575f80fd5b50610585610e18565b6040516105929190611f98565b60405180910390f35b3480156105a6575f80fd5b506105af610ea8565b6040516105bc9190612341565b60405180910390f35b3480156105d0575f80fd5b506105eb60048036038101906105e691906120af565b610eae565b005b3480156105f8575f80fd5b50610613600480360381019061060e91906123ff565b610fa4565b005b348015610620575f80fd5b50610629610fba565b604051610636919061245d565b60405180910390f35b34801561064a575f80fd5b5061066560048036038101906106609190612514565b610fdf565b005b348015610672575f80fd5b5061067b610ffc565b6040516106889190612341565b60405180910390f35b34801561069c575f80fd5b506106b760048036038101906106b291906120af565b611002565b6040516106c49190611f98565b60405180910390f35b3480156106d8575f80fd5b506106e1611068565b6040516106ee9190612341565b60405180910390f35b348015610702575f80fd5b5061071d60048036038101906107189190612594565b61106e565b60405161072a9190612063565b60405180910390f35b34801561073e575f80fd5b506107476110fc565b604051610754919061245d565b60405180910390f35b348015610768575f80fd5b50610771611121565b005b600c8054610780906125ff565b80601f01602080910402602001604051908101604052809291908181526020018280546107ac906125ff565b80156107f75780601f106107ce576101008083540402835291602001916107f7565b820191905f5260205f20905b8154815290600101906020018083116107da57829003601f168201915b505050505081565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108c957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806108d957506108d882611208565b5b9050919050565b60605f80546108ee906125ff565b80601f016020809104026020016040519081016040528092919081815260200182805461091a906125ff565b80156109655780601f1061093c57610100808354040283529160200191610965565b820191905f5260205f20905b81548152906001019060200180831161094857829003601f168201915b5050505050905090565b5f61097982611271565b50610983826112f7565b9050919050565b61099c8282610997611330565b611337565b5050565b8060075410156109e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109dc90612679565b60405180910390fd5b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610a49573d5f803e3d5ffd5b50610a543083611349565b610a5e828461143c565b7f29705a31c393a642035ad5f190e6f0b0b3f0ef43ed68c72cf87ae76be0e3185b8284604051610a8f929190612697565b60405180910390a1505050565b600b5481565b5f610aad600661144a565b905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b22575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610b199190612119565b60405180910390fd5b5f610b358383610b30611330565b611456565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bab578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610ba2939291906126c5565b60405180910390fd5b50505050565b60075481565b6008602052815f5260405f208181548110610bd0575f80fd5b905f5260205f20015f91509150505481565b610bfc83838360405180602001604052805f815250610fdf565b505050565b600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3073ffffffffffffffffffffffffffffffffffffffff16610c4682611661565b73ffffffffffffffffffffffffffffffffffffffff1614610c9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9390612744565b60405180910390fd5b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f20015f90919091909150557f50580f9b480d6d5cec851393deb0b48a42783dca51b04cec0e1f104d553f516c8133604051610d2e929190612762565b60405180910390a150565b600f5481565b60125481565b5f610d4f82611271565b9050919050565b60135481565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dcd575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610dc49190612119565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b600d5481565b606060018054610e27906125ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610e53906125ff565b8015610e9e5780601f10610e7557610100808354040283529160200191610e9e565b820191905f5260205f20905b815481529060010190602001808311610e8157829003601f168201915b5050505050905090565b60115481565b5f610eb833610d5c565b11610ef8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eef906127f9565b60405180910390fd5b5f610f01610aa2565b90505f5b81811015610f9f575f610f1782610d45565b90505f610f2382610d5c565b1115610f91575f83610f3483610d5c565b86610f3f9190612844565b610f4991906128b2565b90508173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610f8e573d5f803e3d5ffd5b50505b508080600101915050610f05565b505050565b610fb6610faf611330565b838361169a565b5050565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610fea848484610ab2565b610ff684848484611803565b50505050565b60095481565b606061100d82611271565b505f6110176119b5565b90505f8151116110355760405180602001604052805f815250611060565b8061103f846119cb565b60405160200161105092919061291c565b6040516020818303038152906040525b915050919050565b60105481565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6064601254600f546111339190612844565b61113d91906128b2565b60138190555060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60135490811502906040515f60405180830381858888f193505050501580156111a9573d5f803e3d5ffd5b507f72be57c44bdcdf29e3bded0b32580b641d4c7f1e2d1cd7aba457fe552b351aaf60135460145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516111fe92919061299a565b60405180910390a1565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061127c83611661565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112ee57826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016112e59190612341565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6113448383836001611a95565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113b9575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113b09190612119565b60405180910390fd5b5f6113c583835f611456565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611437575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161142e9190612119565b60405180910390fd5b505050565b611446828261143c565b5050565b5f815f01549050919050565b5f8061146184611661565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146114a2576114a1818486611c54565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461152d576114e15f855f80611a95565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146115ac57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361170a57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016117019190612119565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516117f69190612063565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156119af578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611846611330565b8685856040518563ffffffff1660e01b81526004016118689493929190612a13565b6020604051808303815f875af19250505080156118a357506040513d601f19601f820116820180604052508101906118a09190612a71565b60015b611924573d805f81146118d1576040519150601f19603f3d011682016040523d82523d5f602084013e6118d6565b606091505b505f81510361191c57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119139190612119565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146119ad57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119a49190612119565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f60016119d984611d17565b0190505f8167ffffffffffffffff8111156119f7576119f66121a2565b5b6040519080825280601f01601f191660200182016040528015611a295781602001600182028036833780820191505090505b5090505f82602001820190505b600115611a8a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611a7f57611a7e612885565b5b0494505f8503611a36575b819350505050919050565b8080611acd57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611bff575f611adc84611271565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611b4657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611b595750611b57818461106e565b155b15611b9b57826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611b929190612119565b60405180910390fd5b8115611bfd57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611c5f838383611e68565b611d12575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cd357806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611cca9190612341565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611d09929190612a9c565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611d73577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611d6957611d68612885565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611db0576d04ee2d6d415b85acef81000000008381611da657611da5612885565b5b0492506020810190505b662386f26fc100008310611ddf57662386f26fc100008381611dd557611dd4612885565b5b0492506010810190505b6305f5e1008310611e08576305f5e1008381611dfe57611dfd612885565b5b0492506008810190505b6127108310611e2d576127108381611e2357611e22612885565b5b0492506004810190505b60648310611e505760648381611e4657611e45612885565b5b0492506002810190505b600a8310611e5f576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611f1f57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ee05750611edf848461106e565b5b80611f1e57508273ffffffffffffffffffffffffffffffffffffffff16611f06836112f7565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611f6a82611f28565b611f748185611f32565b9350611f84818560208601611f42565b611f8d81611f50565b840191505092915050565b5f6020820190508181035f830152611fb08184611f60565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ffd81611fc9565b8114612007575f80fd5b50565b5f8135905061201881611ff4565b92915050565b5f6020828403121561203357612032611fc1565b5b5f6120408482850161200a565b91505092915050565b5f8115159050919050565b61205d81612049565b82525050565b5f6020820190506120765f830184612054565b92915050565b5f819050919050565b61208e8161207c565b8114612098575f80fd5b50565b5f813590506120a981612085565b92915050565b5f602082840312156120c4576120c3611fc1565b5b5f6120d18482850161209b565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612103826120da565b9050919050565b612113816120f9565b82525050565b5f60208201905061212c5f83018461210a565b92915050565b61213b816120f9565b8114612145575f80fd5b50565b5f8135905061215681612132565b92915050565b5f806040838503121561217257612171611fc1565b5b5f61217f85828601612148565b92505060206121908582860161209b565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6121d882611f50565b810181811067ffffffffffffffff821117156121f7576121f66121a2565b5b80604052505050565b5f612209611fb8565b905061221582826121cf565b919050565b5f67ffffffffffffffff821115612234576122336121a2565b5b61223d82611f50565b9050602081019050919050565b828183375f83830152505050565b5f61226a6122658461221a565b612200565b9050828152602081018484840111156122865761228561219e565b5b61229184828561224a565b509392505050565b5f82601f8301126122ad576122ac61219a565b5b81356122bd848260208601612258565b91505092915050565b5f805f606084860312156122dd576122dc611fc1565b5b5f84013567ffffffffffffffff8111156122fa576122f9611fc5565b5b61230686828701612299565b93505060206123178682870161209b565b92505060406123288682870161209b565b9150509250925092565b61233b8161207c565b82525050565b5f6020820190506123545f830184612332565b92915050565b5f805f6060848603121561237157612370611fc1565b5b5f61237e86828701612148565b935050602061238f86828701612148565b92505060406123a08682870161209b565b9150509250925092565b5f602082840312156123bf576123be611fc1565b5b5f6123cc84828501612148565b91505092915050565b6123de81612049565b81146123e8575f80fd5b50565b5f813590506123f9816123d5565b92915050565b5f806040838503121561241557612414611fc1565b5b5f61242285828601612148565b9250506020612433858286016123eb565b9150509250929050565b5f612447826120da565b9050919050565b6124578161243d565b82525050565b5f6020820190506124705f83018461244e565b92915050565b5f67ffffffffffffffff8211156124905761248f6121a2565b5b61249982611f50565b9050602081019050919050565b5f6124b86124b384612476565b612200565b9050828152602081018484840111156124d4576124d361219e565b5b6124df84828561224a565b509392505050565b5f82601f8301126124fb576124fa61219a565b5b813561250b8482602086016124a6565b91505092915050565b5f805f806080858703121561252c5761252b611fc1565b5b5f61253987828801612148565b945050602061254a87828801612148565b935050604061255b8782880161209b565b925050606085013567ffffffffffffffff81111561257c5761257b611fc5565b5b612588878288016124e7565b91505092959194509250565b5f80604083850312156125aa576125a9611fc1565b5b5f6125b785828601612148565b92505060206125c885828601612148565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061261657607f821691505b602082108103612629576126286125d2565b5b50919050565b7f496e73756666696369656e742066756e647320696e20747265617375727900005f82015250565b5f612663601e83611f32565b915061266e8261262f565b602082019050919050565b5f6020820190508181035f83015261269081612657565b9050919050565b5f6040820190506126aa5f830185612332565b81810360208301526126bc8184611f60565b90509392505050565b5f6060820190506126d85f83018661210a565b6126e56020830185612332565b6126f2604083018461210a565b949350505050565b7f4e4654206e6f74206f776e656420627920746865206775696c640000000000005f82015250565b5f61272e601a83611f32565b9150612739826126fa565b602082019050919050565b5f6020820190508181035f83015261275b81612722565b9050919050565b5f6040820190506127755f830185612332565b612782602083018461210a565b9392505050565b7f4f6e6c79206775696c64206d656d626572732063616e20706572666f726d20745f8201527f68697320616374696f6e00000000000000000000000000000000000000000000602082015250565b5f6127e3602a83611f32565b91506127ee82612789565b604082019050919050565b5f6020820190508181035f830152612810816127d7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61284e8261207c565b91506128598361207c565b92508282026128678161207c565b9150828204841483151761287e5761287d612817565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6128bc8261207c565b91506128c78361207c565b9250826128d7576128d6612885565b5b828204905092915050565b5f81905092915050565b5f6128f682611f28565b61290081856128e2565b9350612910818560208601611f42565b80840191505092915050565b5f61292782856128ec565b915061293382846128ec565b91508190509392505050565b5f819050919050565b5f61296261295d612958846120da565b61293f565b6120da565b9050919050565b5f61297382612948565b9050919050565b5f61298482612969565b9050919050565b6129948161297a565b82525050565b5f6040820190506129ad5f830185612332565b6129ba602083018461298b565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6129e5826129c1565b6129ef81856129cb565b93506129ff818560208601611f42565b612a0881611f50565b840191505092915050565b5f608082019050612a265f83018761210a565b612a33602083018661210a565b612a406040830185612332565b8181036060830152612a5281846129db565b905095945050505050565b5f81519050612a6b81611ff4565b92915050565b5f60208284031215612a8657612a85611fc1565b5b5f612a9384828501612a5d565b91505092915050565b5f604082019050612aaf5f83018561210a565b612abc6020830184612332565b939250505056fea2646970667358221220311bd884557d50102ed7c7e9c8668cd36b909e2deda34e214a3a64bf38709a3064736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44414747204E4654000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4441474700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x2DC JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x2DC JUMP JUMPDEST POP POP POP PUSH2 0x3AB JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x130 JUMPI PUSH2 0x12F PUSH2 0xD9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x192 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x157 JUMP JUMPDEST PUSH2 0x19C DUP7 DUP4 PUSH2 0x157 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0 PUSH2 0x1DB PUSH2 0x1D6 DUP5 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F9 DUP4 PUSH2 0x1C6 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x205 DUP3 PUSH2 0x1E7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x163 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x221 PUSH2 0x215 JUMP JUMPDEST PUSH2 0x22C DUP2 DUP5 DUP5 PUSH2 0x1F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24F JUMPI PUSH2 0x244 PUSH0 DUP3 PUSH2 0x219 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x232 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x294 JUMPI PUSH2 0x265 DUP2 PUSH2 0x136 JUMP JUMPDEST PUSH2 0x26E DUP5 PUSH2 0x148 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x291 PUSH2 0x289 DUP6 PUSH2 0x148 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x231 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x299 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CC DUP4 DUP4 PUSH2 0x2A5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E5 DUP3 PUSH2 0xA2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FE JUMPI PUSH2 0x2FD PUSH2 0xAC JUMP JUMPDEST JUMPDEST PUSH2 0x308 DUP3 SLOAD PUSH2 0x106 JUMP JUMPDEST PUSH2 0x313 DUP3 DUP3 DUP6 PUSH2 0x253 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x344 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x332 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x33C DUP6 DUP3 PUSH2 0x2C1 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x352 DUP7 PUSH2 0x136 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x379 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x354 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x396 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x392 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2A5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2AF9 DUP1 PUSH2 0x3B8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x101 JUMPI DUP1 PUSH4 0xABC8C7AF GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xE2C79281 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE2C79281 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xEDE8592B EQ PUSH2 0x733 JUMPI DUP1 PUSH4 0xF796C2D9 EQ PUSH2 0x75D JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH4 0xABC8C7AF EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0xC713A289 EQ PUSH2 0x667 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x691 JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0x97F7D0D5 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x9A969768 EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x5ED JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0x68F5CD3B EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x7E830574 EQ PUSH2 0x547 JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x179 JUMPI DUP1 PUSH4 0x4C39A749 GT PUSH2 0x148 JUMPI DUP1 PUSH4 0x4C39A749 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x529062FA EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x5301FA6F EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x5743CEDA EQ PUSH2 0x47B JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x313DAB20 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x31C258E8 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3D7 JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xC29F635 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xD39FC81 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31F JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH3 0x8BFB00 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x275 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH2 0x98A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x22C6 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x333 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH2 0xAB2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0xC26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x465 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x48F PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49C SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F5 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x516 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x531 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x23AA JUMP JUMPDEST PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x552 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x55B PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x568 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x585 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AF PUSH2 0xEA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0xEAE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x613 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x23FF JUMP JUMPDEST PUSH2 0xFA4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x620 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x629 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x665 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0x2514 JUMP JUMPDEST PUSH2 0xFDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x67B PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E1 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x71D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x2594 JUMP JUMPDEST PUSH2 0x106E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x747 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x768 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x771 PUSH2 0x1121 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x780 SWAP1 PUSH2 0x25FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7AC SWAP1 PUSH2 0x25FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8C9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x8D9 JUMPI POP PUSH2 0x8D8 DUP3 PUSH2 0x1208 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x8EE SWAP1 PUSH2 0x25FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x91A SWAP1 PUSH2 0x25FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x965 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x93C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x965 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x948 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x979 DUP3 PUSH2 0x1271 JUMP JUMPDEST POP PUSH2 0x983 DUP3 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99C DUP3 DUP3 PUSH2 0x997 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x1337 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DC SWAP1 PUSH2 0x2679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA49 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xA54 ADDRESS DUP4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0xA5E DUP3 DUP5 PUSH2 0x143C JUMP JUMPDEST PUSH32 0x29705A31C393A642035AD5F190E6F0B0B3F0EF43ED68C72CF87AE76BE0E3185B DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA8F SWAP3 SWAP2 SWAP1 PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xAAD PUSH1 0x6 PUSH2 0x144A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB22 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB19 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xB35 DUP4 DUP4 PUSH2 0xB30 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x1456 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAB JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBFC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xFDF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC46 DUP3 PUSH2 0x1661 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC93 SWAP1 PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH32 0x50580F9B480D6D5CEC851393DEB0B48A42783DCA51B04CEC0E1F104D553F516C DUP2 CALLER PUSH1 0x40 MLOAD PUSH2 0xD2E SWAP3 SWAP2 SWAP1 PUSH2 0x2762 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xD4F DUP3 PUSH2 0x1271 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC4 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xE27 SWAP1 PUSH2 0x25FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE53 SWAP1 PUSH2 0x25FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE9E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE75 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE9E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE81 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xEB8 CALLER PUSH2 0xD5C JUMP JUMPDEST GT PUSH2 0xEF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEF SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xF01 PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF9F JUMPI PUSH0 PUSH2 0xF17 DUP3 PUSH2 0xD45 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF23 DUP3 PUSH2 0xD5C JUMP JUMPDEST GT ISZERO PUSH2 0xF91 JUMPI PUSH0 DUP4 PUSH2 0xF34 DUP4 PUSH2 0xD5C JUMP JUMPDEST DUP7 PUSH2 0xF3F SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0xF49 SWAP2 SWAP1 PUSH2 0x28B2 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF8E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF05 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFB6 PUSH2 0xFAF PUSH2 0x1330 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x169A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xFEA DUP5 DUP5 DUP5 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0xFF6 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1803 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x100D DUP3 PUSH2 0x1271 JUMP JUMPDEST POP PUSH0 PUSH2 0x1017 PUSH2 0x19B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1060 JUMP JUMPDEST DUP1 PUSH2 0x103F DUP5 PUSH2 0x19CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1050 SWAP3 SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x12 SLOAD PUSH1 0xF SLOAD PUSH2 0x1133 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x113D SWAP2 SWAP1 PUSH2 0x28B2 JUMP JUMPDEST PUSH1 0x13 DUP2 SWAP1 SSTORE POP PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x13 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x11A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0x72BE57C44BDCDF29E3BDED0B32580B641D4C7F1E2D1CD7ABA457FE552B351AAF PUSH1 0x13 SLOAD PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x11FE SWAP3 SWAP2 SWAP1 PUSH2 0x299A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x127C DUP4 PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12EE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E5 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1344 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1A95 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x13C5 DUP4 DUP4 PUSH0 PUSH2 0x1456 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1437 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142E SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1446 DUP3 DUP3 PUSH2 0x143C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1461 DUP5 PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14A2 JUMPI PUSH2 0x14A1 DUP2 DUP5 DUP7 PUSH2 0x1C54 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x152D JUMPI PUSH2 0x14E1 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15AC JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x170A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1701 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17F6 SWAP2 SWAP1 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x19AF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1846 PUSH2 0x1330 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1868 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18A3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18A0 SWAP2 SWAP1 PUSH2 0x2A71 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1924 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x18D1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x191C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1913 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x19AD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A4 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x19D9 DUP5 PUSH2 0x1D17 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19F7 JUMPI PUSH2 0x19F6 PUSH2 0x21A2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A29 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A8A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1A7F JUMPI PUSH2 0x1A7E PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1A36 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1ACD JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1BFF JUMPI PUSH0 PUSH2 0x1ADC DUP5 PUSH2 0x1271 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B46 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1B59 JUMPI POP PUSH2 0x1B57 DUP2 DUP5 PUSH2 0x106E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1B9B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B92 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1BFD JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C5F DUP4 DUP4 DUP4 PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0x1D12 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CD3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CCA SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D09 SWAP3 SWAP2 SWAP1 PUSH2 0x2A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1D73 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1D69 JUMPI PUSH2 0x1D68 PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1DB0 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1DA6 JUMPI PUSH2 0x1DA5 PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1DDF JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1DD5 JUMPI PUSH2 0x1DD4 PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1E08 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1DFE JUMPI PUSH2 0x1DFD PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1E2D JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1E23 JUMPI PUSH2 0x1E22 PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1E50 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1E46 JUMPI PUSH2 0x1E45 PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1E5F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1F1F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1EE0 JUMPI POP PUSH2 0x1EDF DUP5 DUP5 PUSH2 0x106E JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1F1E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F06 DUP4 PUSH2 0x12F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6A DUP3 PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0x1F74 DUP2 DUP6 PUSH2 0x1F32 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F84 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x1F8D DUP2 PUSH2 0x1F50 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FB0 DUP2 DUP5 PUSH2 0x1F60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FFD DUP2 PUSH2 0x1FC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2007 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2018 DUP2 PUSH2 0x1FF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2033 JUMPI PUSH2 0x2032 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2040 DUP5 DUP3 DUP6 ADD PUSH2 0x200A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x205D DUP2 PUSH2 0x2049 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2076 PUSH0 DUP4 ADD DUP5 PUSH2 0x2054 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x208E DUP2 PUSH2 0x207C JUMP JUMPDEST DUP2 EQ PUSH2 0x2098 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20A9 DUP2 PUSH2 0x2085 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C4 JUMPI PUSH2 0x20C3 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D1 DUP5 DUP3 DUP6 ADD PUSH2 0x209B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2103 DUP3 PUSH2 0x20DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2113 DUP2 PUSH2 0x20F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x212C PUSH0 DUP4 ADD DUP5 PUSH2 0x210A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x213B DUP2 PUSH2 0x20F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2145 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2156 DUP2 PUSH2 0x2132 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2172 JUMPI PUSH2 0x2171 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x217F DUP6 DUP3 DUP7 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2190 DUP6 DUP3 DUP7 ADD PUSH2 0x209B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x21D8 DUP3 PUSH2 0x1F50 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21F7 JUMPI PUSH2 0x21F6 PUSH2 0x21A2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2209 PUSH2 0x1FB8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2215 DUP3 DUP3 PUSH2 0x21CF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2234 JUMPI PUSH2 0x2233 PUSH2 0x21A2 JUMP JUMPDEST JUMPDEST PUSH2 0x223D DUP3 PUSH2 0x1F50 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x226A PUSH2 0x2265 DUP5 PUSH2 0x221A JUMP JUMPDEST PUSH2 0x2200 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2286 JUMPI PUSH2 0x2285 PUSH2 0x219E JUMP JUMPDEST JUMPDEST PUSH2 0x2291 DUP5 DUP3 DUP6 PUSH2 0x224A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22AD JUMPI PUSH2 0x22AC PUSH2 0x219A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2258 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22DD JUMPI PUSH2 0x22DC PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22FA JUMPI PUSH2 0x22F9 PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH2 0x2306 DUP7 DUP3 DUP8 ADD PUSH2 0x2299 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2317 DUP7 DUP3 DUP8 ADD PUSH2 0x209B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2328 DUP7 DUP3 DUP8 ADD PUSH2 0x209B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x233B DUP2 PUSH2 0x207C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2354 PUSH0 DUP4 ADD DUP5 PUSH2 0x2332 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2371 JUMPI PUSH2 0x2370 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x237E DUP7 DUP3 DUP8 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x238F DUP7 DUP3 DUP8 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23A0 DUP7 DUP3 DUP8 ADD PUSH2 0x209B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23BF JUMPI PUSH2 0x23BE PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23CC DUP5 DUP3 DUP6 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23DE DUP2 PUSH2 0x2049 JUMP JUMPDEST DUP2 EQ PUSH2 0x23E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23F9 DUP2 PUSH2 0x23D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2415 JUMPI PUSH2 0x2414 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2422 DUP6 DUP3 DUP7 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2433 DUP6 DUP3 DUP7 ADD PUSH2 0x23EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2447 DUP3 PUSH2 0x20DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2457 DUP2 PUSH2 0x243D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2470 PUSH0 DUP4 ADD DUP5 PUSH2 0x244E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2490 JUMPI PUSH2 0x248F PUSH2 0x21A2 JUMP JUMPDEST JUMPDEST PUSH2 0x2499 DUP3 PUSH2 0x1F50 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24B8 PUSH2 0x24B3 DUP5 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0x2200 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x24D4 JUMPI PUSH2 0x24D3 PUSH2 0x219E JUMP JUMPDEST JUMPDEST PUSH2 0x24DF DUP5 DUP3 DUP6 PUSH2 0x224A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24FB JUMPI PUSH2 0x24FA PUSH2 0x219A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x250B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x252C JUMPI PUSH2 0x252B PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2539 DUP8 DUP3 DUP9 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x254A DUP8 DUP3 DUP9 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x255B DUP8 DUP3 DUP9 ADD PUSH2 0x209B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x257C JUMPI PUSH2 0x257B PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH2 0x2588 DUP8 DUP3 DUP9 ADD PUSH2 0x24E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25AA JUMPI PUSH2 0x25A9 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25B7 DUP6 DUP3 DUP7 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25C8 DUP6 DUP3 DUP7 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2616 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2629 JUMPI PUSH2 0x2628 PUSH2 0x25D2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E2074726561737572790000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2663 PUSH1 0x1E DUP4 PUSH2 0x1F32 JUMP JUMPDEST SWAP2 POP PUSH2 0x266E DUP3 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2690 DUP2 PUSH2 0x2657 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26AA PUSH0 DUP4 ADD DUP6 PUSH2 0x2332 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x26BC DUP2 DUP5 PUSH2 0x1F60 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26D8 PUSH0 DUP4 ADD DUP7 PUSH2 0x210A JUMP JUMPDEST PUSH2 0x26E5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2332 JUMP JUMPDEST PUSH2 0x26F2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x210A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E4654206E6F74206F776E656420627920746865206775696C64000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x272E PUSH1 0x1A DUP4 PUSH2 0x1F32 JUMP JUMPDEST SWAP2 POP PUSH2 0x2739 DUP3 PUSH2 0x26FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x275B DUP2 PUSH2 0x2722 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2775 PUSH0 DUP4 ADD DUP6 PUSH2 0x2332 JUMP JUMPDEST PUSH2 0x2782 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x210A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206775696C64206D656D626572732063616E20706572666F726D2074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68697320616374696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27E3 PUSH1 0x2A DUP4 PUSH2 0x1F32 JUMP JUMPDEST SWAP2 POP PUSH2 0x27EE DUP3 PUSH2 0x2789 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2810 DUP2 PUSH2 0x27D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x284E DUP3 PUSH2 0x207C JUMP JUMPDEST SWAP2 POP PUSH2 0x2859 DUP4 PUSH2 0x207C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2867 DUP2 PUSH2 0x207C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x287E JUMPI PUSH2 0x287D PUSH2 0x2817 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28BC DUP3 PUSH2 0x207C JUMP JUMPDEST SWAP2 POP PUSH2 0x28C7 DUP4 PUSH2 0x207C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x28D7 JUMPI PUSH2 0x28D6 PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28F6 DUP3 PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0x2900 DUP2 DUP6 PUSH2 0x28E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2910 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F42 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2927 DUP3 DUP6 PUSH2 0x28EC JUMP JUMPDEST SWAP2 POP PUSH2 0x2933 DUP3 DUP5 PUSH2 0x28EC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2962 PUSH2 0x295D PUSH2 0x2958 DUP5 PUSH2 0x20DA JUMP JUMPDEST PUSH2 0x293F JUMP JUMPDEST PUSH2 0x20DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2973 DUP3 PUSH2 0x2948 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2984 DUP3 PUSH2 0x2969 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2994 DUP2 PUSH2 0x297A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29AD PUSH0 DUP4 ADD DUP6 PUSH2 0x2332 JUMP JUMPDEST PUSH2 0x29BA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x298B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29E5 DUP3 PUSH2 0x29C1 JUMP JUMPDEST PUSH2 0x29EF DUP2 DUP6 PUSH2 0x29CB JUMP JUMPDEST SWAP4 POP PUSH2 0x29FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x2A08 DUP2 PUSH2 0x1F50 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2A26 PUSH0 DUP4 ADD DUP8 PUSH2 0x210A JUMP JUMPDEST PUSH2 0x2A33 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x210A JUMP JUMPDEST PUSH2 0x2A40 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2332 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2A52 DUP2 DUP5 PUSH2 0x29DB JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A6B DUP2 PUSH2 0x1FF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A86 JUMPI PUSH2 0x2A85 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A93 DUP5 DUP3 DUP6 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2AAF PUSH0 DUP4 ADD DUP6 PUSH2 0x210A JUMP JUMPDEST PUSH2 0x2ABC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2332 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SHL 0xD8 DUP5 SSTORE PUSH30 0x50102ED7C7E9C8668CD36B909E2DEDA34E214A3A64BF38709A3064736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "226:2541:15:-:0;;;;;;;;;;;;;1381:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;226:2541:15;;7:99:16;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;226:2541:15:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1567": {
									"entryPoint": 4919,
									"id": 1567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1633": {
									"entryPoint": 6805,
									"id": 1633,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_960": {
									"entryPoint": 6581,
									"id": 960,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_1215": {
									"entryPoint": 7252,
									"id": 1215,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1763": {
									"entryPoint": 6147,
									"id": 1763,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_1142": {
									"entryPoint": 4855,
									"id": 1142,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_1178": {
									"entryPoint": 7784,
									"id": 1178,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1371": {
									"entryPoint": 4937,
									"id": 1371,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1939": {
									"entryPoint": 4912,
									"id": 1939,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_1129": {
									"entryPoint": 5729,
									"id": 1129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1699": {
									"entryPoint": 4721,
									"id": 1699,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1670": {
									"entryPoint": 5786,
									"id": 1670,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_3559": {
									"entryPoint": 5180,
									"id": 3559,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_1321": {
									"entryPoint": 5206,
									"id": 1321,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@acquireNFT_3636": {
									"entryPoint": 2464,
									"id": 3636,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_976": {
									"entryPoint": 2442,
									"id": 976,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_884": {
									"entryPoint": 3420,
									"id": 884,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@borrowNFT_3668": {
									"entryPoint": 3110,
									"id": 3668,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@borrowedNFTs_3504": {
									"entryPoint": 2999,
									"id": 3504,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@current_1975": {
									"entryPoint": 5194,
									"id": 1975,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@distributeNFT_3582": {
									"entryPoint": 4385,
									"id": 3582,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@distributeProfits_3734": {
									"entryPoint": 3758,
									"id": 3734,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getApproved_993": {
									"entryPoint": 2415,
									"id": 993,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1026": {
									"entryPoint": 4206,
									"id": 1026,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_3196": {
									"entryPoint": 7447,
									"id": 3196,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@marketplace_3520": {
									"entryPoint": 4026,
									"id": 3520,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@membershipFee_3518": {
									"entryPoint": 4092,
									"id": 3518,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_906": {
									"entryPoint": 2272,
									"id": 906,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nftBalance_3530": {
									"entryPoint": 3385,
									"id": 3530,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftDistributionAddress_3540": {
									"entryPoint": 4348,
									"id": 3540,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftDistributionAmount_3538": {
									"entryPoint": 3414,
									"id": 3538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftDistributionPercentage_3536": {
									"entryPoint": 3391,
									"id": 3536,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftDistribution_3534": {
									"entryPoint": 3752,
									"id": 3534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftName_3524": {
									"entryPoint": 1907,
									"id": 3524,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftOwner_3528": {
									"entryPoint": 3073,
									"id": 3528,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftPrice_3522": {
									"entryPoint": 2716,
									"id": 3522,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftTokenId_3526": {
									"entryPoint": 3602,
									"id": 3526,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_897": {
									"entryPoint": 3397,
									"id": 897,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1090": {
									"entryPoint": 3042,
									"id": 1090,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1116": {
									"entryPoint": 4063,
									"id": 1116,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1009": {
									"entryPoint": 4004,
									"id": 1009,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2309": {
									"entryPoint": 4616,
									"id": 2309,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_856": {
									"entryPoint": 2047,
									"id": 856,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_915": {
									"entryPoint": 3608,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_2099": {
									"entryPoint": 6603,
									"id": 2099,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_951": {
									"entryPoint": 4098,
									"id": 951,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalNFTSupply_3532": {
									"entryPoint": 4200,
									"id": 3532,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_3678": {
									"entryPoint": 2722,
									"id": 3678,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1072": {
									"entryPoint": 2738,
									"id": 1072,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@treasuryBalance_3499": {
									"entryPoint": 2993,
									"id": 3499,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9382,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8792,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256": {
									"entryPoint": 8902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 10635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 9294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10524,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 9309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10771,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10908,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9925,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10082,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10650,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9879,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 9277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 10618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8778,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8002,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10263,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9682,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8610,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8602,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8606,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8133,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8129,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8": {
									"entryPoint": 9978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab": {
									"entryPoint": 9775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711": {
									"entryPoint": 10121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22618:16",
										"nodeType": "YulBlock",
										"src": "0:22618:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:16",
													"nodeType": "YulBlock",
													"src": "66:40:16",
													"statements": [
														{
															"nativeSrc": "77:22:16",
															"nodeType": "YulAssignment",
															"src": "77:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:16"
																},
																"nativeSrc": "87:12:16",
																"nodeType": "YulFunctionCall",
																"src": "87:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:16",
														"nodeType": "YulTypedName",
														"src": "49:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:16",
														"nodeType": "YulTypedName",
														"src": "59:6:16",
														"type": ""
													}
												],
												"src": "7:99:16"
											},
											{
												"body": {
													"nativeSrc": "208:73:16",
													"nodeType": "YulBlock",
													"src": "208:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:16"
																},
																"nativeSrc": "218:19:16",
																"nodeType": "YulFunctionCall",
																"src": "218:19:16"
															},
															"nativeSrc": "218:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:16"
														},
														{
															"nativeSrc": "246:29:16",
															"nodeType": "YulAssignment",
															"src": "246:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:16",
																		"nodeType": "YulLiteral",
																		"src": "270:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:16"
																},
																"nativeSrc": "261:14:16",
																"nodeType": "YulFunctionCall",
																"src": "261:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:16",
														"nodeType": "YulTypedName",
														"src": "180:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:16",
														"nodeType": "YulTypedName",
														"src": "185:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:16",
														"nodeType": "YulTypedName",
														"src": "196:11:16",
														"type": ""
													}
												],
												"src": "112:169:16"
											},
											{
												"body": {
													"nativeSrc": "349:77:16",
													"nodeType": "YulBlock",
													"src": "349:77:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:16"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:16"
																},
																"nativeSrc": "360:23:16",
																"nodeType": "YulFunctionCall",
																"src": "360:23:16"
															},
															"nativeSrc": "360:23:16",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:16"
																		},
																		"nativeSrc": "399:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:16",
																		"nodeType": "YulLiteral",
																		"src": "417:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:16"
																},
																"nativeSrc": "392:27:16",
																"nodeType": "YulFunctionCall",
																"src": "392:27:16"
															},
															"nativeSrc": "392:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:16",
														"nodeType": "YulTypedName",
														"src": "331:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:16",
														"nodeType": "YulTypedName",
														"src": "336:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:16",
														"nodeType": "YulTypedName",
														"src": "341:6:16",
														"type": ""
													}
												],
												"src": "287:139:16"
											},
											{
												"body": {
													"nativeSrc": "480:54:16",
													"nodeType": "YulBlock",
													"src": "480:54:16",
													"statements": [
														{
															"nativeSrc": "490:38:16",
															"nodeType": "YulAssignment",
															"src": "490:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:16",
																				"nodeType": "YulLiteral",
																				"src": "515:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:16"
																		},
																		"nativeSrc": "504:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:16",
																				"nodeType": "YulLiteral",
																				"src": "524:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:16"
																		},
																		"nativeSrc": "520:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:16"
																},
																"nativeSrc": "500:28:16",
																"nodeType": "YulFunctionCall",
																"src": "500:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:16",
														"nodeType": "YulTypedName",
														"src": "463:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:16",
														"nodeType": "YulTypedName",
														"src": "473:6:16",
														"type": ""
													}
												],
												"src": "432:102:16"
											},
											{
												"body": {
													"nativeSrc": "632:285:16",
													"nodeType": "YulBlock",
													"src": "632:285:16",
													"statements": [
														{
															"nativeSrc": "642:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:16"
																},
																"nativeSrc": "656:39:16",
																"nodeType": "YulFunctionCall",
																"src": "656:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:16",
																	"nodeType": "YulTypedName",
																	"src": "646:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:16",
															"nodeType": "YulAssignment",
															"src": "704:78:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:16"
																},
																"nativeSrc": "711:71:16",
																"nodeType": "YulFunctionCall",
																"src": "711:71:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:16",
																				"nodeType": "YulLiteral",
																				"src": "837:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:16"
																		},
																		"nativeSrc": "826:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:16"
																},
																"nativeSrc": "791:65:16",
																"nodeType": "YulFunctionCall",
																"src": "791:65:16"
															},
															"nativeSrc": "791:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:16"
														},
														{
															"nativeSrc": "865:46:16",
															"nodeType": "YulAssignment",
															"src": "865:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:16"
																		},
																		"nativeSrc": "881:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:16"
																},
																"nativeSrc": "872:39:16",
																"nodeType": "YulFunctionCall",
																"src": "872:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:16",
														"nodeType": "YulTypedName",
														"src": "613:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:16",
														"nodeType": "YulTypedName",
														"src": "620:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:16",
														"nodeType": "YulTypedName",
														"src": "628:3:16",
														"type": ""
													}
												],
												"src": "540:377:16"
											},
											{
												"body": {
													"nativeSrc": "1041:195:16",
													"nodeType": "YulBlock",
													"src": "1041:195:16",
													"statements": [
														{
															"nativeSrc": "1051:26:16",
															"nodeType": "YulAssignment",
															"src": "1051:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:16"
																},
																"nativeSrc": "1059:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:16"
																		},
																		"nativeSrc": "1094:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:16"
																		},
																		"nativeSrc": "1113:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:16"
																},
																"nativeSrc": "1087:47:16",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:16"
															},
															"nativeSrc": "1087:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:16"
														},
														{
															"nativeSrc": "1143:86:16",
															"nodeType": "YulAssignment",
															"src": "1143:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:16",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:16"
																},
																"nativeSrc": "1151:78:16",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:16",
														"nodeType": "YulTypedName",
														"src": "1013:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:16",
														"nodeType": "YulTypedName",
														"src": "1025:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:16",
														"nodeType": "YulTypedName",
														"src": "1036:4:16",
														"type": ""
													}
												],
												"src": "923:313:16"
											},
											{
												"body": {
													"nativeSrc": "1282:35:16",
													"nodeType": "YulBlock",
													"src": "1282:35:16",
													"statements": [
														{
															"nativeSrc": "1292:19:16",
															"nodeType": "YulAssignment",
															"src": "1292:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:16"
																},
																"nativeSrc": "1302:9:16",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:16",
														"nodeType": "YulTypedName",
														"src": "1275:6:16",
														"type": ""
													}
												],
												"src": "1242:75:16"
											},
											{
												"body": {
													"nativeSrc": "1412:28:16",
													"nodeType": "YulBlock",
													"src": "1412:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:16"
																},
																"nativeSrc": "1422:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:16"
															},
															"nativeSrc": "1422:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:16"
											},
											{
												"body": {
													"nativeSrc": "1535:28:16",
													"nodeType": "YulBlock",
													"src": "1535:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:16"
																},
																"nativeSrc": "1545:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:16"
															},
															"nativeSrc": "1545:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:16"
											},
											{
												"body": {
													"nativeSrc": "1613:105:16",
													"nodeType": "YulBlock",
													"src": "1613:105:16",
													"statements": [
														{
															"nativeSrc": "1623:89:16",
															"nodeType": "YulAssignment",
															"src": "1623:89:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1638:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1638:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1645:66:16",
																		"nodeType": "YulLiteral",
																		"src": "1645:66:16",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1634:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1634:3:16"
																},
																"nativeSrc": "1634:78:16",
																"nodeType": "YulFunctionCall",
																"src": "1634:78:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "1569:149:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:16",
														"nodeType": "YulTypedName",
														"src": "1595:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:16",
														"nodeType": "YulTypedName",
														"src": "1605:7:16",
														"type": ""
													}
												],
												"src": "1569:149:16"
											},
											{
												"body": {
													"nativeSrc": "1766:78:16",
													"nodeType": "YulBlock",
													"src": "1766:78:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1822:16:16",
																"nodeType": "YulBlock",
																"src": "1822:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1831:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1831:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1834:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1834:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1824:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:16"
																			},
																			"nativeSrc": "1824:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1824:12:16"
																		},
																		"nativeSrc": "1824:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1789:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1789:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1813:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1813:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "1796:16:16",
																					"nodeType": "YulIdentifier",
																					"src": "1796:16:16"
																				},
																				"nativeSrc": "1796:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1796:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1786:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1786:2:16"
																		},
																		"nativeSrc": "1786:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1786:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1779:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1779:6:16"
																},
																"nativeSrc": "1779:42:16",
																"nodeType": "YulFunctionCall",
																"src": "1779:42:16"
															},
															"nativeSrc": "1776:62:16",
															"nodeType": "YulIf",
															"src": "1776:62:16"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "1724:120:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1759:5:16",
														"nodeType": "YulTypedName",
														"src": "1759:5:16",
														"type": ""
													}
												],
												"src": "1724:120:16"
											},
											{
												"body": {
													"nativeSrc": "1901:86:16",
													"nodeType": "YulBlock",
													"src": "1901:86:16",
													"statements": [
														{
															"nativeSrc": "1911:29:16",
															"nodeType": "YulAssignment",
															"src": "1911:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1933:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1933:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1920:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1920:12:16"
																},
																"nativeSrc": "1920:20:16",
																"nodeType": "YulFunctionCall",
																"src": "1920:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1911:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1911:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1975:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1975:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "1949:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "1949:25:16"
																},
																"nativeSrc": "1949:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1949:32:16"
															},
															"nativeSrc": "1949:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "1949:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "1850:137:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1879:6:16",
														"nodeType": "YulTypedName",
														"src": "1879:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1887:3:16",
														"nodeType": "YulTypedName",
														"src": "1887:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1895:5:16",
														"nodeType": "YulTypedName",
														"src": "1895:5:16",
														"type": ""
													}
												],
												"src": "1850:137:16"
											},
											{
												"body": {
													"nativeSrc": "2058:262:16",
													"nodeType": "YulBlock",
													"src": "2058:262:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2104:83:16",
																"nodeType": "YulBlock",
																"src": "2104:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2106:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "2106:77:16"
																			},
																			"nativeSrc": "2106:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2106:79:16"
																		},
																		"nativeSrc": "2106:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2106:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2079:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2079:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2088:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2088:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2075:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2075:3:16"
																		},
																		"nativeSrc": "2075:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2075:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2100:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2100:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2071:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2071:3:16"
																},
																"nativeSrc": "2071:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2071:32:16"
															},
															"nativeSrc": "2068:119:16",
															"nodeType": "YulIf",
															"src": "2068:119:16"
														},
														{
															"nativeSrc": "2197:116:16",
															"nodeType": "YulBlock",
															"src": "2197:116:16",
															"statements": [
																{
																	"nativeSrc": "2212:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2212:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2226:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2226:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2216:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2216:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2241:62:16",
																	"nodeType": "YulAssignment",
																	"src": "2241:62:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2275:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2275:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2286:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2286:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2271:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2271:3:16"
																				},
																				"nativeSrc": "2271:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2271:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2295:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2295:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2251:19:16",
																			"nodeType": "YulIdentifier",
																			"src": "2251:19:16"
																		},
																		"nativeSrc": "2251:52:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2251:52:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2241:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2241:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "1993:327:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2028:9:16",
														"nodeType": "YulTypedName",
														"src": "2028:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2039:7:16",
														"nodeType": "YulTypedName",
														"src": "2039:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2051:6:16",
														"nodeType": "YulTypedName",
														"src": "2051:6:16",
														"type": ""
													}
												],
												"src": "1993:327:16"
											},
											{
												"body": {
													"nativeSrc": "2368:48:16",
													"nodeType": "YulBlock",
													"src": "2368:48:16",
													"statements": [
														{
															"nativeSrc": "2378:32:16",
															"nodeType": "YulAssignment",
															"src": "2378:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2403:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2403:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2396:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2396:6:16"
																		},
																		"nativeSrc": "2396:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2396:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2389:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:16"
																},
																"nativeSrc": "2389:21:16",
																"nodeType": "YulFunctionCall",
																"src": "2389:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2378:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2378:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2326:90:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2350:5:16",
														"nodeType": "YulTypedName",
														"src": "2350:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2360:7:16",
														"nodeType": "YulTypedName",
														"src": "2360:7:16",
														"type": ""
													}
												],
												"src": "2326:90:16"
											},
											{
												"body": {
													"nativeSrc": "2481:50:16",
													"nodeType": "YulBlock",
													"src": "2481:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2498:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2498:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2518:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2518:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2503:14:16",
																			"nodeType": "YulIdentifier",
																			"src": "2503:14:16"
																		},
																		"nativeSrc": "2503:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2503:21:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2491:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2491:6:16"
																},
																"nativeSrc": "2491:34:16",
																"nodeType": "YulFunctionCall",
																"src": "2491:34:16"
															},
															"nativeSrc": "2491:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "2491:34:16"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2422:109:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2469:5:16",
														"nodeType": "YulTypedName",
														"src": "2469:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2476:3:16",
														"nodeType": "YulTypedName",
														"src": "2476:3:16",
														"type": ""
													}
												],
												"src": "2422:109:16"
											},
											{
												"body": {
													"nativeSrc": "2629:118:16",
													"nodeType": "YulBlock",
													"src": "2629:118:16",
													"statements": [
														{
															"nativeSrc": "2639:26:16",
															"nodeType": "YulAssignment",
															"src": "2639:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2651:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2651:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2662:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2662:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2647:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2647:3:16"
																},
																"nativeSrc": "2647:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2647:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2639:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2639:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2713:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2713:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2726:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2726:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2737:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2737:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2722:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2722:3:16"
																		},
																		"nativeSrc": "2722:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2722:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2675:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "2675:37:16"
																},
																"nativeSrc": "2675:65:16",
																"nodeType": "YulFunctionCall",
																"src": "2675:65:16"
															},
															"nativeSrc": "2675:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "2675:65:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2537:210:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2601:9:16",
														"nodeType": "YulTypedName",
														"src": "2601:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2613:6:16",
														"nodeType": "YulTypedName",
														"src": "2613:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2624:4:16",
														"nodeType": "YulTypedName",
														"src": "2624:4:16",
														"type": ""
													}
												],
												"src": "2537:210:16"
											},
											{
												"body": {
													"nativeSrc": "2798:32:16",
													"nodeType": "YulBlock",
													"src": "2798:32:16",
													"statements": [
														{
															"nativeSrc": "2808:16:16",
															"nodeType": "YulAssignment",
															"src": "2808:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:16",
																"nodeType": "YulIdentifier",
																"src": "2819:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:16",
														"nodeType": "YulTypedName",
														"src": "2780:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:16",
														"nodeType": "YulTypedName",
														"src": "2790:7:16",
														"type": ""
													}
												],
												"src": "2753:77:16"
											},
											{
												"body": {
													"nativeSrc": "2879:79:16",
													"nodeType": "YulBlock",
													"src": "2879:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:16",
																"nodeType": "YulBlock",
																"src": "2936:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:16"
																			},
																			"nativeSrc": "2938:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:16"
																		},
																		"nativeSrc": "2938:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:16"
																				},
																				"nativeSrc": "2909:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:16"
																		},
																		"nativeSrc": "2899:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:16"
																},
																"nativeSrc": "2892:43:16",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:16"
															},
															"nativeSrc": "2889:63:16",
															"nodeType": "YulIf",
															"src": "2889:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:16",
														"nodeType": "YulTypedName",
														"src": "2872:5:16",
														"type": ""
													}
												],
												"src": "2836:122:16"
											},
											{
												"body": {
													"nativeSrc": "3016:87:16",
													"nodeType": "YulBlock",
													"src": "3016:87:16",
													"statements": [
														{
															"nativeSrc": "3026:29:16",
															"nodeType": "YulAssignment",
															"src": "3026:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:16"
																},
																"nativeSrc": "3035:20:16",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:16"
																},
																"nativeSrc": "3064:33:16",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:16"
															},
															"nativeSrc": "3064:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:16",
														"nodeType": "YulTypedName",
														"src": "2994:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:16",
														"nodeType": "YulTypedName",
														"src": "3002:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:16",
														"nodeType": "YulTypedName",
														"src": "3010:5:16",
														"type": ""
													}
												],
												"src": "2964:139:16"
											},
											{
												"body": {
													"nativeSrc": "3175:263:16",
													"nodeType": "YulBlock",
													"src": "3175:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:16",
																"nodeType": "YulBlock",
																"src": "3221:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:16"
																			},
																			"nativeSrc": "3223:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:16"
																		},
																		"nativeSrc": "3223:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:16"
																		},
																		"nativeSrc": "3192:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:16"
																},
																"nativeSrc": "3188:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:16"
															},
															"nativeSrc": "3185:119:16",
															"nodeType": "YulIf",
															"src": "3185:119:16"
														},
														{
															"nativeSrc": "3314:117:16",
															"nodeType": "YulBlock",
															"src": "3314:117:16",
															"statements": [
																{
																	"nativeSrc": "3329:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:16",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:16"
																				},
																				"nativeSrc": "3389:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:16"
																		},
																		"nativeSrc": "3368:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:16",
														"nodeType": "YulTypedName",
														"src": "3145:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:16",
														"nodeType": "YulTypedName",
														"src": "3156:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:16",
														"nodeType": "YulTypedName",
														"src": "3168:6:16",
														"type": ""
													}
												],
												"src": "3109:329:16"
											},
											{
												"body": {
													"nativeSrc": "3489:81:16",
													"nodeType": "YulBlock",
													"src": "3489:81:16",
													"statements": [
														{
															"nativeSrc": "3499:65:16",
															"nodeType": "YulAssignment",
															"src": "3499:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:16",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:16"
																},
																"nativeSrc": "3510:54:16",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:16",
														"nodeType": "YulTypedName",
														"src": "3471:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:16",
														"nodeType": "YulTypedName",
														"src": "3481:7:16",
														"type": ""
													}
												],
												"src": "3444:126:16"
											},
											{
												"body": {
													"nativeSrc": "3621:51:16",
													"nodeType": "YulBlock",
													"src": "3621:51:16",
													"statements": [
														{
															"nativeSrc": "3631:35:16",
															"nodeType": "YulAssignment",
															"src": "3631:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:16"
																},
																"nativeSrc": "3642:24:16",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:16",
														"nodeType": "YulTypedName",
														"src": "3603:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:16",
														"nodeType": "YulTypedName",
														"src": "3613:7:16",
														"type": ""
													}
												],
												"src": "3576:96:16"
											},
											{
												"body": {
													"nativeSrc": "3743:53:16",
													"nodeType": "YulBlock",
													"src": "3743:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:16"
																		},
																		"nativeSrc": "3765:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:16"
																},
																"nativeSrc": "3753:37:16",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:16"
															},
															"nativeSrc": "3753:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:16",
														"nodeType": "YulTypedName",
														"src": "3731:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:16",
														"nodeType": "YulTypedName",
														"src": "3738:3:16",
														"type": ""
													}
												],
												"src": "3678:118:16"
											},
											{
												"body": {
													"nativeSrc": "3900:124:16",
													"nodeType": "YulBlock",
													"src": "3900:124:16",
													"statements": [
														{
															"nativeSrc": "3910:26:16",
															"nodeType": "YulAssignment",
															"src": "3910:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:16"
																},
																"nativeSrc": "3918:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:16"
																		},
																		"nativeSrc": "3999:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:16"
																},
																"nativeSrc": "3946:71:16",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:16"
															},
															"nativeSrc": "3946:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:16",
														"nodeType": "YulTypedName",
														"src": "3872:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:16",
														"nodeType": "YulTypedName",
														"src": "3884:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:16",
														"nodeType": "YulTypedName",
														"src": "3895:4:16",
														"type": ""
													}
												],
												"src": "3802:222:16"
											},
											{
												"body": {
													"nativeSrc": "4073:79:16",
													"nodeType": "YulBlock",
													"src": "4073:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:16",
																"nodeType": "YulBlock",
																"src": "4130:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:16"
																			},
																			"nativeSrc": "4132:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:16"
																		},
																		"nativeSrc": "4132:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:16"
																				},
																				"nativeSrc": "4103:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:16"
																		},
																		"nativeSrc": "4093:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:16"
																},
																"nativeSrc": "4086:43:16",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:16"
															},
															"nativeSrc": "4083:63:16",
															"nodeType": "YulIf",
															"src": "4083:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:16",
														"nodeType": "YulTypedName",
														"src": "4066:5:16",
														"type": ""
													}
												],
												"src": "4030:122:16"
											},
											{
												"body": {
													"nativeSrc": "4210:87:16",
													"nodeType": "YulBlock",
													"src": "4210:87:16",
													"statements": [
														{
															"nativeSrc": "4220:29:16",
															"nodeType": "YulAssignment",
															"src": "4220:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:16"
																},
																"nativeSrc": "4229:20:16",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:16"
																},
																"nativeSrc": "4258:33:16",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:16"
															},
															"nativeSrc": "4258:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:16",
														"nodeType": "YulTypedName",
														"src": "4188:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:16",
														"nodeType": "YulTypedName",
														"src": "4196:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:16",
														"nodeType": "YulTypedName",
														"src": "4204:5:16",
														"type": ""
													}
												],
												"src": "4158:139:16"
											},
											{
												"body": {
													"nativeSrc": "4386:391:16",
													"nodeType": "YulBlock",
													"src": "4386:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:16",
																"nodeType": "YulBlock",
																"src": "4432:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:16"
																			},
																			"nativeSrc": "4434:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:16"
																		},
																		"nativeSrc": "4434:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:16"
																		},
																		"nativeSrc": "4403:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:16"
																},
																"nativeSrc": "4399:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:16"
															},
															"nativeSrc": "4396:119:16",
															"nodeType": "YulIf",
															"src": "4396:119:16"
														},
														{
															"nativeSrc": "4525:117:16",
															"nodeType": "YulBlock",
															"src": "4525:117:16",
															"statements": [
																{
																	"nativeSrc": "4540:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:16"
																				},
																				"nativeSrc": "4600:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:16"
																		},
																		"nativeSrc": "4579:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:16",
															"nodeType": "YulBlock",
															"src": "4652:118:16",
															"statements": [
																{
																	"nativeSrc": "4667:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:16"
																				},
																				"nativeSrc": "4728:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:16"
																		},
																		"nativeSrc": "4707:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:16",
														"nodeType": "YulTypedName",
														"src": "4348:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:16",
														"nodeType": "YulTypedName",
														"src": "4359:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:16",
														"nodeType": "YulTypedName",
														"src": "4371:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:16",
														"nodeType": "YulTypedName",
														"src": "4379:6:16",
														"type": ""
													}
												],
												"src": "4303:474:16"
											},
											{
												"body": {
													"nativeSrc": "4872:28:16",
													"nodeType": "YulBlock",
													"src": "4872:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4889:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4889:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4892:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4892:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4882:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4882:6:16"
																},
																"nativeSrc": "4882:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4882:12:16"
															},
															"nativeSrc": "4882:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "4882:12:16"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4783:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4783:117:16"
											},
											{
												"body": {
													"nativeSrc": "4995:28:16",
													"nodeType": "YulBlock",
													"src": "4995:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5012:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5012:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5015:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5015:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5005:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5005:6:16"
																},
																"nativeSrc": "5005:12:16",
																"nodeType": "YulFunctionCall",
																"src": "5005:12:16"
															},
															"nativeSrc": "5005:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "5005:12:16"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4906:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4906:117:16"
											},
											{
												"body": {
													"nativeSrc": "5057:152:16",
													"nodeType": "YulBlock",
													"src": "5057:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5074:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5074:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5077:77:16",
																		"nodeType": "YulLiteral",
																		"src": "5077:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5067:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:16"
																},
																"nativeSrc": "5067:88:16",
																"nodeType": "YulFunctionCall",
																"src": "5067:88:16"
															},
															"nativeSrc": "5067:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "5067:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5171:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5171:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5174:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5174:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5164:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5164:6:16"
																},
																"nativeSrc": "5164:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5164:15:16"
															},
															"nativeSrc": "5164:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5164:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5195:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5195:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5198:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5198:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5188:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5188:6:16"
																},
																"nativeSrc": "5188:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5188:15:16"
															},
															"nativeSrc": "5188:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5188:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5029:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "5029:180:16"
											},
											{
												"body": {
													"nativeSrc": "5258:238:16",
													"nodeType": "YulBlock",
													"src": "5258:238:16",
													"statements": [
														{
															"nativeSrc": "5268:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5290:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5290:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5320:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "5320:4:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5298:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "5298:21:16"
																		},
																		"nativeSrc": "5298:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5298:27:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5286:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5286:3:16"
																},
																"nativeSrc": "5286:40:16",
																"nodeType": "YulFunctionCall",
																"src": "5286:40:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5272:10:16",
																	"nodeType": "YulTypedName",
																	"src": "5272:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5437:22:16",
																"nodeType": "YulBlock",
																"src": "5437:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5439:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5439:16:16"
																			},
																			"nativeSrc": "5439:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5439:18:16"
																		},
																		"nativeSrc": "5439:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5439:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5380:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "5380:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5392:18:16",
																				"nodeType": "YulLiteral",
																				"src": "5392:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5377:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "5377:2:16"
																		},
																		"nativeSrc": "5377:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5377:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5416:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "5416:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5428:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5428:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5413:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "5413:2:16"
																		},
																		"nativeSrc": "5413:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5413:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5374:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5374:2:16"
																},
																"nativeSrc": "5374:62:16",
																"nodeType": "YulFunctionCall",
																"src": "5374:62:16"
															},
															"nativeSrc": "5371:88:16",
															"nodeType": "YulIf",
															"src": "5371:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5475:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5475:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5479:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "5479:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5468:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5468:6:16"
																},
																"nativeSrc": "5468:22:16",
																"nodeType": "YulFunctionCall",
																"src": "5468:22:16"
															},
															"nativeSrc": "5468:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "5468:22:16"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5215:281:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5244:6:16",
														"nodeType": "YulTypedName",
														"src": "5244:6:16",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5252:4:16",
														"nodeType": "YulTypedName",
														"src": "5252:4:16",
														"type": ""
													}
												],
												"src": "5215:281:16"
											},
											{
												"body": {
													"nativeSrc": "5543:88:16",
													"nodeType": "YulBlock",
													"src": "5543:88:16",
													"statements": [
														{
															"nativeSrc": "5553:30:16",
															"nodeType": "YulAssignment",
															"src": "5553:30:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5563:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "5563:18:16"
																},
																"nativeSrc": "5563:20:16",
																"nodeType": "YulFunctionCall",
																"src": "5563:20:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5553:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5553:6:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5612:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5612:6:16"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5620:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5620:4:16"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5592:19:16",
																	"nodeType": "YulIdentifier",
																	"src": "5592:19:16"
																},
																"nativeSrc": "5592:33:16",
																"nodeType": "YulFunctionCall",
																"src": "5592:33:16"
															},
															"nativeSrc": "5592:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "5592:33:16"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5502:129:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5527:4:16",
														"nodeType": "YulTypedName",
														"src": "5527:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5536:6:16",
														"nodeType": "YulTypedName",
														"src": "5536:6:16",
														"type": ""
													}
												],
												"src": "5502:129:16"
											},
											{
												"body": {
													"nativeSrc": "5704:241:16",
													"nodeType": "YulBlock",
													"src": "5704:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5809:22:16",
																"nodeType": "YulBlock",
																"src": "5809:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5811:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5811:16:16"
																			},
																			"nativeSrc": "5811:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5811:18:16"
																		},
																		"nativeSrc": "5811:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5811:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5781:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5781:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5789:18:16",
																		"nodeType": "YulLiteral",
																		"src": "5789:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5778:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5778:2:16"
																},
																"nativeSrc": "5778:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5778:30:16"
															},
															"nativeSrc": "5775:56:16",
															"nodeType": "YulIf",
															"src": "5775:56:16"
														},
														{
															"nativeSrc": "5841:37:16",
															"nodeType": "YulAssignment",
															"src": "5841:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5871:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5871:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5849:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "5849:21:16"
																},
																"nativeSrc": "5849:29:16",
																"nodeType": "YulFunctionCall",
																"src": "5849:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5841:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5841:4:16"
																}
															]
														},
														{
															"nativeSrc": "5915:23:16",
															"nodeType": "YulAssignment",
															"src": "5915:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5927:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5927:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5933:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5933:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5923:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5923:3:16"
																},
																"nativeSrc": "5923:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5923:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5915:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5915:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "5637:308:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5688:6:16",
														"nodeType": "YulTypedName",
														"src": "5688:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5699:4:16",
														"nodeType": "YulTypedName",
														"src": "5699:4:16",
														"type": ""
													}
												],
												"src": "5637:308:16"
											},
											{
												"body": {
													"nativeSrc": "6015:84:16",
													"nodeType": "YulBlock",
													"src": "6015:84:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6039:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6039:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6044:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6044:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6049:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6049:6:16"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6026:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "6026:12:16"
																},
																"nativeSrc": "6026:30:16",
																"nodeType": "YulFunctionCall",
																"src": "6026:30:16"
															},
															"nativeSrc": "6026:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "6026:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6076:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6076:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6081:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6081:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6072:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6072:3:16"
																		},
																		"nativeSrc": "6072:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6072:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6090:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6090:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6065:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6065:6:16"
																},
																"nativeSrc": "6065:27:16",
																"nodeType": "YulFunctionCall",
																"src": "6065:27:16"
															},
															"nativeSrc": "6065:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "6065:27:16"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5951:148:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5997:3:16",
														"nodeType": "YulTypedName",
														"src": "5997:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6002:3:16",
														"nodeType": "YulTypedName",
														"src": "6002:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6007:6:16",
														"nodeType": "YulTypedName",
														"src": "6007:6:16",
														"type": ""
													}
												],
												"src": "5951:148:16"
											},
											{
												"body": {
													"nativeSrc": "6189:341:16",
													"nodeType": "YulBlock",
													"src": "6189:341:16",
													"statements": [
														{
															"nativeSrc": "6199:75:16",
															"nodeType": "YulAssignment",
															"src": "6199:75:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6266:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6266:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6224:41:16",
																			"nodeType": "YulIdentifier",
																			"src": "6224:41:16"
																		},
																		"nativeSrc": "6224:49:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6224:49:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6208:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "6208:15:16"
																},
																"nativeSrc": "6208:66:16",
																"nodeType": "YulFunctionCall",
																"src": "6208:66:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6199:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6199:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6290:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6290:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6297:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6297:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6283:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6283:6:16"
																},
																"nativeSrc": "6283:21:16",
																"nodeType": "YulFunctionCall",
																"src": "6283:21:16"
															},
															"nativeSrc": "6283:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "6283:21:16"
														},
														{
															"nativeSrc": "6313:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6313:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6328:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6328:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6335:4:16",
																		"nodeType": "YulLiteral",
																		"src": "6335:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6324:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:16"
																},
																"nativeSrc": "6324:16:16",
																"nodeType": "YulFunctionCall",
																"src": "6324:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6317:3:16",
																	"nodeType": "YulTypedName",
																	"src": "6317:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6378:83:16",
																"nodeType": "YulBlock",
																"src": "6378:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6380:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6380:77:16"
																			},
																			"nativeSrc": "6380:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6380:79:16"
																		},
																		"nativeSrc": "6380:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6380:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6359:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6359:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6364:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6364:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6355:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6355:3:16"
																		},
																		"nativeSrc": "6355:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6373:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6373:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6352:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6352:2:16"
																},
																"nativeSrc": "6352:25:16",
																"nodeType": "YulFunctionCall",
																"src": "6352:25:16"
															},
															"nativeSrc": "6349:112:16",
															"nodeType": "YulIf",
															"src": "6349:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6507:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6507:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6512:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6512:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6517:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6517:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6470:36:16",
																	"nodeType": "YulIdentifier",
																	"src": "6470:36:16"
																},
																"nativeSrc": "6470:54:16",
																"nodeType": "YulFunctionCall",
																"src": "6470:54:16"
															},
															"nativeSrc": "6470:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "6470:54:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6105:425:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6162:3:16",
														"nodeType": "YulTypedName",
														"src": "6162:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6167:6:16",
														"nodeType": "YulTypedName",
														"src": "6167:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6175:3:16",
														"nodeType": "YulTypedName",
														"src": "6175:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6183:5:16",
														"nodeType": "YulTypedName",
														"src": "6183:5:16",
														"type": ""
													}
												],
												"src": "6105:425:16"
											},
											{
												"body": {
													"nativeSrc": "6612:278:16",
													"nodeType": "YulBlock",
													"src": "6612:278:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6661:83:16",
																"nodeType": "YulBlock",
																"src": "6661:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6663:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6663:77:16"
																			},
																			"nativeSrc": "6663:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6663:79:16"
																		},
																		"nativeSrc": "6663:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6663:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6640:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6640:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6648:4:16",
																						"nodeType": "YulLiteral",
																						"src": "6648:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6636:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6636:3:16"
																				},
																				"nativeSrc": "6636:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6636:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6655:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6655:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6632:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6632:3:16"
																		},
																		"nativeSrc": "6632:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6632:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6625:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6625:6:16"
																},
																"nativeSrc": "6625:35:16",
																"nodeType": "YulFunctionCall",
																"src": "6625:35:16"
															},
															"nativeSrc": "6622:122:16",
															"nodeType": "YulIf",
															"src": "6622:122:16"
														},
														{
															"nativeSrc": "6753:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6753:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6780:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6780:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6767:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "6767:12:16"
																},
																"nativeSrc": "6767:20:16",
																"nodeType": "YulFunctionCall",
																"src": "6767:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6757:6:16",
																	"nodeType": "YulTypedName",
																	"src": "6757:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6796:88:16",
															"nodeType": "YulAssignment",
															"src": "6796:88:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6857:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6857:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6865:4:16",
																				"nodeType": "YulLiteral",
																				"src": "6865:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6853:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6853:3:16"
																		},
																		"nativeSrc": "6853:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6853:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6872:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6872:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6880:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6880:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "6805:47:16",
																	"nodeType": "YulIdentifier",
																	"src": "6805:47:16"
																},
																"nativeSrc": "6805:79:16",
																"nodeType": "YulFunctionCall",
																"src": "6805:79:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6796:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6796:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "6550:340:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6590:6:16",
														"nodeType": "YulTypedName",
														"src": "6590:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6598:3:16",
														"nodeType": "YulTypedName",
														"src": "6598:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6606:5:16",
														"nodeType": "YulTypedName",
														"src": "6606:5:16",
														"type": ""
													}
												],
												"src": "6550:340:16"
											},
											{
												"body": {
													"nativeSrc": "7006:689:16",
													"nodeType": "YulBlock",
													"src": "7006:689:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7052:83:16",
																"nodeType": "YulBlock",
																"src": "7052:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7054:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "7054:77:16"
																			},
																			"nativeSrc": "7054:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7054:79:16"
																		},
																		"nativeSrc": "7054:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7054:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7027:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7027:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7036:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7036:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7023:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7023:3:16"
																		},
																		"nativeSrc": "7023:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7023:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7048:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7048:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7019:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7019:3:16"
																},
																"nativeSrc": "7019:32:16",
																"nodeType": "YulFunctionCall",
																"src": "7019:32:16"
															},
															"nativeSrc": "7016:119:16",
															"nodeType": "YulIf",
															"src": "7016:119:16"
														},
														{
															"nativeSrc": "7145:287:16",
															"nodeType": "YulBlock",
															"src": "7145:287:16",
															"statements": [
																{
																	"nativeSrc": "7160:45:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7160:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7191:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7191:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7202:1:16",
																						"nodeType": "YulLiteral",
																						"src": "7202:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7187:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7187:3:16"
																				},
																				"nativeSrc": "7187:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7187:17:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7174:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "7174:12:16"
																		},
																		"nativeSrc": "7174:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7174:31:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7164:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7164:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7252:83:16",
																		"nodeType": "YulBlock",
																		"src": "7252:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7254:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "7254:77:16"
																					},
																					"nativeSrc": "7254:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "7254:79:16"
																				},
																				"nativeSrc": "7254:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "7254:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7224:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7224:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7232:18:16",
																				"nodeType": "YulLiteral",
																				"src": "7232:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7221:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7221:2:16"
																		},
																		"nativeSrc": "7221:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7221:30:16"
																	},
																	"nativeSrc": "7218:117:16",
																	"nodeType": "YulIf",
																	"src": "7218:117:16"
																},
																{
																	"nativeSrc": "7349:73:16",
																	"nodeType": "YulAssignment",
																	"src": "7349:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7394:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7394:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7405:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7405:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7390:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7390:3:16"
																				},
																				"nativeSrc": "7390:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7390:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7414:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7414:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7359:30:16",
																			"nodeType": "YulIdentifier",
																			"src": "7359:30:16"
																		},
																		"nativeSrc": "7359:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7359:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7349:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7349:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7442:118:16",
															"nodeType": "YulBlock",
															"src": "7442:118:16",
															"statements": [
																{
																	"nativeSrc": "7457:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7457:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7471:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7471:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7461:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7461:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7487:63:16",
																	"nodeType": "YulAssignment",
																	"src": "7487:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7522:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7522:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7533:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7533:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7518:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7518:3:16"
																				},
																				"nativeSrc": "7518:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7518:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7542:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7542:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7497:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "7497:20:16"
																		},
																		"nativeSrc": "7497:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7497:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7487:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7487:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7570:118:16",
															"nodeType": "YulBlock",
															"src": "7570:118:16",
															"statements": [
																{
																	"nativeSrc": "7585:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7585:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7599:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7599:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7589:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7589:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7615:63:16",
																	"nodeType": "YulAssignment",
																	"src": "7615:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7650:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7650:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7661:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7661:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7646:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7646:3:16"
																				},
																				"nativeSrc": "7646:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7646:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7670:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7670:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7625:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "7625:20:16"
																		},
																		"nativeSrc": "7625:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7625:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7615:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7615:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256",
												"nativeSrc": "6896:799:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6960:9:16",
														"nodeType": "YulTypedName",
														"src": "6960:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6971:7:16",
														"nodeType": "YulTypedName",
														"src": "6971:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6983:6:16",
														"nodeType": "YulTypedName",
														"src": "6983:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6991:6:16",
														"nodeType": "YulTypedName",
														"src": "6991:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6999:6:16",
														"nodeType": "YulTypedName",
														"src": "6999:6:16",
														"type": ""
													}
												],
												"src": "6896:799:16"
											},
											{
												"body": {
													"nativeSrc": "7766:53:16",
													"nodeType": "YulBlock",
													"src": "7766:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7783:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7783:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7806:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "7806:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7788:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "7788:17:16"
																		},
																		"nativeSrc": "7788:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7788:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7776:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7776:6:16"
																},
																"nativeSrc": "7776:37:16",
																"nodeType": "YulFunctionCall",
																"src": "7776:37:16"
															},
															"nativeSrc": "7776:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "7776:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7701:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7754:5:16",
														"nodeType": "YulTypedName",
														"src": "7754:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7761:3:16",
														"nodeType": "YulTypedName",
														"src": "7761:3:16",
														"type": ""
													}
												],
												"src": "7701:118:16"
											},
											{
												"body": {
													"nativeSrc": "7923:124:16",
													"nodeType": "YulBlock",
													"src": "7923:124:16",
													"statements": [
														{
															"nativeSrc": "7933:26:16",
															"nodeType": "YulAssignment",
															"src": "7933:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7945:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7945:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7956:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7956:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7941:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7941:3:16"
																},
																"nativeSrc": "7941:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7941:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7933:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7933:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8013:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8013:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8026:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8026:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8037:1:16",
																				"nodeType": "YulLiteral",
																				"src": "8037:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8022:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8022:3:16"
																		},
																		"nativeSrc": "8022:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8022:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7969:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "7969:43:16"
																},
																"nativeSrc": "7969:71:16",
																"nodeType": "YulFunctionCall",
																"src": "7969:71:16"
															},
															"nativeSrc": "7969:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "7969:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7825:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7895:9:16",
														"nodeType": "YulTypedName",
														"src": "7895:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7907:6:16",
														"nodeType": "YulTypedName",
														"src": "7907:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7918:4:16",
														"nodeType": "YulTypedName",
														"src": "7918:4:16",
														"type": ""
													}
												],
												"src": "7825:222:16"
											},
											{
												"body": {
													"nativeSrc": "8153:519:16",
													"nodeType": "YulBlock",
													"src": "8153:519:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "8199:83:16",
																"nodeType": "YulBlock",
																"src": "8199:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8201:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "8201:77:16"
																			},
																			"nativeSrc": "8201:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8201:79:16"
																		},
																		"nativeSrc": "8201:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8201:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8174:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8174:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8183:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8183:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8170:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8170:3:16"
																		},
																		"nativeSrc": "8170:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8170:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8195:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8195:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8166:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8166:3:16"
																},
																"nativeSrc": "8166:32:16",
																"nodeType": "YulFunctionCall",
																"src": "8166:32:16"
															},
															"nativeSrc": "8163:119:16",
															"nodeType": "YulIf",
															"src": "8163:119:16"
														},
														{
															"nativeSrc": "8292:117:16",
															"nodeType": "YulBlock",
															"src": "8292:117:16",
															"statements": [
																{
																	"nativeSrc": "8307:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8307:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8321:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8321:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8311:6:16",
																			"nodeType": "YulTypedName",
																			"src": "8311:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8336:63:16",
																	"nodeType": "YulAssignment",
																	"src": "8336:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8371:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "8371:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8382:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8382:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8367:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8367:3:16"
																				},
																				"nativeSrc": "8367:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8367:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8391:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8391:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8346:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "8346:20:16"
																		},
																		"nativeSrc": "8346:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8346:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8336:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "8336:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8419:118:16",
															"nodeType": "YulBlock",
															"src": "8419:118:16",
															"statements": [
																{
																	"nativeSrc": "8434:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8434:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8448:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8448:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8438:6:16",
																			"nodeType": "YulTypedName",
																			"src": "8438:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8464:63:16",
																	"nodeType": "YulAssignment",
																	"src": "8464:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8499:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "8499:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8510:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8510:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8495:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8495:3:16"
																				},
																				"nativeSrc": "8495:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8495:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8519:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8519:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8474:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "8474:20:16"
																		},
																		"nativeSrc": "8474:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8474:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8464:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "8464:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8547:118:16",
															"nodeType": "YulBlock",
															"src": "8547:118:16",
															"statements": [
																{
																	"nativeSrc": "8562:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8562:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8576:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8576:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8566:6:16",
																			"nodeType": "YulTypedName",
																			"src": "8566:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8592:63:16",
																	"nodeType": "YulAssignment",
																	"src": "8592:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8627:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "8627:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8638:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8638:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8623:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8623:3:16"
																				},
																				"nativeSrc": "8623:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8623:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8647:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8647:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8602:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "8602:20:16"
																		},
																		"nativeSrc": "8602:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8602:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8592:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "8592:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "8053:619:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8107:9:16",
														"nodeType": "YulTypedName",
														"src": "8107:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8118:7:16",
														"nodeType": "YulTypedName",
														"src": "8118:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8130:6:16",
														"nodeType": "YulTypedName",
														"src": "8130:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8138:6:16",
														"nodeType": "YulTypedName",
														"src": "8138:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8146:6:16",
														"nodeType": "YulTypedName",
														"src": "8146:6:16",
														"type": ""
													}
												],
												"src": "8053:619:16"
											},
											{
												"body": {
													"nativeSrc": "8744:263:16",
													"nodeType": "YulBlock",
													"src": "8744:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "8790:83:16",
																"nodeType": "YulBlock",
																"src": "8790:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8792:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "8792:77:16"
																			},
																			"nativeSrc": "8792:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8792:79:16"
																		},
																		"nativeSrc": "8792:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8792:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8765:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8765:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8774:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8774:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8761:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8761:3:16"
																		},
																		"nativeSrc": "8761:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8761:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8786:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8786:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8757:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8757:3:16"
																},
																"nativeSrc": "8757:32:16",
																"nodeType": "YulFunctionCall",
																"src": "8757:32:16"
															},
															"nativeSrc": "8754:119:16",
															"nodeType": "YulIf",
															"src": "8754:119:16"
														},
														{
															"nativeSrc": "8883:117:16",
															"nodeType": "YulBlock",
															"src": "8883:117:16",
															"statements": [
																{
																	"nativeSrc": "8898:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8898:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8912:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8912:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8902:6:16",
																			"nodeType": "YulTypedName",
																			"src": "8902:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8927:63:16",
																	"nodeType": "YulAssignment",
																	"src": "8927:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8962:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "8962:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8973:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8973:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8958:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8958:3:16"
																				},
																				"nativeSrc": "8958:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8958:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8982:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8982:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8937:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "8937:20:16"
																		},
																		"nativeSrc": "8937:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8937:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8927:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "8927:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8678:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8714:9:16",
														"nodeType": "YulTypedName",
														"src": "8714:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8725:7:16",
														"nodeType": "YulTypedName",
														"src": "8725:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8737:6:16",
														"nodeType": "YulTypedName",
														"src": "8737:6:16",
														"type": ""
													}
												],
												"src": "8678:329:16"
											},
											{
												"body": {
													"nativeSrc": "9053:76:16",
													"nodeType": "YulBlock",
													"src": "9053:76:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "9107:16:16",
																"nodeType": "YulBlock",
																"src": "9107:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9116:1:16",
																					"nodeType": "YulLiteral",
																					"src": "9116:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9119:1:16",
																					"nodeType": "YulLiteral",
																					"src": "9119:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9109:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9109:6:16"
																			},
																			"nativeSrc": "9109:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9109:12:16"
																		},
																		"nativeSrc": "9109:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9109:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9076:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "9076:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9098:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "9098:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9083:14:16",
																					"nodeType": "YulIdentifier",
																					"src": "9083:14:16"
																				},
																				"nativeSrc": "9083:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9083:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9073:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "9073:2:16"
																		},
																		"nativeSrc": "9073:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9073:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9066:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9066:6:16"
																},
																"nativeSrc": "9066:40:16",
																"nodeType": "YulFunctionCall",
																"src": "9066:40:16"
															},
															"nativeSrc": "9063:60:16",
															"nodeType": "YulIf",
															"src": "9063:60:16"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9013:116:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9046:5:16",
														"nodeType": "YulTypedName",
														"src": "9046:5:16",
														"type": ""
													}
												],
												"src": "9013:116:16"
											},
											{
												"body": {
													"nativeSrc": "9184:84:16",
													"nodeType": "YulBlock",
													"src": "9184:84:16",
													"statements": [
														{
															"nativeSrc": "9194:29:16",
															"nodeType": "YulAssignment",
															"src": "9194:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9216:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9216:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9203:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "9203:12:16"
																},
																"nativeSrc": "9203:20:16",
																"nodeType": "YulFunctionCall",
																"src": "9203:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9194:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "9194:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9256:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "9256:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9232:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "9232:23:16"
																},
																"nativeSrc": "9232:30:16",
																"nodeType": "YulFunctionCall",
																"src": "9232:30:16"
															},
															"nativeSrc": "9232:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "9232:30:16"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "9135:133:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9162:6:16",
														"nodeType": "YulTypedName",
														"src": "9162:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9170:3:16",
														"nodeType": "YulTypedName",
														"src": "9170:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9178:5:16",
														"nodeType": "YulTypedName",
														"src": "9178:5:16",
														"type": ""
													}
												],
												"src": "9135:133:16"
											},
											{
												"body": {
													"nativeSrc": "9354:388:16",
													"nodeType": "YulBlock",
													"src": "9354:388:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "9400:83:16",
																"nodeType": "YulBlock",
																"src": "9400:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9402:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "9402:77:16"
																			},
																			"nativeSrc": "9402:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9402:79:16"
																		},
																		"nativeSrc": "9402:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9402:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9375:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9375:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9384:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9384:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9371:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9371:3:16"
																		},
																		"nativeSrc": "9371:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9371:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9396:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9396:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9367:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9367:3:16"
																},
																"nativeSrc": "9367:32:16",
																"nodeType": "YulFunctionCall",
																"src": "9367:32:16"
															},
															"nativeSrc": "9364:119:16",
															"nodeType": "YulIf",
															"src": "9364:119:16"
														},
														{
															"nativeSrc": "9493:117:16",
															"nodeType": "YulBlock",
															"src": "9493:117:16",
															"statements": [
																{
																	"nativeSrc": "9508:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9508:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9522:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9522:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9512:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9512:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9537:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9537:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9572:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9572:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9583:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9583:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9568:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9568:3:16"
																				},
																				"nativeSrc": "9568:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9568:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9592:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9592:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9547:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9547:20:16"
																		},
																		"nativeSrc": "9547:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9547:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9537:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9537:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9620:115:16",
															"nodeType": "YulBlock",
															"src": "9620:115:16",
															"statements": [
																{
																	"nativeSrc": "9635:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9635:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9649:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9649:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9639:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9639:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9665:60:16",
																	"nodeType": "YulAssignment",
																	"src": "9665:60:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9697:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9697:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9708:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9708:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9693:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9693:3:16"
																				},
																				"nativeSrc": "9693:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9693:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9717:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9717:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "9675:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "9675:17:16"
																		},
																		"nativeSrc": "9675:50:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9675:50:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9665:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9665:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9274:468:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9316:9:16",
														"nodeType": "YulTypedName",
														"src": "9316:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9327:7:16",
														"nodeType": "YulTypedName",
														"src": "9327:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9339:6:16",
														"nodeType": "YulTypedName",
														"src": "9339:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9347:6:16",
														"nodeType": "YulTypedName",
														"src": "9347:6:16",
														"type": ""
													}
												],
												"src": "9274:468:16"
											},
											{
												"body": {
													"nativeSrc": "9801:51:16",
													"nodeType": "YulBlock",
													"src": "9801:51:16",
													"statements": [
														{
															"nativeSrc": "9811:35:16",
															"nodeType": "YulAssignment",
															"src": "9811:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9840:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "9840:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9822:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "9822:17:16"
																},
																"nativeSrc": "9822:24:16",
																"nodeType": "YulFunctionCall",
																"src": "9822:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9811:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "9811:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "9748:104:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9783:5:16",
														"nodeType": "YulTypedName",
														"src": "9783:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9793:7:16",
														"nodeType": "YulTypedName",
														"src": "9793:7:16",
														"type": ""
													}
												],
												"src": "9748:104:16"
											},
											{
												"body": {
													"nativeSrc": "9939:61:16",
													"nodeType": "YulBlock",
													"src": "9939:61:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9956:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9956:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9987:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "9987:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "9961:25:16",
																			"nodeType": "YulIdentifier",
																			"src": "9961:25:16"
																		},
																		"nativeSrc": "9961:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9961:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9949:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9949:6:16"
																},
																"nativeSrc": "9949:45:16",
																"nodeType": "YulFunctionCall",
																"src": "9949:45:16"
															},
															"nativeSrc": "9949:45:16",
															"nodeType": "YulExpressionStatement",
															"src": "9949:45:16"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "9858:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9927:5:16",
														"nodeType": "YulTypedName",
														"src": "9927:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9934:3:16",
														"nodeType": "YulTypedName",
														"src": "9934:3:16",
														"type": ""
													}
												],
												"src": "9858:142:16"
											},
											{
												"body": {
													"nativeSrc": "10120:140:16",
													"nodeType": "YulBlock",
													"src": "10120:140:16",
													"statements": [
														{
															"nativeSrc": "10130:26:16",
															"nodeType": "YulAssignment",
															"src": "10130:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10142:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10142:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10153:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10153:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10138:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10138:3:16"
																},
																"nativeSrc": "10138:18:16",
																"nodeType": "YulFunctionCall",
																"src": "10138:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10130:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10130:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10226:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10226:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10239:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10239:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10250:1:16",
																				"nodeType": "YulLiteral",
																				"src": "10250:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10235:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10235:3:16"
																		},
																		"nativeSrc": "10235:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10235:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "10166:59:16",
																	"nodeType": "YulIdentifier",
																	"src": "10166:59:16"
																},
																"nativeSrc": "10166:87:16",
																"nodeType": "YulFunctionCall",
																"src": "10166:87:16"
															},
															"nativeSrc": "10166:87:16",
															"nodeType": "YulExpressionStatement",
															"src": "10166:87:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "10006:254:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10092:9:16",
														"nodeType": "YulTypedName",
														"src": "10092:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10104:6:16",
														"nodeType": "YulTypedName",
														"src": "10104:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10115:4:16",
														"nodeType": "YulTypedName",
														"src": "10115:4:16",
														"type": ""
													}
												],
												"src": "10006:254:16"
											},
											{
												"body": {
													"nativeSrc": "10332:241:16",
													"nodeType": "YulBlock",
													"src": "10332:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "10437:22:16",
																"nodeType": "YulBlock",
																"src": "10437:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10439:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "10439:16:16"
																			},
																			"nativeSrc": "10439:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10439:18:16"
																		},
																		"nativeSrc": "10439:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10439:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10409:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10409:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10417:18:16",
																		"nodeType": "YulLiteral",
																		"src": "10417:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10406:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10406:2:16"
																},
																"nativeSrc": "10406:30:16",
																"nodeType": "YulFunctionCall",
																"src": "10406:30:16"
															},
															"nativeSrc": "10403:56:16",
															"nodeType": "YulIf",
															"src": "10403:56:16"
														},
														{
															"nativeSrc": "10469:37:16",
															"nodeType": "YulAssignment",
															"src": "10469:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10499:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10499:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10477:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "10477:21:16"
																},
																"nativeSrc": "10477:29:16",
																"nodeType": "YulFunctionCall",
																"src": "10477:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10469:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10469:4:16"
																}
															]
														},
														{
															"nativeSrc": "10543:23:16",
															"nodeType": "YulAssignment",
															"src": "10543:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10555:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "10555:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10561:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10561:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10551:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10551:3:16"
																},
																"nativeSrc": "10551:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10551:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10543:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10543:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "10266:307:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10316:6:16",
														"nodeType": "YulTypedName",
														"src": "10316:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10327:4:16",
														"nodeType": "YulTypedName",
														"src": "10327:4:16",
														"type": ""
													}
												],
												"src": "10266:307:16"
											},
											{
												"body": {
													"nativeSrc": "10662:340:16",
													"nodeType": "YulBlock",
													"src": "10662:340:16",
													"statements": [
														{
															"nativeSrc": "10672:74:16",
															"nodeType": "YulAssignment",
															"src": "10672:74:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10738:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10738:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "10697:40:16",
																			"nodeType": "YulIdentifier",
																			"src": "10697:40:16"
																		},
																		"nativeSrc": "10697:48:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10697:48:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10681:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "10681:15:16"
																},
																"nativeSrc": "10681:65:16",
																"nodeType": "YulFunctionCall",
																"src": "10681:65:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10672:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "10672:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10762:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "10762:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10769:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10769:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10755:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10755:6:16"
																},
																"nativeSrc": "10755:21:16",
																"nodeType": "YulFunctionCall",
																"src": "10755:21:16"
															},
															"nativeSrc": "10755:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "10755:21:16"
														},
														{
															"nativeSrc": "10785:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "10785:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10800:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "10800:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10807:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10807:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10796:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10796:3:16"
																},
																"nativeSrc": "10796:16:16",
																"nodeType": "YulFunctionCall",
																"src": "10796:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10789:3:16",
																	"nodeType": "YulTypedName",
																	"src": "10789:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10850:83:16",
																"nodeType": "YulBlock",
																"src": "10850:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10852:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "10852:77:16"
																			},
																			"nativeSrc": "10852:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10852:79:16"
																		},
																		"nativeSrc": "10852:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10852:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10831:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "10831:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10836:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10836:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10827:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10827:3:16"
																		},
																		"nativeSrc": "10827:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10827:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10845:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10845:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10824:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10824:2:16"
																},
																"nativeSrc": "10824:25:16",
																"nodeType": "YulFunctionCall",
																"src": "10824:25:16"
															},
															"nativeSrc": "10821:112:16",
															"nodeType": "YulIf",
															"src": "10821:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10979:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10979:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10984:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10984:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10989:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10989:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10942:36:16",
																	"nodeType": "YulIdentifier",
																	"src": "10942:36:16"
																},
																"nativeSrc": "10942:54:16",
																"nodeType": "YulFunctionCall",
																"src": "10942:54:16"
															},
															"nativeSrc": "10942:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "10942:54:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "10579:423:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10635:3:16",
														"nodeType": "YulTypedName",
														"src": "10635:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10640:6:16",
														"nodeType": "YulTypedName",
														"src": "10640:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10648:3:16",
														"nodeType": "YulTypedName",
														"src": "10648:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10656:5:16",
														"nodeType": "YulTypedName",
														"src": "10656:5:16",
														"type": ""
													}
												],
												"src": "10579:423:16"
											},
											{
												"body": {
													"nativeSrc": "11082:277:16",
													"nodeType": "YulBlock",
													"src": "11082:277:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11131:83:16",
																"nodeType": "YulBlock",
																"src": "11131:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11133:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11133:77:16"
																			},
																			"nativeSrc": "11133:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11133:79:16"
																		},
																		"nativeSrc": "11133:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11133:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11110:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11110:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11118:4:16",
																						"nodeType": "YulLiteral",
																						"src": "11118:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11106:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11106:3:16"
																				},
																				"nativeSrc": "11106:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11106:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11125:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "11125:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11102:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11102:3:16"
																		},
																		"nativeSrc": "11102:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11102:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11095:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11095:6:16"
																},
																"nativeSrc": "11095:35:16",
																"nodeType": "YulFunctionCall",
																"src": "11095:35:16"
															},
															"nativeSrc": "11092:122:16",
															"nodeType": "YulIf",
															"src": "11092:122:16"
														},
														{
															"nativeSrc": "11223:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "11223:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11250:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11250:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11237:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "11237:12:16"
																},
																"nativeSrc": "11237:20:16",
																"nodeType": "YulFunctionCall",
																"src": "11237:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11227:6:16",
																	"nodeType": "YulTypedName",
																	"src": "11227:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11266:87:16",
															"nodeType": "YulAssignment",
															"src": "11266:87:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11326:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11326:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11334:4:16",
																				"nodeType": "YulLiteral",
																				"src": "11334:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11322:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11322:3:16"
																		},
																		"nativeSrc": "11322:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11322:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11341:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11341:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11349:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11349:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "11275:46:16",
																	"nodeType": "YulIdentifier",
																	"src": "11275:46:16"
																},
																"nativeSrc": "11275:78:16",
																"nodeType": "YulFunctionCall",
																"src": "11275:78:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11266:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "11266:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "11021:338:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11060:6:16",
														"nodeType": "YulTypedName",
														"src": "11060:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11068:3:16",
														"nodeType": "YulTypedName",
														"src": "11068:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11076:5:16",
														"nodeType": "YulTypedName",
														"src": "11076:5:16",
														"type": ""
													}
												],
												"src": "11021:338:16"
											},
											{
												"body": {
													"nativeSrc": "11491:817:16",
													"nodeType": "YulBlock",
													"src": "11491:817:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11538:83:16",
																"nodeType": "YulBlock",
																"src": "11538:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11540:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11540:77:16"
																			},
																			"nativeSrc": "11540:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11540:79:16"
																		},
																		"nativeSrc": "11540:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11540:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11512:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11512:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11521:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11521:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11508:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11508:3:16"
																		},
																		"nativeSrc": "11508:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11508:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11533:3:16",
																		"nodeType": "YulLiteral",
																		"src": "11533:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11504:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11504:3:16"
																},
																"nativeSrc": "11504:33:16",
																"nodeType": "YulFunctionCall",
																"src": "11504:33:16"
															},
															"nativeSrc": "11501:120:16",
															"nodeType": "YulIf",
															"src": "11501:120:16"
														},
														{
															"nativeSrc": "11631:117:16",
															"nodeType": "YulBlock",
															"src": "11631:117:16",
															"statements": [
																{
																	"nativeSrc": "11646:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11646:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11660:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11660:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11650:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11650:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11675:63:16",
																	"nodeType": "YulAssignment",
																	"src": "11675:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11710:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11710:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11721:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11721:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11706:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11706:3:16"
																				},
																				"nativeSrc": "11706:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11706:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11730:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11730:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11685:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "11685:20:16"
																		},
																		"nativeSrc": "11685:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11685:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11675:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11675:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11758:118:16",
															"nodeType": "YulBlock",
															"src": "11758:118:16",
															"statements": [
																{
																	"nativeSrc": "11773:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11773:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11787:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11787:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11777:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11777:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11803:63:16",
																	"nodeType": "YulAssignment",
																	"src": "11803:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11838:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11838:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11849:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11849:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11834:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11834:3:16"
																				},
																				"nativeSrc": "11834:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11834:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11858:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11858:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11813:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "11813:20:16"
																		},
																		"nativeSrc": "11813:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11813:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11803:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11803:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11886:118:16",
															"nodeType": "YulBlock",
															"src": "11886:118:16",
															"statements": [
																{
																	"nativeSrc": "11901:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11901:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11915:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11915:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11905:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11905:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11931:63:16",
																	"nodeType": "YulAssignment",
																	"src": "11931:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11966:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11966:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11977:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11977:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11962:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11962:3:16"
																				},
																				"nativeSrc": "11962:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11962:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11986:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11986:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11941:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "11941:20:16"
																		},
																		"nativeSrc": "11941:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11941:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11931:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11931:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12014:287:16",
															"nodeType": "YulBlock",
															"src": "12014:287:16",
															"statements": [
																{
																	"nativeSrc": "12029:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12029:46:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12060:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12060:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12071:2:16",
																						"nodeType": "YulLiteral",
																						"src": "12071:2:16",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12056:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12056:3:16"
																				},
																				"nativeSrc": "12056:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12056:18:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12043:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "12043:12:16"
																		},
																		"nativeSrc": "12043:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12043:32:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12033:6:16",
																			"nodeType": "YulTypedName",
																			"src": "12033:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12122:83:16",
																		"nodeType": "YulBlock",
																		"src": "12122:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12124:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "12124:77:16"
																					},
																					"nativeSrc": "12124:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "12124:79:16"
																				},
																				"nativeSrc": "12124:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "12124:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12094:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12094:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12102:18:16",
																				"nodeType": "YulLiteral",
																				"src": "12102:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12091:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "12091:2:16"
																		},
																		"nativeSrc": "12091:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12091:30:16"
																	},
																	"nativeSrc": "12088:117:16",
																	"nodeType": "YulIf",
																	"src": "12088:117:16"
																},
																{
																	"nativeSrc": "12219:72:16",
																	"nodeType": "YulAssignment",
																	"src": "12219:72:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12263:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12263:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12274:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12274:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12259:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12259:3:16"
																				},
																				"nativeSrc": "12259:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12259:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12283:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12283:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12229:29:16",
																			"nodeType": "YulIdentifier",
																			"src": "12229:29:16"
																		},
																		"nativeSrc": "12229:62:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12229:62:16"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12219:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12219:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "11365:943:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11437:9:16",
														"nodeType": "YulTypedName",
														"src": "11437:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11448:7:16",
														"nodeType": "YulTypedName",
														"src": "11448:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11460:6:16",
														"nodeType": "YulTypedName",
														"src": "11460:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11468:6:16",
														"nodeType": "YulTypedName",
														"src": "11468:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11476:6:16",
														"nodeType": "YulTypedName",
														"src": "11476:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11484:6:16",
														"nodeType": "YulTypedName",
														"src": "11484:6:16",
														"type": ""
													}
												],
												"src": "11365:943:16"
											},
											{
												"body": {
													"nativeSrc": "12397:391:16",
													"nodeType": "YulBlock",
													"src": "12397:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "12443:83:16",
																"nodeType": "YulBlock",
																"src": "12443:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12445:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "12445:77:16"
																			},
																			"nativeSrc": "12445:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "12445:79:16"
																		},
																		"nativeSrc": "12445:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "12445:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12418:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12418:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12427:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12427:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12414:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12414:3:16"
																		},
																		"nativeSrc": "12414:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12414:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12439:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12439:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12410:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12410:3:16"
																},
																"nativeSrc": "12410:32:16",
																"nodeType": "YulFunctionCall",
																"src": "12410:32:16"
															},
															"nativeSrc": "12407:119:16",
															"nodeType": "YulIf",
															"src": "12407:119:16"
														},
														{
															"nativeSrc": "12536:117:16",
															"nodeType": "YulBlock",
															"src": "12536:117:16",
															"statements": [
																{
																	"nativeSrc": "12551:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12551:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12565:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12565:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12555:6:16",
																			"nodeType": "YulTypedName",
																			"src": "12555:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12580:63:16",
																	"nodeType": "YulAssignment",
																	"src": "12580:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12615:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12615:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12626:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12626:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12611:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12611:3:16"
																				},
																				"nativeSrc": "12611:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12611:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12635:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12635:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12590:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "12590:20:16"
																		},
																		"nativeSrc": "12590:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12590:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12580:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12580:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12663:118:16",
															"nodeType": "YulBlock",
															"src": "12663:118:16",
															"statements": [
																{
																	"nativeSrc": "12678:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12678:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12692:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12692:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12682:6:16",
																			"nodeType": "YulTypedName",
																			"src": "12682:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12708:63:16",
																	"nodeType": "YulAssignment",
																	"src": "12708:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12743:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12743:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12754:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12754:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12739:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12739:3:16"
																				},
																				"nativeSrc": "12739:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12739:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12763:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12763:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12718:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "12718:20:16"
																		},
																		"nativeSrc": "12718:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12718:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12708:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12708:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12314:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12359:9:16",
														"nodeType": "YulTypedName",
														"src": "12359:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12370:7:16",
														"nodeType": "YulTypedName",
														"src": "12370:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12382:6:16",
														"nodeType": "YulTypedName",
														"src": "12382:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12390:6:16",
														"nodeType": "YulTypedName",
														"src": "12390:6:16",
														"type": ""
													}
												],
												"src": "12314:474:16"
											},
											{
												"body": {
													"nativeSrc": "12822:152:16",
													"nodeType": "YulBlock",
													"src": "12822:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12839:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12839:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12842:77:16",
																		"nodeType": "YulLiteral",
																		"src": "12842:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12832:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12832:6:16"
																},
																"nativeSrc": "12832:88:16",
																"nodeType": "YulFunctionCall",
																"src": "12832:88:16"
															},
															"nativeSrc": "12832:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "12832:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12936:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12936:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12939:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12939:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12929:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12929:6:16"
																},
																"nativeSrc": "12929:15:16",
																"nodeType": "YulFunctionCall",
																"src": "12929:15:16"
															},
															"nativeSrc": "12929:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "12929:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12960:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12960:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12963:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12963:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12953:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12953:6:16"
																},
																"nativeSrc": "12953:15:16",
																"nodeType": "YulFunctionCall",
																"src": "12953:15:16"
															},
															"nativeSrc": "12953:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "12953:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12794:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "12794:180:16"
											},
											{
												"body": {
													"nativeSrc": "13031:269:16",
													"nodeType": "YulBlock",
													"src": "13031:269:16",
													"statements": [
														{
															"nativeSrc": "13041:22:16",
															"nodeType": "YulAssignment",
															"src": "13041:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13055:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "13055:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13061:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13061:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13051:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13051:3:16"
																},
																"nativeSrc": "13051:12:16",
																"nodeType": "YulFunctionCall",
																"src": "13051:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13041:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13041:6:16"
																}
															]
														},
														{
															"nativeSrc": "13072:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "13072:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13102:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "13102:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13108:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13108:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13098:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13098:3:16"
																},
																"nativeSrc": "13098:12:16",
																"nodeType": "YulFunctionCall",
																"src": "13098:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13076:18:16",
																	"nodeType": "YulTypedName",
																	"src": "13076:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13149:51:16",
																"nodeType": "YulBlock",
																"src": "13149:51:16",
																"statements": [
																	{
																		"nativeSrc": "13163:27:16",
																		"nodeType": "YulAssignment",
																		"src": "13163:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13177:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "13177:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13185:4:16",
																					"nodeType": "YulLiteral",
																					"src": "13185:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13173:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "13173:3:16"
																			},
																			"nativeSrc": "13173:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13173:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13163:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13163:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13129:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "13129:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13122:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13122:6:16"
																},
																"nativeSrc": "13122:26:16",
																"nodeType": "YulFunctionCall",
																"src": "13122:26:16"
															},
															"nativeSrc": "13119:81:16",
															"nodeType": "YulIf",
															"src": "13119:81:16"
														},
														{
															"body": {
																"nativeSrc": "13252:42:16",
																"nodeType": "YulBlock",
																"src": "13252:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13266:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "13266:16:16"
																			},
																			"nativeSrc": "13266:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13266:18:16"
																		},
																		"nativeSrc": "13266:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "13266:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13216:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "13216:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13239:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13239:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13247:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13247:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13236:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "13236:2:16"
																		},
																		"nativeSrc": "13236:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13236:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13213:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "13213:2:16"
																},
																"nativeSrc": "13213:38:16",
																"nodeType": "YulFunctionCall",
																"src": "13213:38:16"
															},
															"nativeSrc": "13210:84:16",
															"nodeType": "YulIf",
															"src": "13210:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12980:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13015:4:16",
														"nodeType": "YulTypedName",
														"src": "13015:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13024:6:16",
														"nodeType": "YulTypedName",
														"src": "13024:6:16",
														"type": ""
													}
												],
												"src": "12980:320:16"
											},
											{
												"body": {
													"nativeSrc": "13412:74:16",
													"nodeType": "YulBlock",
													"src": "13412:74:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13434:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13434:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13442:1:16",
																				"nodeType": "YulLiteral",
																				"src": "13442:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13430:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13430:3:16"
																		},
																		"nativeSrc": "13430:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13430:14:16"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e647320696e207472656173757279",
																		"kind": "string",
																		"nativeSrc": "13446:32:16",
																		"nodeType": "YulLiteral",
																		"src": "13446:32:16",
																		"type": "",
																		"value": "Insufficient funds in treasury"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13423:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13423:6:16"
																},
																"nativeSrc": "13423:56:16",
																"nodeType": "YulFunctionCall",
																"src": "13423:56:16"
															},
															"nativeSrc": "13423:56:16",
															"nodeType": "YulExpressionStatement",
															"src": "13423:56:16"
														}
													]
												},
												"name": "store_literal_in_memory_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab",
												"nativeSrc": "13306:180:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13404:6:16",
														"nodeType": "YulTypedName",
														"src": "13404:6:16",
														"type": ""
													}
												],
												"src": "13306:180:16"
											},
											{
												"body": {
													"nativeSrc": "13638:220:16",
													"nodeType": "YulBlock",
													"src": "13638:220:16",
													"statements": [
														{
															"nativeSrc": "13648:74:16",
															"nodeType": "YulAssignment",
															"src": "13648:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13714:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13714:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13719:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13719:2:16",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13655:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "13655:58:16"
																},
																"nativeSrc": "13655:67:16",
																"nodeType": "YulFunctionCall",
																"src": "13655:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13648:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13648:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13820:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13820:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab",
																	"nativeSrc": "13731:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "13731:88:16"
																},
																"nativeSrc": "13731:93:16",
																"nodeType": "YulFunctionCall",
																"src": "13731:93:16"
															},
															"nativeSrc": "13731:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "13731:93:16"
														},
														{
															"nativeSrc": "13833:19:16",
															"nodeType": "YulAssignment",
															"src": "13833:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13844:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13844:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13849:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13849:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13840:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13840:3:16"
																},
																"nativeSrc": "13840:12:16",
																"nodeType": "YulFunctionCall",
																"src": "13840:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13833:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13833:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13492:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13626:3:16",
														"nodeType": "YulTypedName",
														"src": "13626:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13634:3:16",
														"nodeType": "YulTypedName",
														"src": "13634:3:16",
														"type": ""
													}
												],
												"src": "13492:366:16"
											},
											{
												"body": {
													"nativeSrc": "14035:248:16",
													"nodeType": "YulBlock",
													"src": "14035:248:16",
													"statements": [
														{
															"nativeSrc": "14045:26:16",
															"nodeType": "YulAssignment",
															"src": "14045:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14057:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "14057:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14068:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14068:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14053:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14053:3:16"
																},
																"nativeSrc": "14053:18:16",
																"nodeType": "YulFunctionCall",
																"src": "14053:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14045:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14045:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14092:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14092:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14103:1:16",
																				"nodeType": "YulLiteral",
																				"src": "14103:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14088:3:16"
																		},
																		"nativeSrc": "14088:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14088:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14111:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "14111:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14117:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14117:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14107:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14107:3:16"
																		},
																		"nativeSrc": "14107:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14107:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14081:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14081:6:16"
																},
																"nativeSrc": "14081:47:16",
																"nodeType": "YulFunctionCall",
																"src": "14081:47:16"
															},
															"nativeSrc": "14081:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "14081:47:16"
														},
														{
															"nativeSrc": "14137:139:16",
															"nodeType": "YulAssignment",
															"src": "14137:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14271:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "14271:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14145:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "14145:124:16"
																},
																"nativeSrc": "14145:131:16",
																"nodeType": "YulFunctionCall",
																"src": "14145:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14137:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14137:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13864:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14015:9:16",
														"nodeType": "YulTypedName",
														"src": "14015:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14030:4:16",
														"nodeType": "YulTypedName",
														"src": "14030:4:16",
														"type": ""
													}
												],
												"src": "13864:419:16"
											},
											{
												"body": {
													"nativeSrc": "14435:277:16",
													"nodeType": "YulBlock",
													"src": "14435:277:16",
													"statements": [
														{
															"nativeSrc": "14445:26:16",
															"nodeType": "YulAssignment",
															"src": "14445:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14457:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "14457:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14468:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14468:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14453:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14453:3:16"
																},
																"nativeSrc": "14453:18:16",
																"nodeType": "YulFunctionCall",
																"src": "14453:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14445:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14445:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14525:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14525:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14538:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14538:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14549:1:16",
																				"nodeType": "YulLiteral",
																				"src": "14549:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14534:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14534:3:16"
																		},
																		"nativeSrc": "14534:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14534:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14481:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "14481:43:16"
																},
																"nativeSrc": "14481:71:16",
																"nodeType": "YulFunctionCall",
																"src": "14481:71:16"
															},
															"nativeSrc": "14481:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "14481:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14573:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14573:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14584:2:16",
																				"nodeType": "YulLiteral",
																				"src": "14584:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14569:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14569:3:16"
																		},
																		"nativeSrc": "14569:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14569:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14593:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "14593:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14599:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14599:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14589:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14589:3:16"
																		},
																		"nativeSrc": "14589:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14589:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14562:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14562:6:16"
																},
																"nativeSrc": "14562:48:16",
																"nodeType": "YulFunctionCall",
																"src": "14562:48:16"
															},
															"nativeSrc": "14562:48:16",
															"nodeType": "YulExpressionStatement",
															"src": "14562:48:16"
														},
														{
															"nativeSrc": "14619:86:16",
															"nodeType": "YulAssignment",
															"src": "14619:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14691:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14691:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14700:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "14700:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14627:63:16",
																	"nodeType": "YulIdentifier",
																	"src": "14627:63:16"
																},
																"nativeSrc": "14627:78:16",
																"nodeType": "YulFunctionCall",
																"src": "14627:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14619:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14619:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14289:423:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14399:9:16",
														"nodeType": "YulTypedName",
														"src": "14399:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14411:6:16",
														"nodeType": "YulTypedName",
														"src": "14411:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14419:6:16",
														"nodeType": "YulTypedName",
														"src": "14419:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14430:4:16",
														"nodeType": "YulTypedName",
														"src": "14430:4:16",
														"type": ""
													}
												],
												"src": "14289:423:16"
											},
											{
												"body": {
													"nativeSrc": "14872:288:16",
													"nodeType": "YulBlock",
													"src": "14872:288:16",
													"statements": [
														{
															"nativeSrc": "14882:26:16",
															"nodeType": "YulAssignment",
															"src": "14882:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14894:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "14894:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14905:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14905:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14890:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14890:3:16"
																},
																"nativeSrc": "14890:18:16",
																"nodeType": "YulFunctionCall",
																"src": "14890:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14882:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14882:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14962:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14962:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14975:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14975:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14986:1:16",
																				"nodeType": "YulLiteral",
																				"src": "14986:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14971:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14971:3:16"
																		},
																		"nativeSrc": "14971:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14971:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14918:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "14918:43:16"
																},
																"nativeSrc": "14918:71:16",
																"nodeType": "YulFunctionCall",
																"src": "14918:71:16"
															},
															"nativeSrc": "14918:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "14918:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15043:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15043:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15056:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15056:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15067:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15067:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15052:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15052:3:16"
																		},
																		"nativeSrc": "15052:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15052:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14999:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "14999:43:16"
																},
																"nativeSrc": "14999:72:16",
																"nodeType": "YulFunctionCall",
																"src": "14999:72:16"
															},
															"nativeSrc": "14999:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "14999:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15125:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15125:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15138:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15138:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15149:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15149:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15134:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15134:3:16"
																		},
																		"nativeSrc": "15134:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15134:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15081:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "15081:43:16"
																},
																"nativeSrc": "15081:72:16",
																"nodeType": "YulFunctionCall",
																"src": "15081:72:16"
															},
															"nativeSrc": "15081:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "15081:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "14718:442:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14828:9:16",
														"nodeType": "YulTypedName",
														"src": "14828:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14840:6:16",
														"nodeType": "YulTypedName",
														"src": "14840:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14848:6:16",
														"nodeType": "YulTypedName",
														"src": "14848:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14856:6:16",
														"nodeType": "YulTypedName",
														"src": "14856:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14867:4:16",
														"nodeType": "YulTypedName",
														"src": "14867:4:16",
														"type": ""
													}
												],
												"src": "14718:442:16"
											},
											{
												"body": {
													"nativeSrc": "15272:70:16",
													"nodeType": "YulBlock",
													"src": "15272:70:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15294:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "15294:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15302:1:16",
																				"nodeType": "YulLiteral",
																				"src": "15302:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15290:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15290:3:16"
																		},
																		"nativeSrc": "15290:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15290:14:16"
																	},
																	{
																		"hexValue": "4e4654206e6f74206f776e656420627920746865206775696c64",
																		"kind": "string",
																		"nativeSrc": "15306:28:16",
																		"nodeType": "YulLiteral",
																		"src": "15306:28:16",
																		"type": "",
																		"value": "NFT not owned by the guild"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15283:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15283:6:16"
																},
																"nativeSrc": "15283:52:16",
																"nodeType": "YulFunctionCall",
																"src": "15283:52:16"
															},
															"nativeSrc": "15283:52:16",
															"nodeType": "YulExpressionStatement",
															"src": "15283:52:16"
														}
													]
												},
												"name": "store_literal_in_memory_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8",
												"nativeSrc": "15166:176:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15264:6:16",
														"nodeType": "YulTypedName",
														"src": "15264:6:16",
														"type": ""
													}
												],
												"src": "15166:176:16"
											},
											{
												"body": {
													"nativeSrc": "15494:220:16",
													"nodeType": "YulBlock",
													"src": "15494:220:16",
													"statements": [
														{
															"nativeSrc": "15504:74:16",
															"nodeType": "YulAssignment",
															"src": "15504:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15570:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15570:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15575:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15575:2:16",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15511:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "15511:58:16"
																},
																"nativeSrc": "15511:67:16",
																"nodeType": "YulFunctionCall",
																"src": "15511:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15504:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15504:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15676:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15676:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8",
																	"nativeSrc": "15587:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "15587:88:16"
																},
																"nativeSrc": "15587:93:16",
																"nodeType": "YulFunctionCall",
																"src": "15587:93:16"
															},
															"nativeSrc": "15587:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "15587:93:16"
														},
														{
															"nativeSrc": "15689:19:16",
															"nodeType": "YulAssignment",
															"src": "15689:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15700:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15700:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15705:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15705:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15696:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15696:3:16"
																},
																"nativeSrc": "15696:12:16",
																"nodeType": "YulFunctionCall",
																"src": "15696:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15689:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15689:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15348:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15482:3:16",
														"nodeType": "YulTypedName",
														"src": "15482:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15490:3:16",
														"nodeType": "YulTypedName",
														"src": "15490:3:16",
														"type": ""
													}
												],
												"src": "15348:366:16"
											},
											{
												"body": {
													"nativeSrc": "15891:248:16",
													"nodeType": "YulBlock",
													"src": "15891:248:16",
													"statements": [
														{
															"nativeSrc": "15901:26:16",
															"nodeType": "YulAssignment",
															"src": "15901:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15913:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "15913:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15924:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15924:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15909:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15909:3:16"
																},
																"nativeSrc": "15909:18:16",
																"nodeType": "YulFunctionCall",
																"src": "15909:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15901:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "15901:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15948:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15948:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15959:1:16",
																				"nodeType": "YulLiteral",
																				"src": "15959:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15944:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15944:3:16"
																		},
																		"nativeSrc": "15944:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15944:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15967:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "15967:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15973:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15973:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15963:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15963:3:16"
																		},
																		"nativeSrc": "15963:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15963:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15937:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15937:6:16"
																},
																"nativeSrc": "15937:47:16",
																"nodeType": "YulFunctionCall",
																"src": "15937:47:16"
															},
															"nativeSrc": "15937:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "15937:47:16"
														},
														{
															"nativeSrc": "15993:139:16",
															"nodeType": "YulAssignment",
															"src": "15993:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16127:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "16127:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16001:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "16001:124:16"
																},
																"nativeSrc": "16001:131:16",
																"nodeType": "YulFunctionCall",
																"src": "16001:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15993:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "15993:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15720:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15871:9:16",
														"nodeType": "YulTypedName",
														"src": "15871:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15886:4:16",
														"nodeType": "YulTypedName",
														"src": "15886:4:16",
														"type": ""
													}
												],
												"src": "15720:419:16"
											},
											{
												"body": {
													"nativeSrc": "16271:206:16",
													"nodeType": "YulBlock",
													"src": "16271:206:16",
													"statements": [
														{
															"nativeSrc": "16281:26:16",
															"nodeType": "YulAssignment",
															"src": "16281:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16293:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "16293:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16304:2:16",
																		"nodeType": "YulLiteral",
																		"src": "16304:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16289:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16289:3:16"
																},
																"nativeSrc": "16289:18:16",
																"nodeType": "YulFunctionCall",
																"src": "16289:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16281:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "16281:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16361:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16361:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16374:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16374:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16385:1:16",
																				"nodeType": "YulLiteral",
																				"src": "16385:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16370:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16370:3:16"
																		},
																		"nativeSrc": "16370:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16370:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16317:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "16317:43:16"
																},
																"nativeSrc": "16317:71:16",
																"nodeType": "YulFunctionCall",
																"src": "16317:71:16"
															},
															"nativeSrc": "16317:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "16317:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16442:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16442:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16455:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16455:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16466:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16466:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16451:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16451:3:16"
																		},
																		"nativeSrc": "16451:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16451:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16398:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "16398:43:16"
																},
																"nativeSrc": "16398:72:16",
																"nodeType": "YulFunctionCall",
																"src": "16398:72:16"
															},
															"nativeSrc": "16398:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "16398:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "16145:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16235:9:16",
														"nodeType": "YulTypedName",
														"src": "16235:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16247:6:16",
														"nodeType": "YulTypedName",
														"src": "16247:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16255:6:16",
														"nodeType": "YulTypedName",
														"src": "16255:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16266:4:16",
														"nodeType": "YulTypedName",
														"src": "16266:4:16",
														"type": ""
													}
												],
												"src": "16145:332:16"
											},
											{
												"body": {
													"nativeSrc": "16589:123:16",
													"nodeType": "YulBlock",
													"src": "16589:123:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16611:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "16611:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16619:1:16",
																				"nodeType": "YulLiteral",
																				"src": "16619:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16607:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16607:3:16"
																		},
																		"nativeSrc": "16607:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16607:14:16"
																	},
																	{
																		"hexValue": "4f6e6c79206775696c64206d656d626572732063616e20706572666f726d2074",
																		"kind": "string",
																		"nativeSrc": "16623:34:16",
																		"nodeType": "YulLiteral",
																		"src": "16623:34:16",
																		"type": "",
																		"value": "Only guild members can perform t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16600:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16600:6:16"
																},
																"nativeSrc": "16600:58:16",
																"nodeType": "YulFunctionCall",
																"src": "16600:58:16"
															},
															"nativeSrc": "16600:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "16600:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16679:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "16679:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16687:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16687:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16675:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16675:3:16"
																		},
																		"nativeSrc": "16675:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16675:15:16"
																	},
																	{
																		"hexValue": "68697320616374696f6e",
																		"kind": "string",
																		"nativeSrc": "16692:12:16",
																		"nodeType": "YulLiteral",
																		"src": "16692:12:16",
																		"type": "",
																		"value": "his action"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16668:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16668:6:16"
																},
																"nativeSrc": "16668:37:16",
																"nodeType": "YulFunctionCall",
																"src": "16668:37:16"
															},
															"nativeSrc": "16668:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "16668:37:16"
														}
													]
												},
												"name": "store_literal_in_memory_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711",
												"nativeSrc": "16483:229:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16581:6:16",
														"nodeType": "YulTypedName",
														"src": "16581:6:16",
														"type": ""
													}
												],
												"src": "16483:229:16"
											},
											{
												"body": {
													"nativeSrc": "16864:220:16",
													"nodeType": "YulBlock",
													"src": "16864:220:16",
													"statements": [
														{
															"nativeSrc": "16874:74:16",
															"nodeType": "YulAssignment",
															"src": "16874:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16940:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16940:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16945:2:16",
																		"nodeType": "YulLiteral",
																		"src": "16945:2:16",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16881:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "16881:58:16"
																},
																"nativeSrc": "16881:67:16",
																"nodeType": "YulFunctionCall",
																"src": "16881:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16874:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16874:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17046:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17046:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711",
																	"nativeSrc": "16957:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "16957:88:16"
																},
																"nativeSrc": "16957:93:16",
																"nodeType": "YulFunctionCall",
																"src": "16957:93:16"
															},
															"nativeSrc": "16957:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "16957:93:16"
														},
														{
															"nativeSrc": "17059:19:16",
															"nodeType": "YulAssignment",
															"src": "17059:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17070:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17070:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17075:2:16",
																		"nodeType": "YulLiteral",
																		"src": "17075:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17066:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17066:3:16"
																},
																"nativeSrc": "17066:12:16",
																"nodeType": "YulFunctionCall",
																"src": "17066:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17059:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17059:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16718:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16852:3:16",
														"nodeType": "YulTypedName",
														"src": "16852:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16860:3:16",
														"nodeType": "YulTypedName",
														"src": "16860:3:16",
														"type": ""
													}
												],
												"src": "16718:366:16"
											},
											{
												"body": {
													"nativeSrc": "17261:248:16",
													"nodeType": "YulBlock",
													"src": "17261:248:16",
													"statements": [
														{
															"nativeSrc": "17271:26:16",
															"nodeType": "YulAssignment",
															"src": "17271:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17283:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "17283:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17294:2:16",
																		"nodeType": "YulLiteral",
																		"src": "17294:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17279:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17279:3:16"
																},
																"nativeSrc": "17279:18:16",
																"nodeType": "YulFunctionCall",
																"src": "17279:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17271:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "17271:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17318:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "17318:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17329:1:16",
																				"nodeType": "YulLiteral",
																				"src": "17329:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17314:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17314:3:16"
																		},
																		"nativeSrc": "17314:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17314:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17337:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "17337:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17343:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "17343:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17333:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17333:3:16"
																		},
																		"nativeSrc": "17333:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17333:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17307:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17307:6:16"
																},
																"nativeSrc": "17307:47:16",
																"nodeType": "YulFunctionCall",
																"src": "17307:47:16"
															},
															"nativeSrc": "17307:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "17307:47:16"
														},
														{
															"nativeSrc": "17363:139:16",
															"nodeType": "YulAssignment",
															"src": "17363:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17497:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17497:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17371:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "17371:124:16"
																},
																"nativeSrc": "17371:131:16",
																"nodeType": "YulFunctionCall",
																"src": "17371:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17363:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "17363:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17090:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17241:9:16",
														"nodeType": "YulTypedName",
														"src": "17241:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17256:4:16",
														"nodeType": "YulTypedName",
														"src": "17256:4:16",
														"type": ""
													}
												],
												"src": "17090:419:16"
											},
											{
												"body": {
													"nativeSrc": "17543:152:16",
													"nodeType": "YulBlock",
													"src": "17543:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17560:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17560:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17563:77:16",
																		"nodeType": "YulLiteral",
																		"src": "17563:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17553:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17553:6:16"
																},
																"nativeSrc": "17553:88:16",
																"nodeType": "YulFunctionCall",
																"src": "17553:88:16"
															},
															"nativeSrc": "17553:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "17553:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17657:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17657:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17660:4:16",
																		"nodeType": "YulLiteral",
																		"src": "17660:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17650:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17650:6:16"
																},
																"nativeSrc": "17650:15:16",
																"nodeType": "YulFunctionCall",
																"src": "17650:15:16"
															},
															"nativeSrc": "17650:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "17650:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17681:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17681:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17684:4:16",
																		"nodeType": "YulLiteral",
																		"src": "17684:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17674:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17674:6:16"
																},
																"nativeSrc": "17674:15:16",
																"nodeType": "YulFunctionCall",
																"src": "17674:15:16"
															},
															"nativeSrc": "17674:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "17674:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17515:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "17515:180:16"
											},
											{
												"body": {
													"nativeSrc": "17749:362:16",
													"nodeType": "YulBlock",
													"src": "17749:362:16",
													"statements": [
														{
															"nativeSrc": "17759:25:16",
															"nodeType": "YulAssignment",
															"src": "17759:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17782:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "17782:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17764:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "17764:17:16"
																},
																"nativeSrc": "17764:20:16",
																"nodeType": "YulFunctionCall",
																"src": "17764:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17759:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "17759:1:16"
																}
															]
														},
														{
															"nativeSrc": "17793:25:16",
															"nodeType": "YulAssignment",
															"src": "17793:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17816:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "17816:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17798:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "17798:17:16"
																},
																"nativeSrc": "17798:20:16",
																"nodeType": "YulFunctionCall",
																"src": "17798:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17793:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "17793:1:16"
																}
															]
														},
														{
															"nativeSrc": "17827:28:16",
															"nodeType": "YulVariableDeclaration",
															"src": "17827:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17850:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "17850:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17853:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "17853:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17846:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17846:3:16"
																},
																"nativeSrc": "17846:9:16",
																"nodeType": "YulFunctionCall",
																"src": "17846:9:16"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "17831:11:16",
																	"nodeType": "YulTypedName",
																	"src": "17831:11:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17864:41:16",
															"nodeType": "YulAssignment",
															"src": "17864:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "17893:11:16",
																		"nodeType": "YulIdentifier",
																		"src": "17893:11:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17875:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "17875:17:16"
																},
																"nativeSrc": "17875:30:16",
																"nodeType": "YulFunctionCall",
																"src": "17875:30:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "17864:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "17864:7:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18082:22:16",
																"nodeType": "YulBlock",
																"src": "18082:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18084:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "18084:16:16"
																			},
																			"nativeSrc": "18084:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18084:18:16"
																		},
																		"nativeSrc": "18084:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "18084:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "18015:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "18015:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "18008:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "18008:6:16"
																				},
																				"nativeSrc": "18008:9:16",
																				"nodeType": "YulFunctionCall",
																				"src": "18008:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "18038:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "18038:1:16"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "18045:7:16",
																								"nodeType": "YulIdentifier",
																								"src": "18045:7:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "18054:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "18054:1:16"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "18041:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "18041:3:16"
																						},
																						"nativeSrc": "18041:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "18041:15:16"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "18035:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "18035:2:16"
																				},
																				"nativeSrc": "18035:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "18035:22:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17988:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "17988:2:16"
																		},
																		"nativeSrc": "17988:83:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17988:83:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17968:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17968:6:16"
																},
																"nativeSrc": "17968:113:16",
																"nodeType": "YulFunctionCall",
																"src": "17968:113:16"
															},
															"nativeSrc": "17965:139:16",
															"nodeType": "YulIf",
															"src": "17965:139:16"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "17701:410:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17732:1:16",
														"nodeType": "YulTypedName",
														"src": "17732:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17735:1:16",
														"nodeType": "YulTypedName",
														"src": "17735:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "17741:7:16",
														"nodeType": "YulTypedName",
														"src": "17741:7:16",
														"type": ""
													}
												],
												"src": "17701:410:16"
											},
											{
												"body": {
													"nativeSrc": "18145:152:16",
													"nodeType": "YulBlock",
													"src": "18145:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18162:1:16",
																		"nodeType": "YulLiteral",
																		"src": "18162:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18165:77:16",
																		"nodeType": "YulLiteral",
																		"src": "18165:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18155:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "18155:6:16"
																},
																"nativeSrc": "18155:88:16",
																"nodeType": "YulFunctionCall",
																"src": "18155:88:16"
															},
															"nativeSrc": "18155:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "18155:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18259:1:16",
																		"nodeType": "YulLiteral",
																		"src": "18259:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18262:4:16",
																		"nodeType": "YulLiteral",
																		"src": "18262:4:16",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18252:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "18252:6:16"
																},
																"nativeSrc": "18252:15:16",
																"nodeType": "YulFunctionCall",
																"src": "18252:15:16"
															},
															"nativeSrc": "18252:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "18252:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18283:1:16",
																		"nodeType": "YulLiteral",
																		"src": "18283:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18286:4:16",
																		"nodeType": "YulLiteral",
																		"src": "18286:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18276:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "18276:6:16"
																},
																"nativeSrc": "18276:15:16",
																"nodeType": "YulFunctionCall",
																"src": "18276:15:16"
															},
															"nativeSrc": "18276:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "18276:15:16"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "18117:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "18117:180:16"
											},
											{
												"body": {
													"nativeSrc": "18345:143:16",
													"nodeType": "YulBlock",
													"src": "18345:143:16",
													"statements": [
														{
															"nativeSrc": "18355:25:16",
															"nodeType": "YulAssignment",
															"src": "18355:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18378:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "18378:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18360:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "18360:17:16"
																},
																"nativeSrc": "18360:20:16",
																"nodeType": "YulFunctionCall",
																"src": "18360:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18355:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "18355:1:16"
																}
															]
														},
														{
															"nativeSrc": "18389:25:16",
															"nodeType": "YulAssignment",
															"src": "18389:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18412:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "18412:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18394:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "18394:17:16"
																},
																"nativeSrc": "18394:20:16",
																"nodeType": "YulFunctionCall",
																"src": "18394:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18389:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "18389:1:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18436:22:16",
																"nodeType": "YulBlock",
																"src": "18436:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "18438:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "18438:16:16"
																			},
																			"nativeSrc": "18438:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18438:18:16"
																		},
																		"nativeSrc": "18438:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "18438:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18433:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "18433:1:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18426:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "18426:6:16"
																},
																"nativeSrc": "18426:9:16",
																"nodeType": "YulFunctionCall",
																"src": "18426:9:16"
															},
															"nativeSrc": "18423:35:16",
															"nodeType": "YulIf",
															"src": "18423:35:16"
														},
														{
															"nativeSrc": "18468:14:16",
															"nodeType": "YulAssignment",
															"src": "18468:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18477:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "18477:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18480:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "18480:1:16"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18473:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18473:3:16"
																},
																"nativeSrc": "18473:9:16",
																"nodeType": "YulFunctionCall",
																"src": "18473:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "18468:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "18468:1:16"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "18303:185:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18334:1:16",
														"nodeType": "YulTypedName",
														"src": "18334:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18337:1:16",
														"nodeType": "YulTypedName",
														"src": "18337:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "18343:1:16",
														"nodeType": "YulTypedName",
														"src": "18343:1:16",
														"type": ""
													}
												],
												"src": "18303:185:16"
											},
											{
												"body": {
													"nativeSrc": "18608:34:16",
													"nodeType": "YulBlock",
													"src": "18608:34:16",
													"statements": [
														{
															"nativeSrc": "18618:18:16",
															"nodeType": "YulAssignment",
															"src": "18618:18:16",
															"value": {
																"name": "pos",
																"nativeSrc": "18633:3:16",
																"nodeType": "YulIdentifier",
																"src": "18633:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18618:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "18618:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18494:148:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18580:3:16",
														"nodeType": "YulTypedName",
														"src": "18580:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18585:6:16",
														"nodeType": "YulTypedName",
														"src": "18585:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18596:11:16",
														"nodeType": "YulTypedName",
														"src": "18596:11:16",
														"type": ""
													}
												],
												"src": "18494:148:16"
											},
											{
												"body": {
													"nativeSrc": "18758:280:16",
													"nodeType": "YulBlock",
													"src": "18758:280:16",
													"statements": [
														{
															"nativeSrc": "18768:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18768:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18815:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "18815:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "18782:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "18782:32:16"
																},
																"nativeSrc": "18782:39:16",
																"nodeType": "YulFunctionCall",
																"src": "18782:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18772:6:16",
																	"nodeType": "YulTypedName",
																	"src": "18772:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18830:96:16",
															"nodeType": "YulAssignment",
															"src": "18830:96:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18914:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18914:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18919:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18919:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18837:76:16",
																	"nodeType": "YulIdentifier",
																	"src": "18837:76:16"
																},
																"nativeSrc": "18837:89:16",
																"nodeType": "YulFunctionCall",
																"src": "18837:89:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18830:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18830:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18974:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "18974:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18981:4:16",
																				"nodeType": "YulLiteral",
																				"src": "18981:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18970:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18970:3:16"
																		},
																		"nativeSrc": "18970:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18970:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18988:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18988:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18993:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18993:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18935:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "18935:34:16"
																},
																"nativeSrc": "18935:65:16",
																"nodeType": "YulFunctionCall",
																"src": "18935:65:16"
															},
															"nativeSrc": "18935:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "18935:65:16"
														},
														{
															"nativeSrc": "19009:23:16",
															"nodeType": "YulAssignment",
															"src": "19009:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19020:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19020:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19025:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19025:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19016:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19016:3:16"
																},
																"nativeSrc": "19016:16:16",
																"nodeType": "YulFunctionCall",
																"src": "19016:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19009:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19009:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18648:390:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18739:5:16",
														"nodeType": "YulTypedName",
														"src": "18739:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18746:3:16",
														"nodeType": "YulTypedName",
														"src": "18746:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18754:3:16",
														"nodeType": "YulTypedName",
														"src": "18754:3:16",
														"type": ""
													}
												],
												"src": "18648:390:16"
											},
											{
												"body": {
													"nativeSrc": "19228:251:16",
													"nodeType": "YulBlock",
													"src": "19228:251:16",
													"statements": [
														{
															"nativeSrc": "19239:102:16",
															"nodeType": "YulAssignment",
															"src": "19239:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19328:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19328:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19337:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19337:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19246:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "19246:81:16"
																},
																"nativeSrc": "19246:95:16",
																"nodeType": "YulFunctionCall",
																"src": "19246:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19239:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19239:3:16"
																}
															]
														},
														{
															"nativeSrc": "19351:102:16",
															"nodeType": "YulAssignment",
															"src": "19351:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19440:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19440:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19449:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19449:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19358:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "19358:81:16"
																},
																"nativeSrc": "19358:95:16",
																"nodeType": "YulFunctionCall",
																"src": "19358:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19351:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19351:3:16"
																}
															]
														},
														{
															"nativeSrc": "19463:10:16",
															"nodeType": "YulAssignment",
															"src": "19463:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "19470:3:16",
																"nodeType": "YulIdentifier",
																"src": "19470:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19463:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19463:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19044:435:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19199:3:16",
														"nodeType": "YulTypedName",
														"src": "19199:3:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19205:6:16",
														"nodeType": "YulTypedName",
														"src": "19205:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19213:6:16",
														"nodeType": "YulTypedName",
														"src": "19213:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19224:3:16",
														"nodeType": "YulTypedName",
														"src": "19224:3:16",
														"type": ""
													}
												],
												"src": "19044:435:16"
											},
											{
												"body": {
													"nativeSrc": "19517:28:16",
													"nodeType": "YulBlock",
													"src": "19517:28:16",
													"statements": [
														{
															"nativeSrc": "19527:12:16",
															"nodeType": "YulAssignment",
															"src": "19527:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "19534:5:16",
																"nodeType": "YulIdentifier",
																"src": "19534:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19527:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19527:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "19485:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19503:5:16",
														"nodeType": "YulTypedName",
														"src": "19503:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19513:3:16",
														"nodeType": "YulTypedName",
														"src": "19513:3:16",
														"type": ""
													}
												],
												"src": "19485:60:16"
											},
											{
												"body": {
													"nativeSrc": "19611:82:16",
													"nodeType": "YulBlock",
													"src": "19611:82:16",
													"statements": [
														{
															"nativeSrc": "19621:66:16",
															"nodeType": "YulAssignment",
															"src": "19621:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19679:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "19679:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "19661:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "19661:17:16"
																				},
																				"nativeSrc": "19661:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "19661:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "19652:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "19652:8:16"
																		},
																		"nativeSrc": "19652:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19652:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "19634:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "19634:17:16"
																},
																"nativeSrc": "19634:53:16",
																"nodeType": "YulFunctionCall",
																"src": "19634:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "19621:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "19621:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "19551:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19591:5:16",
														"nodeType": "YulTypedName",
														"src": "19591:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "19601:9:16",
														"nodeType": "YulTypedName",
														"src": "19601:9:16",
														"type": ""
													}
												],
												"src": "19551:142:16"
											},
											{
												"body": {
													"nativeSrc": "19759:66:16",
													"nodeType": "YulBlock",
													"src": "19759:66:16",
													"statements": [
														{
															"nativeSrc": "19769:50:16",
															"nodeType": "YulAssignment",
															"src": "19769:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19813:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "19813:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "19782:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "19782:30:16"
																},
																"nativeSrc": "19782:37:16",
																"nodeType": "YulFunctionCall",
																"src": "19782:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "19769:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "19769:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "19699:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19739:5:16",
														"nodeType": "YulTypedName",
														"src": "19739:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "19749:9:16",
														"nodeType": "YulTypedName",
														"src": "19749:9:16",
														"type": ""
													}
												],
												"src": "19699:126:16"
											},
											{
												"body": {
													"nativeSrc": "19899:66:16",
													"nodeType": "YulBlock",
													"src": "19899:66:16",
													"statements": [
														{
															"nativeSrc": "19909:50:16",
															"nodeType": "YulAssignment",
															"src": "19909:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19953:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "19953:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "19922:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "19922:30:16"
																},
																"nativeSrc": "19922:37:16",
																"nodeType": "YulFunctionCall",
																"src": "19922:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "19909:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "19909:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nativeSrc": "19831:134:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19879:5:16",
														"nodeType": "YulTypedName",
														"src": "19879:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "19889:9:16",
														"nodeType": "YulTypedName",
														"src": "19889:9:16",
														"type": ""
													}
												],
												"src": "19831:134:16"
											},
											{
												"body": {
													"nativeSrc": "20044:74:16",
													"nodeType": "YulBlock",
													"src": "20044:74:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20061:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20061:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20105:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "20105:5:16"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nativeSrc": "20066:38:16",
																			"nodeType": "YulIdentifier",
																			"src": "20066:38:16"
																		},
																		"nativeSrc": "20066:45:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20066:45:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20054:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20054:6:16"
																},
																"nativeSrc": "20054:58:16",
																"nodeType": "YulFunctionCall",
																"src": "20054:58:16"
															},
															"nativeSrc": "20054:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "20054:58:16"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nativeSrc": "19971:147:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20032:5:16",
														"nodeType": "YulTypedName",
														"src": "20032:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20039:3:16",
														"nodeType": "YulTypedName",
														"src": "20039:3:16",
														"type": ""
													}
												],
												"src": "19971:147:16"
											},
											{
												"body": {
													"nativeSrc": "20258:214:16",
													"nodeType": "YulBlock",
													"src": "20258:214:16",
													"statements": [
														{
															"nativeSrc": "20268:26:16",
															"nodeType": "YulAssignment",
															"src": "20268:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20280:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "20280:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20291:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20291:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20276:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20276:3:16"
																},
																"nativeSrc": "20276:18:16",
																"nodeType": "YulFunctionCall",
																"src": "20276:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20268:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20268:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20348:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20348:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20361:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20361:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20372:1:16",
																				"nodeType": "YulLiteral",
																				"src": "20372:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20357:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20357:3:16"
																		},
																		"nativeSrc": "20357:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20357:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20304:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "20304:43:16"
																},
																"nativeSrc": "20304:71:16",
																"nodeType": "YulFunctionCall",
																"src": "20304:71:16"
															},
															"nativeSrc": "20304:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "20304:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20437:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20437:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20450:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20450:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20461:2:16",
																				"nodeType": "YulLiteral",
																				"src": "20461:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20446:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20446:3:16"
																		},
																		"nativeSrc": "20446:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20446:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "20385:51:16",
																	"nodeType": "YulIdentifier",
																	"src": "20385:51:16"
																},
																"nativeSrc": "20385:80:16",
																"nodeType": "YulFunctionCall",
																"src": "20385:80:16"
															},
															"nativeSrc": "20385:80:16",
															"nodeType": "YulExpressionStatement",
															"src": "20385:80:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "20124:348:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20222:9:16",
														"nodeType": "YulTypedName",
														"src": "20222:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20234:6:16",
														"nodeType": "YulTypedName",
														"src": "20234:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20242:6:16",
														"nodeType": "YulTypedName",
														"src": "20242:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20253:4:16",
														"nodeType": "YulTypedName",
														"src": "20253:4:16",
														"type": ""
													}
												],
												"src": "20124:348:16"
											},
											{
												"body": {
													"nativeSrc": "20536:40:16",
													"nodeType": "YulBlock",
													"src": "20536:40:16",
													"statements": [
														{
															"nativeSrc": "20547:22:16",
															"nodeType": "YulAssignment",
															"src": "20547:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20563:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "20563:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20557:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "20557:5:16"
																},
																"nativeSrc": "20557:12:16",
																"nodeType": "YulFunctionCall",
																"src": "20557:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20547:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20547:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "20478:98:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20519:5:16",
														"nodeType": "YulTypedName",
														"src": "20519:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "20529:6:16",
														"nodeType": "YulTypedName",
														"src": "20529:6:16",
														"type": ""
													}
												],
												"src": "20478:98:16"
											},
											{
												"body": {
													"nativeSrc": "20677:73:16",
													"nodeType": "YulBlock",
													"src": "20677:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20694:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20694:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20699:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20699:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20687:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20687:6:16"
																},
																"nativeSrc": "20687:19:16",
																"nodeType": "YulFunctionCall",
																"src": "20687:19:16"
															},
															"nativeSrc": "20687:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "20687:19:16"
														},
														{
															"nativeSrc": "20715:29:16",
															"nodeType": "YulAssignment",
															"src": "20715:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20734:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20734:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20739:4:16",
																		"nodeType": "YulLiteral",
																		"src": "20739:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20730:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20730:3:16"
																},
																"nativeSrc": "20730:14:16",
																"nodeType": "YulFunctionCall",
																"src": "20730:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20715:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "20715:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20582:168:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20649:3:16",
														"nodeType": "YulTypedName",
														"src": "20649:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20654:6:16",
														"nodeType": "YulTypedName",
														"src": "20654:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20665:11:16",
														"nodeType": "YulTypedName",
														"src": "20665:11:16",
														"type": ""
													}
												],
												"src": "20582:168:16"
											},
											{
												"body": {
													"nativeSrc": "20846:283:16",
													"nodeType": "YulBlock",
													"src": "20846:283:16",
													"statements": [
														{
															"nativeSrc": "20856:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "20856:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20902:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "20902:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "20870:31:16",
																	"nodeType": "YulIdentifier",
																	"src": "20870:31:16"
																},
																"nativeSrc": "20870:38:16",
																"nodeType": "YulFunctionCall",
																"src": "20870:38:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20860:6:16",
																	"nodeType": "YulTypedName",
																	"src": "20860:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20917:77:16",
															"nodeType": "YulAssignment",
															"src": "20917:77:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20982:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20982:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20987:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20987:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20924:57:16",
																	"nodeType": "YulIdentifier",
																	"src": "20924:57:16"
																},
																"nativeSrc": "20924:70:16",
																"nodeType": "YulFunctionCall",
																"src": "20924:70:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20917:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20917:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21042:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "21042:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21049:4:16",
																				"nodeType": "YulLiteral",
																				"src": "21049:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21038:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21038:3:16"
																		},
																		"nativeSrc": "21038:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21038:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21056:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "21056:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21061:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21061:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21003:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "21003:34:16"
																},
																"nativeSrc": "21003:65:16",
																"nodeType": "YulFunctionCall",
																"src": "21003:65:16"
															},
															"nativeSrc": "21003:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "21003:65:16"
														},
														{
															"nativeSrc": "21077:46:16",
															"nodeType": "YulAssignment",
															"src": "21077:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21088:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "21088:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21115:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "21115:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "21093:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "21093:21:16"
																		},
																		"nativeSrc": "21093:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21093:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21084:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21084:3:16"
																},
																"nativeSrc": "21084:39:16",
																"nodeType": "YulFunctionCall",
																"src": "21084:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21077:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21077:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20756:373:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20827:5:16",
														"nodeType": "YulTypedName",
														"src": "20827:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20834:3:16",
														"nodeType": "YulTypedName",
														"src": "20834:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20842:3:16",
														"nodeType": "YulTypedName",
														"src": "20842:3:16",
														"type": ""
													}
												],
												"src": "20756:373:16"
											},
											{
												"body": {
													"nativeSrc": "21335:440:16",
													"nodeType": "YulBlock",
													"src": "21335:440:16",
													"statements": [
														{
															"nativeSrc": "21345:27:16",
															"nodeType": "YulAssignment",
															"src": "21345:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21357:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "21357:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21368:3:16",
																		"nodeType": "YulLiteral",
																		"src": "21368:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21353:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21353:3:16"
																},
																"nativeSrc": "21353:19:16",
																"nodeType": "YulFunctionCall",
																"src": "21353:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21345:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "21345:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21426:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21426:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21439:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21439:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21450:1:16",
																				"nodeType": "YulLiteral",
																				"src": "21450:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21435:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21435:3:16"
																		},
																		"nativeSrc": "21435:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21435:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21382:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "21382:43:16"
																},
																"nativeSrc": "21382:71:16",
																"nodeType": "YulFunctionCall",
																"src": "21382:71:16"
															},
															"nativeSrc": "21382:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "21382:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21507:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21507:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21520:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21520:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21531:2:16",
																				"nodeType": "YulLiteral",
																				"src": "21531:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21516:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21516:3:16"
																		},
																		"nativeSrc": "21516:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21516:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21463:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "21463:43:16"
																},
																"nativeSrc": "21463:72:16",
																"nodeType": "YulFunctionCall",
																"src": "21463:72:16"
															},
															"nativeSrc": "21463:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "21463:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21589:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21589:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21602:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21602:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21613:2:16",
																				"nodeType": "YulLiteral",
																				"src": "21613:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21598:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21598:3:16"
																		},
																		"nativeSrc": "21598:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21598:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21545:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "21545:43:16"
																},
																"nativeSrc": "21545:72:16",
																"nodeType": "YulFunctionCall",
																"src": "21545:72:16"
															},
															"nativeSrc": "21545:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "21545:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21638:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21638:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21649:2:16",
																				"nodeType": "YulLiteral",
																				"src": "21649:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21634:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21634:3:16"
																		},
																		"nativeSrc": "21634:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21634:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21658:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "21658:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21664:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21664:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21654:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21654:3:16"
																		},
																		"nativeSrc": "21654:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21654:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21627:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21627:6:16"
																},
																"nativeSrc": "21627:48:16",
																"nodeType": "YulFunctionCall",
																"src": "21627:48:16"
															},
															"nativeSrc": "21627:48:16",
															"nodeType": "YulExpressionStatement",
															"src": "21627:48:16"
														},
														{
															"nativeSrc": "21684:84:16",
															"nodeType": "YulAssignment",
															"src": "21684:84:16",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21754:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21754:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "21763:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "21763:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "21692:61:16",
																	"nodeType": "YulIdentifier",
																	"src": "21692:61:16"
																},
																"nativeSrc": "21692:76:16",
																"nodeType": "YulFunctionCall",
																"src": "21692:76:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21684:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "21684:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "21135:640:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21283:9:16",
														"nodeType": "YulTypedName",
														"src": "21283:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "21295:6:16",
														"nodeType": "YulTypedName",
														"src": "21295:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21303:6:16",
														"nodeType": "YulTypedName",
														"src": "21303:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21311:6:16",
														"nodeType": "YulTypedName",
														"src": "21311:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21319:6:16",
														"nodeType": "YulTypedName",
														"src": "21319:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21330:4:16",
														"nodeType": "YulTypedName",
														"src": "21330:4:16",
														"type": ""
													}
												],
												"src": "21135:640:16"
											},
											{
												"body": {
													"nativeSrc": "21843:79:16",
													"nodeType": "YulBlock",
													"src": "21843:79:16",
													"statements": [
														{
															"nativeSrc": "21853:22:16",
															"nodeType": "YulAssignment",
															"src": "21853:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21868:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21868:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21862:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "21862:5:16"
																},
																"nativeSrc": "21862:13:16",
																"nodeType": "YulFunctionCall",
																"src": "21862:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21853:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "21853:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21910:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "21910:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "21884:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "21884:25:16"
																},
																"nativeSrc": "21884:32:16",
																"nodeType": "YulFunctionCall",
																"src": "21884:32:16"
															},
															"nativeSrc": "21884:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "21884:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "21781:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21821:6:16",
														"nodeType": "YulTypedName",
														"src": "21821:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21829:3:16",
														"nodeType": "YulTypedName",
														"src": "21829:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21837:5:16",
														"nodeType": "YulTypedName",
														"src": "21837:5:16",
														"type": ""
													}
												],
												"src": "21781:141:16"
											},
											{
												"body": {
													"nativeSrc": "22004:273:16",
													"nodeType": "YulBlock",
													"src": "22004:273:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "22050:83:16",
																"nodeType": "YulBlock",
																"src": "22050:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22052:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "22052:77:16"
																			},
																			"nativeSrc": "22052:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "22052:79:16"
																		},
																		"nativeSrc": "22052:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "22052:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22025:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "22025:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22034:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "22034:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22021:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "22021:3:16"
																		},
																		"nativeSrc": "22021:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22021:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22046:2:16",
																		"nodeType": "YulLiteral",
																		"src": "22046:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "22017:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22017:3:16"
																},
																"nativeSrc": "22017:32:16",
																"nodeType": "YulFunctionCall",
																"src": "22017:32:16"
															},
															"nativeSrc": "22014:119:16",
															"nodeType": "YulIf",
															"src": "22014:119:16"
														},
														{
															"nativeSrc": "22143:127:16",
															"nodeType": "YulBlock",
															"src": "22143:127:16",
															"statements": [
																{
																	"nativeSrc": "22158:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22158:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22172:1:16",
																		"nodeType": "YulLiteral",
																		"src": "22172:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22162:6:16",
																			"nodeType": "YulTypedName",
																			"src": "22162:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22187:73:16",
																	"nodeType": "YulAssignment",
																	"src": "22187:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22232:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "22232:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22243:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "22243:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22228:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "22228:3:16"
																				},
																				"nativeSrc": "22228:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "22228:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22252:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "22252:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "22197:30:16",
																			"nodeType": "YulIdentifier",
																			"src": "22197:30:16"
																		},
																		"nativeSrc": "22197:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22197:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22187:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "22187:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "21928:349:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21974:9:16",
														"nodeType": "YulTypedName",
														"src": "21974:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21985:7:16",
														"nodeType": "YulTypedName",
														"src": "21985:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21997:6:16",
														"nodeType": "YulTypedName",
														"src": "21997:6:16",
														"type": ""
													}
												],
												"src": "21928:349:16"
											},
											{
												"body": {
													"nativeSrc": "22409:206:16",
													"nodeType": "YulBlock",
													"src": "22409:206:16",
													"statements": [
														{
															"nativeSrc": "22419:26:16",
															"nodeType": "YulAssignment",
															"src": "22419:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22431:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "22431:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22442:2:16",
																		"nodeType": "YulLiteral",
																		"src": "22442:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22427:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22427:3:16"
																},
																"nativeSrc": "22427:18:16",
																"nodeType": "YulFunctionCall",
																"src": "22427:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22419:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "22419:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22499:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22499:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22512:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "22512:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22523:1:16",
																				"nodeType": "YulLiteral",
																				"src": "22523:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22508:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "22508:3:16"
																		},
																		"nativeSrc": "22508:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22508:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22455:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "22455:43:16"
																},
																"nativeSrc": "22455:71:16",
																"nodeType": "YulFunctionCall",
																"src": "22455:71:16"
															},
															"nativeSrc": "22455:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "22455:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22580:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22580:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22593:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "22593:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22604:2:16",
																				"nodeType": "YulLiteral",
																				"src": "22604:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22589:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "22589:3:16"
																		},
																		"nativeSrc": "22589:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22589:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22536:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "22536:43:16"
																},
																"nativeSrc": "22536:72:16",
																"nodeType": "YulFunctionCall",
																"src": "22536:72:16"
															},
															"nativeSrc": "22536:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "22536:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22283:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22373:9:16",
														"nodeType": "YulTypedName",
														"src": "22373:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22385:6:16",
														"nodeType": "YulTypedName",
														"src": "22385:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22393:6:16",
														"nodeType": "YulTypedName",
														"src": "22393:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22404:4:16",
														"nodeType": "YulTypedName",
														"src": "22404:4:16",
														"type": ""
													}
												],
												"src": "22283:332:16"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds in treasury\")\n\n    }\n\n    function abi_encode_t_stringliteral_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT not owned by the guild\")\n\n    }\n\n    function abi_encode_t_stringliteral_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only guild members can perform t\")\n\n        mstore(add(memPtr, 32), \"his action\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101e1575f3560e01c80636352211e11610101578063abc8c7af11610094578063e2c7928111610063578063e2c79281146106cd578063e985e9c5146106f7578063ede8592b14610733578063f796c2d91461075d576101e1565b8063abc8c7af14610615578063b88d4fde1461063f578063c713a28914610667578063c87b56dd14610691576101e1565b806395d89b41116100d057806395d89b411461057157806397f7d0d51461059b5780639a969768146105c5578063a22cb465146105ed576101e1565b80636352211e146104a557806368f5cd3b146104e157806370a082311461050b5780637e83057414610547576101e1565b806323b872dd116101795780634c39a749116101485780634c39a749146103ff578063529062fa146104295780635301fa6f146104515780635743ceda1461047b576101e1565b806323b872dd14610349578063313dab201461037157806331c258e81461039b57806342842e0e146103d7576101e1565b8063095ea7b3116101b5578063095ea7b3146102b15780630c29f635146102d95780630d39fc81146102f557806318160ddd1461031f576101e1565b80628bfb00146101e557806301ffc9a71461020f57806306fdde031461024b578063081812fc14610275575b5f80fd5b3480156101f0575f80fd5b506101f9610773565b6040516102069190611f98565b60405180910390f35b34801561021a575f80fd5b506102356004803603810190610230919061201e565b6107ff565b6040516102429190612063565b60405180910390f35b348015610256575f80fd5b5061025f6108e0565b60405161026c9190611f98565b60405180910390f35b348015610280575f80fd5b5061029b600480360381019061029691906120af565b61096f565b6040516102a89190612119565b60405180910390f35b3480156102bc575f80fd5b506102d760048036038101906102d2919061215c565b61098a565b005b6102f360048036038101906102ee91906122c6565b6109a0565b005b348015610300575f80fd5b50610309610a9c565b6040516103169190612341565b60405180910390f35b34801561032a575f80fd5b50610333610aa2565b6040516103409190612341565b60405180910390f35b348015610354575f80fd5b5061036f600480360381019061036a919061235a565b610ab2565b005b34801561037c575f80fd5b50610385610bb1565b6040516103929190612341565b60405180910390f35b3480156103a6575f80fd5b506103c160048036038101906103bc919061215c565b610bb7565b6040516103ce9190612341565b60405180910390f35b3480156103e2575f80fd5b506103fd60048036038101906103f8919061235a565b610be2565b005b34801561040a575f80fd5b50610413610c01565b6040516104209190612119565b60405180910390f35b348015610434575f80fd5b5061044f600480360381019061044a91906120af565b610c26565b005b34801561045c575f80fd5b50610465610d39565b6040516104729190612341565b60405180910390f35b348015610486575f80fd5b5061048f610d3f565b60405161049c9190612341565b60405180910390f35b3480156104b0575f80fd5b506104cb60048036038101906104c691906120af565b610d45565b6040516104d89190612119565b60405180910390f35b3480156104ec575f80fd5b506104f5610d56565b6040516105029190612341565b60405180910390f35b348015610516575f80fd5b50610531600480360381019061052c91906123aa565b610d5c565b60405161053e9190612341565b60405180910390f35b348015610552575f80fd5b5061055b610e12565b6040516105689190612341565b60405180910390f35b34801561057c575f80fd5b50610585610e18565b6040516105929190611f98565b60405180910390f35b3480156105a6575f80fd5b506105af610ea8565b6040516105bc9190612341565b60405180910390f35b3480156105d0575f80fd5b506105eb60048036038101906105e691906120af565b610eae565b005b3480156105f8575f80fd5b50610613600480360381019061060e91906123ff565b610fa4565b005b348015610620575f80fd5b50610629610fba565b604051610636919061245d565b60405180910390f35b34801561064a575f80fd5b5061066560048036038101906106609190612514565b610fdf565b005b348015610672575f80fd5b5061067b610ffc565b6040516106889190612341565b60405180910390f35b34801561069c575f80fd5b506106b760048036038101906106b291906120af565b611002565b6040516106c49190611f98565b60405180910390f35b3480156106d8575f80fd5b506106e1611068565b6040516106ee9190612341565b60405180910390f35b348015610702575f80fd5b5061071d60048036038101906107189190612594565b61106e565b60405161072a9190612063565b60405180910390f35b34801561073e575f80fd5b506107476110fc565b604051610754919061245d565b60405180910390f35b348015610768575f80fd5b50610771611121565b005b600c8054610780906125ff565b80601f01602080910402602001604051908101604052809291908181526020018280546107ac906125ff565b80156107f75780601f106107ce576101008083540402835291602001916107f7565b820191905f5260205f20905b8154815290600101906020018083116107da57829003601f168201915b505050505081565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108c957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806108d957506108d882611208565b5b9050919050565b60605f80546108ee906125ff565b80601f016020809104026020016040519081016040528092919081815260200182805461091a906125ff565b80156109655780601f1061093c57610100808354040283529160200191610965565b820191905f5260205f20905b81548152906001019060200180831161094857829003601f168201915b5050505050905090565b5f61097982611271565b50610983826112f7565b9050919050565b61099c8282610997611330565b611337565b5050565b8060075410156109e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109dc90612679565b60405180910390fd5b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610a49573d5f803e3d5ffd5b50610a543083611349565b610a5e828461143c565b7f29705a31c393a642035ad5f190e6f0b0b3f0ef43ed68c72cf87ae76be0e3185b8284604051610a8f929190612697565b60405180910390a1505050565b600b5481565b5f610aad600661144a565b905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b22575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610b199190612119565b60405180910390fd5b5f610b358383610b30611330565b611456565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bab578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610ba2939291906126c5565b60405180910390fd5b50505050565b60075481565b6008602052815f5260405f208181548110610bd0575f80fd5b905f5260205f20015f91509150505481565b610bfc83838360405180602001604052805f815250610fdf565b505050565b600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3073ffffffffffffffffffffffffffffffffffffffff16610c4682611661565b73ffffffffffffffffffffffffffffffffffffffff1614610c9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9390612744565b60405180910390fd5b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f20015f90919091909150557f50580f9b480d6d5cec851393deb0b48a42783dca51b04cec0e1f104d553f516c8133604051610d2e929190612762565b60405180910390a150565b600f5481565b60125481565b5f610d4f82611271565b9050919050565b60135481565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dcd575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610dc49190612119565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b600d5481565b606060018054610e27906125ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610e53906125ff565b8015610e9e5780601f10610e7557610100808354040283529160200191610e9e565b820191905f5260205f20905b815481529060010190602001808311610e8157829003601f168201915b5050505050905090565b60115481565b5f610eb833610d5c565b11610ef8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eef906127f9565b60405180910390fd5b5f610f01610aa2565b90505f5b81811015610f9f575f610f1782610d45565b90505f610f2382610d5c565b1115610f91575f83610f3483610d5c565b86610f3f9190612844565b610f4991906128b2565b90508173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610f8e573d5f803e3d5ffd5b50505b508080600101915050610f05565b505050565b610fb6610faf611330565b838361169a565b5050565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610fea848484610ab2565b610ff684848484611803565b50505050565b60095481565b606061100d82611271565b505f6110176119b5565b90505f8151116110355760405180602001604052805f815250611060565b8061103f846119cb565b60405160200161105092919061291c565b6040516020818303038152906040525b915050919050565b60105481565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6064601254600f546111339190612844565b61113d91906128b2565b60138190555060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60135490811502906040515f60405180830381858888f193505050501580156111a9573d5f803e3d5ffd5b507f72be57c44bdcdf29e3bded0b32580b641d4c7f1e2d1cd7aba457fe552b351aaf60135460145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516111fe92919061299a565b60405180910390a1565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061127c83611661565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112ee57826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016112e59190612341565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6113448383836001611a95565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113b9575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113b09190612119565b60405180910390fd5b5f6113c583835f611456565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611437575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161142e9190612119565b60405180910390fd5b505050565b611446828261143c565b5050565b5f815f01549050919050565b5f8061146184611661565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146114a2576114a1818486611c54565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461152d576114e15f855f80611a95565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146115ac57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361170a57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016117019190612119565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516117f69190612063565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156119af578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611846611330565b8685856040518563ffffffff1660e01b81526004016118689493929190612a13565b6020604051808303815f875af19250505080156118a357506040513d601f19601f820116820180604052508101906118a09190612a71565b60015b611924573d805f81146118d1576040519150601f19603f3d011682016040523d82523d5f602084013e6118d6565b606091505b505f81510361191c57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119139190612119565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146119ad57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119a49190612119565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f60016119d984611d17565b0190505f8167ffffffffffffffff8111156119f7576119f66121a2565b5b6040519080825280601f01601f191660200182016040528015611a295781602001600182028036833780820191505090505b5090505f82602001820190505b600115611a8a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611a7f57611a7e612885565b5b0494505f8503611a36575b819350505050919050565b8080611acd57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611bff575f611adc84611271565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611b4657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611b595750611b57818461106e565b155b15611b9b57826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611b929190612119565b60405180910390fd5b8115611bfd57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611c5f838383611e68565b611d12575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cd357806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611cca9190612341565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611d09929190612a9c565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611d73577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611d6957611d68612885565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611db0576d04ee2d6d415b85acef81000000008381611da657611da5612885565b5b0492506020810190505b662386f26fc100008310611ddf57662386f26fc100008381611dd557611dd4612885565b5b0492506010810190505b6305f5e1008310611e08576305f5e1008381611dfe57611dfd612885565b5b0492506008810190505b6127108310611e2d576127108381611e2357611e22612885565b5b0492506004810190505b60648310611e505760648381611e4657611e45612885565b5b0492506002810190505b600a8310611e5f576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611f1f57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ee05750611edf848461106e565b5b80611f1e57508273ffffffffffffffffffffffffffffffffffffffff16611f06836112f7565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611f6a82611f28565b611f748185611f32565b9350611f84818560208601611f42565b611f8d81611f50565b840191505092915050565b5f6020820190508181035f830152611fb08184611f60565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ffd81611fc9565b8114612007575f80fd5b50565b5f8135905061201881611ff4565b92915050565b5f6020828403121561203357612032611fc1565b5b5f6120408482850161200a565b91505092915050565b5f8115159050919050565b61205d81612049565b82525050565b5f6020820190506120765f830184612054565b92915050565b5f819050919050565b61208e8161207c565b8114612098575f80fd5b50565b5f813590506120a981612085565b92915050565b5f602082840312156120c4576120c3611fc1565b5b5f6120d18482850161209b565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612103826120da565b9050919050565b612113816120f9565b82525050565b5f60208201905061212c5f83018461210a565b92915050565b61213b816120f9565b8114612145575f80fd5b50565b5f8135905061215681612132565b92915050565b5f806040838503121561217257612171611fc1565b5b5f61217f85828601612148565b92505060206121908582860161209b565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6121d882611f50565b810181811067ffffffffffffffff821117156121f7576121f66121a2565b5b80604052505050565b5f612209611fb8565b905061221582826121cf565b919050565b5f67ffffffffffffffff821115612234576122336121a2565b5b61223d82611f50565b9050602081019050919050565b828183375f83830152505050565b5f61226a6122658461221a565b612200565b9050828152602081018484840111156122865761228561219e565b5b61229184828561224a565b509392505050565b5f82601f8301126122ad576122ac61219a565b5b81356122bd848260208601612258565b91505092915050565b5f805f606084860312156122dd576122dc611fc1565b5b5f84013567ffffffffffffffff8111156122fa576122f9611fc5565b5b61230686828701612299565b93505060206123178682870161209b565b92505060406123288682870161209b565b9150509250925092565b61233b8161207c565b82525050565b5f6020820190506123545f830184612332565b92915050565b5f805f6060848603121561237157612370611fc1565b5b5f61237e86828701612148565b935050602061238f86828701612148565b92505060406123a08682870161209b565b9150509250925092565b5f602082840312156123bf576123be611fc1565b5b5f6123cc84828501612148565b91505092915050565b6123de81612049565b81146123e8575f80fd5b50565b5f813590506123f9816123d5565b92915050565b5f806040838503121561241557612414611fc1565b5b5f61242285828601612148565b9250506020612433858286016123eb565b9150509250929050565b5f612447826120da565b9050919050565b6124578161243d565b82525050565b5f6020820190506124705f83018461244e565b92915050565b5f67ffffffffffffffff8211156124905761248f6121a2565b5b61249982611f50565b9050602081019050919050565b5f6124b86124b384612476565b612200565b9050828152602081018484840111156124d4576124d361219e565b5b6124df84828561224a565b509392505050565b5f82601f8301126124fb576124fa61219a565b5b813561250b8482602086016124a6565b91505092915050565b5f805f806080858703121561252c5761252b611fc1565b5b5f61253987828801612148565b945050602061254a87828801612148565b935050604061255b8782880161209b565b925050606085013567ffffffffffffffff81111561257c5761257b611fc5565b5b612588878288016124e7565b91505092959194509250565b5f80604083850312156125aa576125a9611fc1565b5b5f6125b785828601612148565b92505060206125c885828601612148565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061261657607f821691505b602082108103612629576126286125d2565b5b50919050565b7f496e73756666696369656e742066756e647320696e20747265617375727900005f82015250565b5f612663601e83611f32565b915061266e8261262f565b602082019050919050565b5f6020820190508181035f83015261269081612657565b9050919050565b5f6040820190506126aa5f830185612332565b81810360208301526126bc8184611f60565b90509392505050565b5f6060820190506126d85f83018661210a565b6126e56020830185612332565b6126f2604083018461210a565b949350505050565b7f4e4654206e6f74206f776e656420627920746865206775696c640000000000005f82015250565b5f61272e601a83611f32565b9150612739826126fa565b602082019050919050565b5f6020820190508181035f83015261275b81612722565b9050919050565b5f6040820190506127755f830185612332565b612782602083018461210a565b9392505050565b7f4f6e6c79206775696c64206d656d626572732063616e20706572666f726d20745f8201527f68697320616374696f6e00000000000000000000000000000000000000000000602082015250565b5f6127e3602a83611f32565b91506127ee82612789565b604082019050919050565b5f6020820190508181035f830152612810816127d7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61284e8261207c565b91506128598361207c565b92508282026128678161207c565b9150828204841483151761287e5761287d612817565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6128bc8261207c565b91506128c78361207c565b9250826128d7576128d6612885565b5b828204905092915050565b5f81905092915050565b5f6128f682611f28565b61290081856128e2565b9350612910818560208601611f42565b80840191505092915050565b5f61292782856128ec565b915061293382846128ec565b91508190509392505050565b5f819050919050565b5f61296261295d612958846120da565b61293f565b6120da565b9050919050565b5f61297382612948565b9050919050565b5f61298482612969565b9050919050565b6129948161297a565b82525050565b5f6040820190506129ad5f830185612332565b6129ba602083018461298b565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6129e5826129c1565b6129ef81856129cb565b93506129ff818560208601611f42565b612a0881611f50565b840191505092915050565b5f608082019050612a265f83018761210a565b612a33602083018661210a565b612a406040830185612332565b8181036060830152612a5281846129db565b905095945050505050565b5f81519050612a6b81611ff4565b92915050565b5f60208284031215612a8657612a85611fc1565b5b5f612a9384828501612a5d565b91505092915050565b5f604082019050612aaf5f83018561210a565b612abc6020830184612332565b939250505056fea2646970667358221220311bd884557d50102ed7c7e9c8668cd36b909e2deda34e214a3a64bf38709a3064736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x101 JUMPI DUP1 PUSH4 0xABC8C7AF GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xE2C79281 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE2C79281 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xEDE8592B EQ PUSH2 0x733 JUMPI DUP1 PUSH4 0xF796C2D9 EQ PUSH2 0x75D JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH4 0xABC8C7AF EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0xC713A289 EQ PUSH2 0x667 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x691 JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0x97F7D0D5 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x9A969768 EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x5ED JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0x68F5CD3B EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x7E830574 EQ PUSH2 0x547 JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x179 JUMPI DUP1 PUSH4 0x4C39A749 GT PUSH2 0x148 JUMPI DUP1 PUSH4 0x4C39A749 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x529062FA EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x5301FA6F EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x5743CEDA EQ PUSH2 0x47B JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x313DAB20 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x31C258E8 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3D7 JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xC29F635 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xD39FC81 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31F JUMPI PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH3 0x8BFB00 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x275 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH2 0x98A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x22C6 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x333 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH2 0xAB2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0xC26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x465 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x48F PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49C SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F5 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x516 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x531 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x23AA JUMP JUMPDEST PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x552 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x55B PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x568 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x585 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AF PUSH2 0xEA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0xEAE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x613 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x23FF JUMP JUMPDEST PUSH2 0xFA4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x620 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x629 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x665 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0x2514 JUMP JUMPDEST PUSH2 0xFDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x67B PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x20AF JUMP JUMPDEST PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E1 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x71D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x2594 JUMP JUMPDEST PUSH2 0x106E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x747 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x768 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x771 PUSH2 0x1121 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x780 SWAP1 PUSH2 0x25FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7AC SWAP1 PUSH2 0x25FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8C9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x8D9 JUMPI POP PUSH2 0x8D8 DUP3 PUSH2 0x1208 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x8EE SWAP1 PUSH2 0x25FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x91A SWAP1 PUSH2 0x25FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x965 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x93C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x965 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x948 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x979 DUP3 PUSH2 0x1271 JUMP JUMPDEST POP PUSH2 0x983 DUP3 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99C DUP3 DUP3 PUSH2 0x997 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x1337 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DC SWAP1 PUSH2 0x2679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA49 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xA54 ADDRESS DUP4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0xA5E DUP3 DUP5 PUSH2 0x143C JUMP JUMPDEST PUSH32 0x29705A31C393A642035AD5F190E6F0B0B3F0EF43ED68C72CF87AE76BE0E3185B DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA8F SWAP3 SWAP2 SWAP1 PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xAAD PUSH1 0x6 PUSH2 0x144A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB22 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB19 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xB35 DUP4 DUP4 PUSH2 0xB30 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x1456 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAB JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBFC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xFDF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC46 DUP3 PUSH2 0x1661 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC93 SWAP1 PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH32 0x50580F9B480D6D5CEC851393DEB0B48A42783DCA51B04CEC0E1F104D553F516C DUP2 CALLER PUSH1 0x40 MLOAD PUSH2 0xD2E SWAP3 SWAP2 SWAP1 PUSH2 0x2762 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xD4F DUP3 PUSH2 0x1271 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC4 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xE27 SWAP1 PUSH2 0x25FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE53 SWAP1 PUSH2 0x25FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE9E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE75 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE9E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE81 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xEB8 CALLER PUSH2 0xD5C JUMP JUMPDEST GT PUSH2 0xEF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEF SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xF01 PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF9F JUMPI PUSH0 PUSH2 0xF17 DUP3 PUSH2 0xD45 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF23 DUP3 PUSH2 0xD5C JUMP JUMPDEST GT ISZERO PUSH2 0xF91 JUMPI PUSH0 DUP4 PUSH2 0xF34 DUP4 PUSH2 0xD5C JUMP JUMPDEST DUP7 PUSH2 0xF3F SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0xF49 SWAP2 SWAP1 PUSH2 0x28B2 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF8E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF05 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFB6 PUSH2 0xFAF PUSH2 0x1330 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x169A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xFEA DUP5 DUP5 DUP5 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0xFF6 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1803 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x100D DUP3 PUSH2 0x1271 JUMP JUMPDEST POP PUSH0 PUSH2 0x1017 PUSH2 0x19B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1060 JUMP JUMPDEST DUP1 PUSH2 0x103F DUP5 PUSH2 0x19CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1050 SWAP3 SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x12 SLOAD PUSH1 0xF SLOAD PUSH2 0x1133 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x113D SWAP2 SWAP1 PUSH2 0x28B2 JUMP JUMPDEST PUSH1 0x13 DUP2 SWAP1 SSTORE POP PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x13 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x11A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0x72BE57C44BDCDF29E3BDED0B32580B641D4C7F1E2D1CD7ABA457FE552B351AAF PUSH1 0x13 SLOAD PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x11FE SWAP3 SWAP2 SWAP1 PUSH2 0x299A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x127C DUP4 PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12EE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E5 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1344 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1A95 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x13C5 DUP4 DUP4 PUSH0 PUSH2 0x1456 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1437 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142E SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1446 DUP3 DUP3 PUSH2 0x143C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1461 DUP5 PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14A2 JUMPI PUSH2 0x14A1 DUP2 DUP5 DUP7 PUSH2 0x1C54 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x152D JUMPI PUSH2 0x14E1 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15AC JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x170A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1701 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17F6 SWAP2 SWAP1 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x19AF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1846 PUSH2 0x1330 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1868 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18A3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18A0 SWAP2 SWAP1 PUSH2 0x2A71 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1924 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x18D1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x191C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1913 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x19AD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A4 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x19D9 DUP5 PUSH2 0x1D17 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19F7 JUMPI PUSH2 0x19F6 PUSH2 0x21A2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A29 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A8A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1A7F JUMPI PUSH2 0x1A7E PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1A36 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1ACD JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1BFF JUMPI PUSH0 PUSH2 0x1ADC DUP5 PUSH2 0x1271 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B46 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1B59 JUMPI POP PUSH2 0x1B57 DUP2 DUP5 PUSH2 0x106E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1B9B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B92 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1BFD JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C5F DUP4 DUP4 DUP4 PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0x1D12 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CD3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CCA SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D09 SWAP3 SWAP2 SWAP1 PUSH2 0x2A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1D73 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1D69 JUMPI PUSH2 0x1D68 PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1DB0 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1DA6 JUMPI PUSH2 0x1DA5 PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1DDF JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1DD5 JUMPI PUSH2 0x1DD4 PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1E08 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1DFE JUMPI PUSH2 0x1DFD PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1E2D JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1E23 JUMPI PUSH2 0x1E22 PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1E50 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1E46 JUMPI PUSH2 0x1E45 PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1E5F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1F1F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1EE0 JUMPI POP PUSH2 0x1EDF DUP5 DUP5 PUSH2 0x106E JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1F1E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F06 DUP4 PUSH2 0x12F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6A DUP3 PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0x1F74 DUP2 DUP6 PUSH2 0x1F32 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F84 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x1F8D DUP2 PUSH2 0x1F50 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FB0 DUP2 DUP5 PUSH2 0x1F60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FFD DUP2 PUSH2 0x1FC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2007 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2018 DUP2 PUSH2 0x1FF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2033 JUMPI PUSH2 0x2032 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2040 DUP5 DUP3 DUP6 ADD PUSH2 0x200A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x205D DUP2 PUSH2 0x2049 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2076 PUSH0 DUP4 ADD DUP5 PUSH2 0x2054 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x208E DUP2 PUSH2 0x207C JUMP JUMPDEST DUP2 EQ PUSH2 0x2098 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20A9 DUP2 PUSH2 0x2085 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C4 JUMPI PUSH2 0x20C3 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D1 DUP5 DUP3 DUP6 ADD PUSH2 0x209B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2103 DUP3 PUSH2 0x20DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2113 DUP2 PUSH2 0x20F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x212C PUSH0 DUP4 ADD DUP5 PUSH2 0x210A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x213B DUP2 PUSH2 0x20F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2145 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2156 DUP2 PUSH2 0x2132 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2172 JUMPI PUSH2 0x2171 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x217F DUP6 DUP3 DUP7 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2190 DUP6 DUP3 DUP7 ADD PUSH2 0x209B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x21D8 DUP3 PUSH2 0x1F50 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21F7 JUMPI PUSH2 0x21F6 PUSH2 0x21A2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2209 PUSH2 0x1FB8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2215 DUP3 DUP3 PUSH2 0x21CF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2234 JUMPI PUSH2 0x2233 PUSH2 0x21A2 JUMP JUMPDEST JUMPDEST PUSH2 0x223D DUP3 PUSH2 0x1F50 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x226A PUSH2 0x2265 DUP5 PUSH2 0x221A JUMP JUMPDEST PUSH2 0x2200 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2286 JUMPI PUSH2 0x2285 PUSH2 0x219E JUMP JUMPDEST JUMPDEST PUSH2 0x2291 DUP5 DUP3 DUP6 PUSH2 0x224A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22AD JUMPI PUSH2 0x22AC PUSH2 0x219A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2258 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22DD JUMPI PUSH2 0x22DC PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22FA JUMPI PUSH2 0x22F9 PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH2 0x2306 DUP7 DUP3 DUP8 ADD PUSH2 0x2299 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2317 DUP7 DUP3 DUP8 ADD PUSH2 0x209B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2328 DUP7 DUP3 DUP8 ADD PUSH2 0x209B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x233B DUP2 PUSH2 0x207C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2354 PUSH0 DUP4 ADD DUP5 PUSH2 0x2332 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2371 JUMPI PUSH2 0x2370 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x237E DUP7 DUP3 DUP8 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x238F DUP7 DUP3 DUP8 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23A0 DUP7 DUP3 DUP8 ADD PUSH2 0x209B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23BF JUMPI PUSH2 0x23BE PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23CC DUP5 DUP3 DUP6 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23DE DUP2 PUSH2 0x2049 JUMP JUMPDEST DUP2 EQ PUSH2 0x23E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23F9 DUP2 PUSH2 0x23D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2415 JUMPI PUSH2 0x2414 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2422 DUP6 DUP3 DUP7 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2433 DUP6 DUP3 DUP7 ADD PUSH2 0x23EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2447 DUP3 PUSH2 0x20DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2457 DUP2 PUSH2 0x243D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2470 PUSH0 DUP4 ADD DUP5 PUSH2 0x244E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2490 JUMPI PUSH2 0x248F PUSH2 0x21A2 JUMP JUMPDEST JUMPDEST PUSH2 0x2499 DUP3 PUSH2 0x1F50 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24B8 PUSH2 0x24B3 DUP5 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0x2200 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x24D4 JUMPI PUSH2 0x24D3 PUSH2 0x219E JUMP JUMPDEST JUMPDEST PUSH2 0x24DF DUP5 DUP3 DUP6 PUSH2 0x224A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24FB JUMPI PUSH2 0x24FA PUSH2 0x219A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x250B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x252C JUMPI PUSH2 0x252B PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2539 DUP8 DUP3 DUP9 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x254A DUP8 DUP3 DUP9 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x255B DUP8 DUP3 DUP9 ADD PUSH2 0x209B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x257C JUMPI PUSH2 0x257B PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH2 0x2588 DUP8 DUP3 DUP9 ADD PUSH2 0x24E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25AA JUMPI PUSH2 0x25A9 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25B7 DUP6 DUP3 DUP7 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25C8 DUP6 DUP3 DUP7 ADD PUSH2 0x2148 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2616 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2629 JUMPI PUSH2 0x2628 PUSH2 0x25D2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E2074726561737572790000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2663 PUSH1 0x1E DUP4 PUSH2 0x1F32 JUMP JUMPDEST SWAP2 POP PUSH2 0x266E DUP3 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2690 DUP2 PUSH2 0x2657 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26AA PUSH0 DUP4 ADD DUP6 PUSH2 0x2332 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x26BC DUP2 DUP5 PUSH2 0x1F60 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26D8 PUSH0 DUP4 ADD DUP7 PUSH2 0x210A JUMP JUMPDEST PUSH2 0x26E5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2332 JUMP JUMPDEST PUSH2 0x26F2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x210A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E4654206E6F74206F776E656420627920746865206775696C64000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x272E PUSH1 0x1A DUP4 PUSH2 0x1F32 JUMP JUMPDEST SWAP2 POP PUSH2 0x2739 DUP3 PUSH2 0x26FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x275B DUP2 PUSH2 0x2722 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2775 PUSH0 DUP4 ADD DUP6 PUSH2 0x2332 JUMP JUMPDEST PUSH2 0x2782 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x210A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206775696C64206D656D626572732063616E20706572666F726D2074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68697320616374696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27E3 PUSH1 0x2A DUP4 PUSH2 0x1F32 JUMP JUMPDEST SWAP2 POP PUSH2 0x27EE DUP3 PUSH2 0x2789 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2810 DUP2 PUSH2 0x27D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x284E DUP3 PUSH2 0x207C JUMP JUMPDEST SWAP2 POP PUSH2 0x2859 DUP4 PUSH2 0x207C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2867 DUP2 PUSH2 0x207C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x287E JUMPI PUSH2 0x287D PUSH2 0x2817 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28BC DUP3 PUSH2 0x207C JUMP JUMPDEST SWAP2 POP PUSH2 0x28C7 DUP4 PUSH2 0x207C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x28D7 JUMPI PUSH2 0x28D6 PUSH2 0x2885 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28F6 DUP3 PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0x2900 DUP2 DUP6 PUSH2 0x28E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2910 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F42 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2927 DUP3 DUP6 PUSH2 0x28EC JUMP JUMPDEST SWAP2 POP PUSH2 0x2933 DUP3 DUP5 PUSH2 0x28EC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2962 PUSH2 0x295D PUSH2 0x2958 DUP5 PUSH2 0x20DA JUMP JUMPDEST PUSH2 0x293F JUMP JUMPDEST PUSH2 0x20DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2973 DUP3 PUSH2 0x2948 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2984 DUP3 PUSH2 0x2969 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2994 DUP2 PUSH2 0x297A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29AD PUSH0 DUP4 ADD DUP6 PUSH2 0x2332 JUMP JUMPDEST PUSH2 0x29BA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x298B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29E5 DUP3 PUSH2 0x29C1 JUMP JUMPDEST PUSH2 0x29EF DUP2 DUP6 PUSH2 0x29CB JUMP JUMPDEST SWAP4 POP PUSH2 0x29FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x2A08 DUP2 PUSH2 0x1F50 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2A26 PUSH0 DUP4 ADD DUP8 PUSH2 0x210A JUMP JUMPDEST PUSH2 0x2A33 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x210A JUMP JUMPDEST PUSH2 0x2A40 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2332 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2A52 DUP2 DUP5 PUSH2 0x29DB JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A6B DUP2 PUSH2 0x1FF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A86 JUMPI PUSH2 0x2A85 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A93 DUP5 DUP3 DUP6 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2AAF PUSH0 DUP4 ADD DUP6 PUSH2 0x210A JUMP JUMPDEST PUSH2 0x2ABC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2332 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SHL 0xD8 DUP5 SSTORE PUSH30 0x50102ED7C7E9C8668CD36B909E2DEDA34E214A3A64BF38709A3064736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "226:2541:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1561:300:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1574:319:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;623:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2130:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4143:578:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;362:27:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;395:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:132:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;704:23:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1899:225;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;733:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;826:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2185:118:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;869:33:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:22:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;793:27:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2233:390;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3718:144:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;583:34:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4985:208:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;552:25:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2677:255:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;761:26:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;908:45:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1175:258;;;;;;;;;;;;;:::i;:::-;;649:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1561:300:4:-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;1574:319:15:-;1692:5;1673:15;;:24;;1665:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1742:11;;;;;;;;;;;:20;;:27;1763:5;1742:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:29;1793:4;1800:7;1779:5;:29::i;:::-;1818:27;1831:7;1840:4;1818:12;:27::i;:::-;1860:26;1872:7;1881:4;1860:26;;;;;;;:::i;:::-;;;;;;;;1574:319;;;:::o;623:20::-;;;;:::o;2130:97::-;2174:4;2197:23;:13;:21;:23::i;:::-;2190:30;;2130:97;:::o;4143:578:4:-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;362:27:15:-;;;;:::o;395:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4787:132:4:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;704:23:15:-;;;;;;;;;;;;;:::o;1899:225::-;1986:4;1957:34;;:17;1966:7;1957:8;:17::i;:::-;:34;;;1949:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2032:12;:24;2045:10;2032:24;;;;;;;;;;;;;;;2062:7;2032:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2085:32;2097:7;2106:10;2085:32;;;;;;;:::i;:::-;;;;;;;;1899:225;:::o;733:22::-;;;;:::o;826:37::-;;;;:::o;2185:118:4:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;869:33:15:-;;;;:::o;1920:208:4:-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;676:22:15:-;;;;:::o;2518:93:4:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;793:27:15:-;;;;:::o;2233:390::-;2699:1;2675:21;2685:10;2675:9;:21::i;:::-;:25;2667:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2307:16:::1;2326:13;:11;:13::i;:::-;2307:32;;2354:6;2349:268;2370:11;2366:1;:15;2349:268;;;2402:14;2419:10;2427:1;2419:7;:10::i;:::-;2402:27;;2467:1;2447:17;2457:6;2447:9;:17::i;:::-;:21;2443:164;;;2488:11;2531;2511:17;2521:6;2511:9;:17::i;:::-;2502:6;:26;;;;:::i;:::-;:40;;;;:::i;:::-;2488:54;;2568:6;2560:24;;:32;2585:6;2560:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2470:137;2443:164;2388:229;2383:3;;;;;;;2349:268;;;;2297:326;2233:390:::0;:::o;3718:144:4:-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;583:34:15:-;;;;;;;;;;;;;:::o;4985:208:4:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;552:25:15:-;;;;:::o;2677:255:4:-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;761:26:15:-;;;;:::o;3928:153:4:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;908:45:15:-;;;;;;;;;;;;;:::o;1175:258::-;1282:3;1254:25;;1241:10;;:38;;;;:::i;:::-;:44;;;;:::i;:::-;1217:21;:68;;;;1295:22;;;;;;;;;;;:31;;:54;1327:21;;1295:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1364:62;1380:21;;1403:22;;;;;;;;;;;1364:62;;;;;;;:::i;:::-;;;;;;;;1175:258::o;762:146:11:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:4:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;14418:120:4:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;1047:122:15:-;1130:32;1143:7;1152:9;1130:12;:32::i;:::-;1047:122;;:::o;827:112:9:-;892:7;918;:14;;;911:21;;827:112;;;:::o;8838:795:4:-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;5707:115::-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:10:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;14720:662:4:-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;12214:916:13:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;6376:272:4:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;7:99:16:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:149;1605:7;1645:66;1638:5;1634:78;1623:89;;1569:149;;;:::o;1724:120::-;1796:23;1813:5;1796:23;:::i;:::-;1789:5;1786:34;1776:62;;1834:1;1831;1824:12;1776:62;1724:120;:::o;1850:137::-;1895:5;1933:6;1920:20;1911:29;;1949:32;1975:5;1949:32;:::i;:::-;1850:137;;;;:::o;1993:327::-;2051:6;2100:2;2088:9;2079:7;2075:23;2071:32;2068:119;;;2106:79;;:::i;:::-;2068:119;2226:1;2251:52;2295:7;2286:6;2275:9;2271:22;2251:52;:::i;:::-;2241:62;;2197:116;1993:327;;;;:::o;2326:90::-;2360:7;2403:5;2396:13;2389:21;2378:32;;2326:90;;;:::o;2422:109::-;2503:21;2518:5;2503:21;:::i;:::-;2498:3;2491:34;2422:109;;:::o;2537:210::-;2624:4;2662:2;2651:9;2647:18;2639:26;;2675:65;2737:1;2726:9;2722:17;2713:6;2675:65;:::i;:::-;2537:210;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:117::-;4892:1;4889;4882:12;4906:117;5015:1;5012;5005:12;5029:180;5077:77;5074:1;5067:88;5174:4;5171:1;5164:15;5198:4;5195:1;5188:15;5215:281;5298:27;5320:4;5298:27;:::i;:::-;5290:6;5286:40;5428:6;5416:10;5413:22;5392:18;5380:10;5377:34;5374:62;5371:88;;;5439:18;;:::i;:::-;5371:88;5479:10;5475:2;5468:22;5258:238;5215:281;;:::o;5502:129::-;5536:6;5563:20;;:::i;:::-;5553:30;;5592:33;5620:4;5612:6;5592:33;:::i;:::-;5502:129;;;:::o;5637:308::-;5699:4;5789:18;5781:6;5778:30;5775:56;;;5811:18;;:::i;:::-;5775:56;5849:29;5871:6;5849:29;:::i;:::-;5841:37;;5933:4;5927;5923:15;5915:23;;5637:308;;;:::o;5951:148::-;6049:6;6044:3;6039;6026:30;6090:1;6081:6;6076:3;6072:16;6065:27;5951:148;;;:::o;6105:425::-;6183:5;6208:66;6224:49;6266:6;6224:49;:::i;:::-;6208:66;:::i;:::-;6199:75;;6297:6;6290:5;6283:21;6335:4;6328:5;6324:16;6373:3;6364:6;6359:3;6355:16;6352:25;6349:112;;;6380:79;;:::i;:::-;6349:112;6470:54;6517:6;6512:3;6507;6470:54;:::i;:::-;6189:341;6105:425;;;;;:::o;6550:340::-;6606:5;6655:3;6648:4;6640:6;6636:17;6632:27;6622:122;;6663:79;;:::i;:::-;6622:122;6780:6;6767:20;6805:79;6880:3;6872:6;6865:4;6857:6;6853:17;6805:79;:::i;:::-;6796:88;;6612:278;6550:340;;;;:::o;6896:799::-;6983:6;6991;6999;7048:2;7036:9;7027:7;7023:23;7019:32;7016:119;;;7054:79;;:::i;:::-;7016:119;7202:1;7191:9;7187:17;7174:31;7232:18;7224:6;7221:30;7218:117;;;7254:79;;:::i;:::-;7218:117;7359:63;7414:7;7405:6;7394:9;7390:22;7359:63;:::i;:::-;7349:73;;7145:287;7471:2;7497:53;7542:7;7533:6;7522:9;7518:22;7497:53;:::i;:::-;7487:63;;7442:118;7599:2;7625:53;7670:7;7661:6;7650:9;7646:22;7625:53;:::i;:::-;7615:63;;7570:118;6896:799;;;;;:::o;7701:118::-;7788:24;7806:5;7788:24;:::i;:::-;7783:3;7776:37;7701:118;;:::o;7825:222::-;7918:4;7956:2;7945:9;7941:18;7933:26;;7969:71;8037:1;8026:9;8022:17;8013:6;7969:71;:::i;:::-;7825:222;;;;:::o;8053:619::-;8130:6;8138;8146;8195:2;8183:9;8174:7;8170:23;8166:32;8163:119;;;8201:79;;:::i;:::-;8163:119;8321:1;8346:53;8391:7;8382:6;8371:9;8367:22;8346:53;:::i;:::-;8336:63;;8292:117;8448:2;8474:53;8519:7;8510:6;8499:9;8495:22;8474:53;:::i;:::-;8464:63;;8419:118;8576:2;8602:53;8647:7;8638:6;8627:9;8623:22;8602:53;:::i;:::-;8592:63;;8547:118;8053:619;;;;;:::o;8678:329::-;8737:6;8786:2;8774:9;8765:7;8761:23;8757:32;8754:119;;;8792:79;;:::i;:::-;8754:119;8912:1;8937:53;8982:7;8973:6;8962:9;8958:22;8937:53;:::i;:::-;8927:63;;8883:117;8678:329;;;;:::o;9013:116::-;9083:21;9098:5;9083:21;:::i;:::-;9076:5;9073:32;9063:60;;9119:1;9116;9109:12;9063:60;9013:116;:::o;9135:133::-;9178:5;9216:6;9203:20;9194:29;;9232:30;9256:5;9232:30;:::i;:::-;9135:133;;;;:::o;9274:468::-;9339:6;9347;9396:2;9384:9;9375:7;9371:23;9367:32;9364:119;;;9402:79;;:::i;:::-;9364:119;9522:1;9547:53;9592:7;9583:6;9572:9;9568:22;9547:53;:::i;:::-;9537:63;;9493:117;9649:2;9675:50;9717:7;9708:6;9697:9;9693:22;9675:50;:::i;:::-;9665:60;;9620:115;9274:468;;;;;:::o;9748:104::-;9793:7;9822:24;9840:5;9822:24;:::i;:::-;9811:35;;9748:104;;;:::o;9858:142::-;9961:32;9987:5;9961:32;:::i;:::-;9956:3;9949:45;9858:142;;:::o;10006:254::-;10115:4;10153:2;10142:9;10138:18;10130:26;;10166:87;10250:1;10239:9;10235:17;10226:6;10166:87;:::i;:::-;10006:254;;;;:::o;10266:307::-;10327:4;10417:18;10409:6;10406:30;10403:56;;;10439:18;;:::i;:::-;10403:56;10477:29;10499:6;10477:29;:::i;:::-;10469:37;;10561:4;10555;10551:15;10543:23;;10266:307;;;:::o;10579:423::-;10656:5;10681:65;10697:48;10738:6;10697:48;:::i;:::-;10681:65;:::i;:::-;10672:74;;10769:6;10762:5;10755:21;10807:4;10800:5;10796:16;10845:3;10836:6;10831:3;10827:16;10824:25;10821:112;;;10852:79;;:::i;:::-;10821:112;10942:54;10989:6;10984:3;10979;10942:54;:::i;:::-;10662:340;10579:423;;;;;:::o;11021:338::-;11076:5;11125:3;11118:4;11110:6;11106:17;11102:27;11092:122;;11133:79;;:::i;:::-;11092:122;11250:6;11237:20;11275:78;11349:3;11341:6;11334:4;11326:6;11322:17;11275:78;:::i;:::-;11266:87;;11082:277;11021:338;;;;:::o;11365:943::-;11460:6;11468;11476;11484;11533:3;11521:9;11512:7;11508:23;11504:33;11501:120;;;11540:79;;:::i;:::-;11501:120;11660:1;11685:53;11730:7;11721:6;11710:9;11706:22;11685:53;:::i;:::-;11675:63;;11631:117;11787:2;11813:53;11858:7;11849:6;11838:9;11834:22;11813:53;:::i;:::-;11803:63;;11758:118;11915:2;11941:53;11986:7;11977:6;11966:9;11962:22;11941:53;:::i;:::-;11931:63;;11886:118;12071:2;12060:9;12056:18;12043:32;12102:18;12094:6;12091:30;12088:117;;;12124:79;;:::i;:::-;12088:117;12229:62;12283:7;12274:6;12263:9;12259:22;12229:62;:::i;:::-;12219:72;;12014:287;11365:943;;;;;;;:::o;12314:474::-;12382:6;12390;12439:2;12427:9;12418:7;12414:23;12410:32;12407:119;;;12445:79;;:::i;:::-;12407:119;12565:1;12590:53;12635:7;12626:6;12615:9;12611:22;12590:53;:::i;:::-;12580:63;;12536:117;12692:2;12718:53;12763:7;12754:6;12743:9;12739:22;12718:53;:::i;:::-;12708:63;;12663:118;12314:474;;;;;:::o;12794:180::-;12842:77;12839:1;12832:88;12939:4;12936:1;12929:15;12963:4;12960:1;12953:15;12980:320;13024:6;13061:1;13055:4;13051:12;13041:22;;13108:1;13102:4;13098:12;13129:18;13119:81;;13185:4;13177:6;13173:17;13163:27;;13119:81;13247:2;13239:6;13236:14;13216:18;13213:38;13210:84;;13266:18;;:::i;:::-;13210:84;13031:269;12980:320;;;:::o;13306:180::-;13446:32;13442:1;13434:6;13430:14;13423:56;13306:180;:::o;13492:366::-;13634:3;13655:67;13719:2;13714:3;13655:67;:::i;:::-;13648:74;;13731:93;13820:3;13731:93;:::i;:::-;13849:2;13844:3;13840:12;13833:19;;13492:366;;;:::o;13864:419::-;14030:4;14068:2;14057:9;14053:18;14045:26;;14117:9;14111:4;14107:20;14103:1;14092:9;14088:17;14081:47;14145:131;14271:4;14145:131;:::i;:::-;14137:139;;13864:419;;;:::o;14289:423::-;14430:4;14468:2;14457:9;14453:18;14445:26;;14481:71;14549:1;14538:9;14534:17;14525:6;14481:71;:::i;:::-;14599:9;14593:4;14589:20;14584:2;14573:9;14569:18;14562:48;14627:78;14700:4;14691:6;14627:78;:::i;:::-;14619:86;;14289:423;;;;;:::o;14718:442::-;14867:4;14905:2;14894:9;14890:18;14882:26;;14918:71;14986:1;14975:9;14971:17;14962:6;14918:71;:::i;:::-;14999:72;15067:2;15056:9;15052:18;15043:6;14999:72;:::i;:::-;15081;15149:2;15138:9;15134:18;15125:6;15081:72;:::i;:::-;14718:442;;;;;;:::o;15166:176::-;15306:28;15302:1;15294:6;15290:14;15283:52;15166:176;:::o;15348:366::-;15490:3;15511:67;15575:2;15570:3;15511:67;:::i;:::-;15504:74;;15587:93;15676:3;15587:93;:::i;:::-;15705:2;15700:3;15696:12;15689:19;;15348:366;;;:::o;15720:419::-;15886:4;15924:2;15913:9;15909:18;15901:26;;15973:9;15967:4;15963:20;15959:1;15948:9;15944:17;15937:47;16001:131;16127:4;16001:131;:::i;:::-;15993:139;;15720:419;;;:::o;16145:332::-;16266:4;16304:2;16293:9;16289:18;16281:26;;16317:71;16385:1;16374:9;16370:17;16361:6;16317:71;:::i;:::-;16398:72;16466:2;16455:9;16451:18;16442:6;16398:72;:::i;:::-;16145:332;;;;;:::o;16483:229::-;16623:34;16619:1;16611:6;16607:14;16600:58;16692:12;16687:2;16679:6;16675:15;16668:37;16483:229;:::o;16718:366::-;16860:3;16881:67;16945:2;16940:3;16881:67;:::i;:::-;16874:74;;16957:93;17046:3;16957:93;:::i;:::-;17075:2;17070:3;17066:12;17059:19;;16718:366;;;:::o;17090:419::-;17256:4;17294:2;17283:9;17279:18;17271:26;;17343:9;17337:4;17333:20;17329:1;17318:9;17314:17;17307:47;17371:131;17497:4;17371:131;:::i;:::-;17363:139;;17090:419;;;:::o;17515:180::-;17563:77;17560:1;17553:88;17660:4;17657:1;17650:15;17684:4;17681:1;17674:15;17701:410;17741:7;17764:20;17782:1;17764:20;:::i;:::-;17759:25;;17798:20;17816:1;17798:20;:::i;:::-;17793:25;;17853:1;17850;17846:9;17875:30;17893:11;17875:30;:::i;:::-;17864:41;;18054:1;18045:7;18041:15;18038:1;18035:22;18015:1;18008:9;17988:83;17965:139;;18084:18;;:::i;:::-;17965:139;17749:362;17701:410;;;;:::o;18117:180::-;18165:77;18162:1;18155:88;18262:4;18259:1;18252:15;18286:4;18283:1;18276:15;18303:185;18343:1;18360:20;18378:1;18360:20;:::i;:::-;18355:25;;18394:20;18412:1;18394:20;:::i;:::-;18389:25;;18433:1;18423:35;;18438:18;;:::i;:::-;18423:35;18480:1;18477;18473:9;18468:14;;18303:185;;;;:::o;18494:148::-;18596:11;18633:3;18618:18;;18494:148;;;;:::o;18648:390::-;18754:3;18782:39;18815:5;18782:39;:::i;:::-;18837:89;18919:6;18914:3;18837:89;:::i;:::-;18830:96;;18935:65;18993:6;18988:3;18981:4;18974:5;18970:16;18935:65;:::i;:::-;19025:6;19020:3;19016:16;19009:23;;18758:280;18648:390;;;;:::o;19044:435::-;19224:3;19246:95;19337:3;19328:6;19246:95;:::i;:::-;19239:102;;19358:95;19449:3;19440:6;19358:95;:::i;:::-;19351:102;;19470:3;19463:10;;19044:435;;;;;:::o;19485:60::-;19513:3;19534:5;19527:12;;19485:60;;;:::o;19551:142::-;19601:9;19634:53;19652:34;19661:24;19679:5;19661:24;:::i;:::-;19652:34;:::i;:::-;19634:53;:::i;:::-;19621:66;;19551:142;;;:::o;19699:126::-;19749:9;19782:37;19813:5;19782:37;:::i;:::-;19769:50;;19699:126;;;:::o;19831:134::-;19889:9;19922:37;19953:5;19922:37;:::i;:::-;19909:50;;19831:134;;;:::o;19971:147::-;20066:45;20105:5;20066:45;:::i;:::-;20061:3;20054:58;19971:147;;:::o;20124:348::-;20253:4;20291:2;20280:9;20276:18;20268:26;;20304:71;20372:1;20361:9;20357:17;20348:6;20304:71;:::i;:::-;20385:80;20461:2;20450:9;20446:18;20437:6;20385:80;:::i;:::-;20124:348;;;;;:::o;20478:98::-;20529:6;20563:5;20557:12;20547:22;;20478:98;;;:::o;20582:168::-;20665:11;20699:6;20694:3;20687:19;20739:4;20734:3;20730:14;20715:29;;20582:168;;;;:::o;20756:373::-;20842:3;20870:38;20902:5;20870:38;:::i;:::-;20924:70;20987:6;20982:3;20924:70;:::i;:::-;20917:77;;21003:65;21061:6;21056:3;21049:4;21042:5;21038:16;21003:65;:::i;:::-;21093:29;21115:6;21093:29;:::i;:::-;21088:3;21084:39;21077:46;;20846:283;20756:373;;;;:::o;21135:640::-;21330:4;21368:3;21357:9;21353:19;21345:27;;21382:71;21450:1;21439:9;21435:17;21426:6;21382:71;:::i;:::-;21463:72;21531:2;21520:9;21516:18;21507:6;21463:72;:::i;:::-;21545;21613:2;21602:9;21598:18;21589:6;21545:72;:::i;:::-;21664:9;21658:4;21654:20;21649:2;21638:9;21634:18;21627:48;21692:76;21763:4;21754:6;21692:76;:::i;:::-;21684:84;;21135:640;;;;;;;:::o;21781:141::-;21837:5;21868:6;21862:13;21853:22;;21884:32;21910:5;21884:32;:::i;:::-;21781:141;;;;:::o;21928:349::-;21997:6;22046:2;22034:9;22025:7;22021:23;22017:32;22014:119;;;22052:79;;:::i;:::-;22014:119;22172:1;22197:63;22252:7;22243:6;22232:9;22228:22;22197:63;:::i;:::-;22187:73;;22143:127;21928:349;;;;:::o;22283:332::-;22404:4;22442:2;22431:9;22427:18;22419:26;;22455:71;22523:1;22512:9;22508:17;22499:6;22455:71;:::i;:::-;22536:72;22604:2;22593:9;22589:18;22580:6;22536:72;:::i;:::-;22283:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2200200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acquireNFT(string,uint256,uint256)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"borrowNFT(uint256)": "infinite",
								"borrowedNFTs(address,uint256)": "infinite",
								"distributeNFT()": "infinite",
								"distributeProfits(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"marketplace()": "2553",
								"membershipFee()": "2514",
								"name()": "infinite",
								"nftBalance()": "2514",
								"nftDistribution()": "2492",
								"nftDistributionAddress()": "2596",
								"nftDistributionAmount()": "2493",
								"nftDistributionPercentage()": "2536",
								"nftName()": "infinite",
								"nftOwner()": "2553",
								"nftPrice()": "2515",
								"nftTokenId()": "2537",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "832",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalNFTSupply()": "2469",
								"totalSupply()": "2591",
								"transferFrom(address,address,uint256)": "infinite",
								"treasuryBalance()": "2493"
							},
							"internal": {
								"_setTokenURI(uint256,string memory)": "infinite",
								"internalSetTokenURI(uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 226,
									"end": 2767,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "44414747204E4654000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "4441474700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "7"
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 16,
									"value": "9"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 16,
									"value": "10"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "10"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "46"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 16,
									"value": "46"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "51"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "52"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 16,
									"value": "52"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 16,
									"value": "51"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "76"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "9"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 16,
									"value": "76"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "88"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 16,
									"value": "88"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "tag",
									"source": 15,
									"value": "7"
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 2767,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220311bd884557d50102ed7c7e9c8668cd36b909e2deda34e214a3a64bf38709a3064736f6c63430008190033",
									".code": [
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "6352211E"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "ABC8C7AF"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "E2C79281"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "E2C79281"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "E985E9C5"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "EDE8592B"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "F796C2D9"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "ABC8C7AF"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "B88D4FDE"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "C713A289"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "C87B56DD"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "97F7D0D5"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "9A969768"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "A22CB465"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "6352211E"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "68F5CD3B"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "7E830574"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "4C39A749"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "4C39A749"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "529062FA"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "5301FA6F"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "5743CEDA"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "313DAB20"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "31C258E8"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "42842E0E"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "C29F635"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "D39FC81"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "18160DDD"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "8BFB00"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "6FDDE03"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "81812FC"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 226,
											"end": 2767,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 649,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 649,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "tag",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 1574,
											"end": 1893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "tag",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 1574,
											"end": 1893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 623,
											"end": 643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 623,
											"end": 643,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 643,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 623,
											"end": 643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 623,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 623,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "tag",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 623,
											"end": 643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 643,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 623,
											"end": 643,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 623,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 623,
											"end": 643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 643,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "tag",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2130,
											"end": 2227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 2130,
											"end": 2227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "tag",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 362,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 362,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 395,
											"end": 441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "tag",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 395,
											"end": 441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 395,
											"end": 441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 704,
											"end": 727,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "tag",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 704,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "tag",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 704,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "tag",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "tag",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1899,
											"end": 2124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "tag",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 1899,
											"end": 2124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "tag",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 733,
											"end": 755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 733,
											"end": 755,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 755,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "tag",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 733,
											"end": 755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 733,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 733,
											"end": 755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "tag",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 733,
											"end": 755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 755,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 733,
											"end": 755,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 733,
											"end": 755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "tag",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 733,
											"end": 755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 755,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 826,
											"end": 863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 826,
											"end": 863,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 863,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "tag",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 826,
											"end": 863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 826,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 826,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "tag",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 826,
											"end": 863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 863,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 826,
											"end": 863,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 826,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "tag",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 826,
											"end": 863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 863,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 869,
											"end": 902,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 869,
											"end": 902,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 869,
											"end": 902,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 902,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 869,
											"end": 902,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 869,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 869,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "tag",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 869,
											"end": 902,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 869,
											"end": 902,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 869,
											"end": 902,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 869,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 869,
											"end": 902,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 869,
											"end": 902,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 676,
											"end": 698,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 676,
											"end": 698,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 676,
											"end": 698,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 698,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 676,
											"end": 698,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 676,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 676,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 676,
											"end": 698,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 698,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 676,
											"end": 698,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 676,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 676,
											"end": 698,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 698,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 793,
											"end": 820,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 793,
											"end": 820,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 793,
											"end": 820,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 820,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "tag",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 793,
											"end": 820,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 793,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 793,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 793,
											"end": 820,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 820,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 793,
											"end": 820,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 793,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "tag",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 793,
											"end": 820,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 820,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "tag",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2233,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "tag",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 2233,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "tag",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 583,
											"end": 617,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "tag",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 583,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "tag",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 583,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "tag",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 552,
											"end": 577,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 552,
											"end": 577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 552,
											"end": 577,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 577,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "tag",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 552,
											"end": 577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 552,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 552,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 552,
											"end": 577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 577,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 552,
											"end": 577,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 552,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 552,
											"end": 577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 577,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 761,
											"end": 787,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 761,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "tag",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 761,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "tag",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 908,
											"end": 953,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "tag",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 908,
											"end": 953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 908,
											"end": 953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 1175,
											"end": 1433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "tag",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "C"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 649,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 649,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1688,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 1673,
											"end": 1688,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1697,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1697,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 1665,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 1665,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1762,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1742,
											"end": 1762,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "PUSH",
											"source": 15,
											"value": "8FC"
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "tag",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1779,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 1793,
											"end": 1797,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 1800,
											"end": 1807,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 1779,
											"end": 1808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1779,
											"end": 1808,
											"name": "tag",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 1779,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1818,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 1831,
											"end": 1838,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1840,
											"end": 1844,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 1818,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1818,
											"end": 1845,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 1818,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "PUSH",
											"source": 15,
											"value": "29705A31C393A642035AD5F190E6F0B0B3F0EF43ED68C72CF87AE76BE0E3185B"
										},
										{
											"begin": 1872,
											"end": 1879,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1881,
											"end": 1885,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 1860,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "tag",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 623,
											"end": 643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 623,
											"end": 643,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 623,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2174,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 2197,
											"end": 2210,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 2197,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 2197,
											"end": 2220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "tag",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 389,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 362,
											"end": 389,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 362,
											"end": 389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "tag",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 395,
											"end": 441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 704,
											"end": 727,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "PUSH",
											"source": 15,
											"value": "E"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 727,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 704,
											"end": 727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "tag",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1986,
											"end": 1990,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 1957,
											"end": 1991,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1957,
											"end": 1991,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1957,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 1966,
											"end": 1973,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1957,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 1957,
											"end": 1974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1957,
											"end": 1974,
											"name": "tag",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 1957,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1957,
											"end": 1991,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1957,
											"end": 1991,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1957,
											"end": 1991,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 1949,
											"end": 2022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 1949,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2044,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2055,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2056,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2070,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "PUSH",
											"source": 15,
											"value": "50580F9B480D6D5CEC851393DEB0B48A42783DCA51B04CEC0E1F104D553F516C"
										},
										{
											"begin": 2097,
											"end": 2104,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2116,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 2085,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "tag",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 733,
											"end": 755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "PUSH",
											"source": 15,
											"value": "F"
										},
										{
											"begin": 733,
											"end": 755,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 733,
											"end": 755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "tag",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 826,
											"end": 863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 826,
											"end": 863,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 826,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 869,
											"end": 902,
											"name": "tag",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 869,
											"end": 902,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "PUSH",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 869,
											"end": 902,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 869,
											"end": 902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 698,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 676,
											"end": 698,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 676,
											"end": 698,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 676,
											"end": 698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 793,
											"end": 820,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 793,
											"end": 820,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 793,
											"end": 820,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 793,
											"end": 820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "tag",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2699,
											"end": 2700,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 2685,
											"end": 2695,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 2675,
											"end": 2696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "tag",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2675,
											"end": 2700,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 2667,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "tag",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 2667,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2307,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 2326,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2326,
											"end": 2339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2326,
											"end": 2339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 2326,
											"end": 2339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2307,
											"end": 2339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2307,
											"end": 2339,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2354,
											"end": 2360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2617,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 2349,
											"end": 2617,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2370,
											"end": 2381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2366,
											"end": 2367,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2366,
											"end": 2381,
											"modifierDepth": 1,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 2617,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 2617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 2349,
											"end": 2617,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2402,
											"end": 2416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 2427,
											"end": 2428,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2419,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 2419,
											"end": 2429,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2419,
											"end": 2429,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 2419,
											"end": 2429,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2402,
											"end": 2429,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2402,
											"end": 2429,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2467,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 2457,
											"end": 2463,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2447,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 2447,
											"end": 2464,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2447,
											"end": 2464,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 2447,
											"end": 2464,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2447,
											"end": 2468,
											"modifierDepth": 1,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2443,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2443,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 2443,
											"end": 2607,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2488,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2542,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2511,
											"end": 2528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 2521,
											"end": 2527,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2511,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 2511,
											"end": 2528,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2511,
											"end": 2528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 2511,
											"end": 2528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2502,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2502,
											"end": 2528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 2502,
											"end": 2528,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2502,
											"end": 2528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2502,
											"end": 2528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 2502,
											"end": 2528,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2502,
											"end": 2528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 2502,
											"end": 2528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2502,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 2502,
											"end": 2542,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2502,
											"end": 2542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2502,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 2502,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2502,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 2502,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2488,
											"end": 2542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2488,
											"end": 2542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2568,
											"end": 2574,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2560,
											"end": 2584,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "8FC"
										},
										{
											"begin": 2585,
											"end": 2591,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2592,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2592,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2470,
											"end": 2607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2443,
											"end": 2607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 2443,
											"end": 2607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2388,
											"end": 2617,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2383,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2383,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2383,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2383,
											"end": 2386,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2383,
											"end": 2386,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2383,
											"end": 2386,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2383,
											"end": 2386,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 2617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 2349,
											"end": 2617,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 2617,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 2349,
											"end": 2617,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 2617,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2297,
											"end": 2623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 583,
											"end": 617,
											"name": "tag",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 583,
											"end": 617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 552,
											"end": 577,
											"name": "tag",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 552,
											"end": 577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 552,
											"end": 577,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 552,
											"end": 577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 761,
											"end": 787,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 761,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 908,
											"end": 953,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 908,
											"end": 953,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 908,
											"end": 953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 1175,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1282,
											"end": 1285,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1254,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 1254,
											"end": 1279,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1241,
											"end": 1251,
											"name": "PUSH",
											"source": 15,
											"value": "F"
										},
										{
											"begin": 1241,
											"end": 1251,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 1241,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1241,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 1241,
											"end": 1285,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1241,
											"end": 1285,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1241,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 1241,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1241,
											"end": 1285,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 1241,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 1217,
											"end": 1285,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1217,
											"end": 1285,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1217,
											"end": 1285,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1217,
											"end": 1285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1326,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1326,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "PUSH",
											"source": 15,
											"value": "8FC"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "PUSH",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "PUSH",
											"source": 15,
											"value": "72BE57C44BDCDF29E3BDED0B32580B641D4C7F1E2D1CD7ABA457FE552B351AAF"
										},
										{
											"begin": 1380,
											"end": 1401,
											"name": "PUSH",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 1380,
											"end": 1401,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 1364,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "tag",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1169,
											"name": "tag",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 1047,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1130,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 1143,
											"end": 1150,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1161,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 1130,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1130,
											"end": 1162,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 1130,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1169,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1169,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 10,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "381"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "381"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 13,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 13,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 16
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 16,
											"value": "425"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1718,
											"name": "tag",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 1569,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1605,
											"end": 1612,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1634,
											"end": 1712,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1712,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1712,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1718,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1718,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1718,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1724,
											"end": 1844,
											"name": "tag",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 1724,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 1813,
											"end": 1818,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 1796,
											"end": 1819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "tag",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1786,
											"end": 1820,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1776,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 1776,
											"end": 1838,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1834,
											"end": 1835,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1824,
											"end": 1836,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1776,
											"end": 1838,
											"name": "tag",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 1776,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1724,
											"end": 1844,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1724,
											"end": 1844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1850,
											"end": 1987,
											"name": "tag",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 1850,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1895,
											"end": 1900,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1920,
											"end": 1940,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1949,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1949,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 1949,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1949,
											"end": 1981,
											"name": "tag",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 1949,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1850,
											"end": 1987,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1850,
											"end": 1987,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1850,
											"end": 1987,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1850,
											"end": 1987,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1850,
											"end": 1987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2320,
											"name": "tag",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 1993,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2051,
											"end": 2057,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2102,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2088,
											"end": 2097,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2079,
											"end": 2086,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2071,
											"end": 2103,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2068,
											"end": 2187,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2068,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 2068,
											"end": 2187,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2106,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 2106,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 2106,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2106,
											"end": 2185,
											"name": "tag",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 2106,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2068,
											"end": 2187,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 2068,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2226,
											"end": 2227,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 2295,
											"end": 2302,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2284,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2271,
											"end": 2293,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2251,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 2251,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2251,
											"end": 2303,
											"name": "tag",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 2251,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2241,
											"end": 2303,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2241,
											"end": 2303,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2197,
											"end": 2313,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2320,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2320,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2320,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2320,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2326,
											"end": 2416,
											"name": "tag",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 2326,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2360,
											"end": 2367,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2408,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2396,
											"end": 2409,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2410,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2378,
											"end": 2410,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2378,
											"end": 2410,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2326,
											"end": 2416,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2326,
											"end": 2416,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2326,
											"end": 2416,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2326,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2531,
											"name": "tag",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 2422,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2503,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 2518,
											"end": 2523,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2503,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 2503,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2503,
											"end": 2524,
											"name": "tag",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 2503,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2498,
											"end": 2501,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2491,
											"end": 2525,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2531,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2531,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2537,
											"end": 2747,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 2537,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2624,
											"end": 2628,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2651,
											"end": 2660,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2639,
											"end": 2665,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2639,
											"end": 2665,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2675,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 2737,
											"end": 2738,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2722,
											"end": 2739,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2675,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 2675,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2675,
											"end": 2740,
											"name": "tag",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 2675,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2537,
											"end": 2747,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2537,
											"end": 2747,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2537,
											"end": 2747,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2537,
											"end": 2747,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2537,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4783,
											"end": 4900,
											"name": "tag",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 4783,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4882,
											"end": 4894,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4906,
											"end": 5023,
											"name": "tag",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 4906,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5015,
											"end": 5016,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5013,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5005,
											"end": 5017,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5029,
											"end": 5209,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 5029,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5077,
											"end": 5154,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5074,
											"end": 5075,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5155,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5174,
											"end": 5178,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 5171,
											"end": 5172,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5164,
											"end": 5179,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5195,
											"end": 5196,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5188,
											"end": 5203,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5215,
											"end": 5496,
											"name": "tag",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 5215,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5298,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 5320,
											"end": 5324,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5298,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 5298,
											"end": 5325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5298,
											"end": 5325,
											"name": "tag",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 5298,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5290,
											"end": 5296,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5428,
											"end": 5434,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5416,
											"end": 5426,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5413,
											"end": 5435,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 5392,
											"end": 5410,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5390,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5377,
											"end": 5411,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5374,
											"end": 5436,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 5371,
											"end": 5459,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5371,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 5371,
											"end": 5459,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 5439,
											"end": 5457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "tag",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5371,
											"end": 5459,
											"name": "tag",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 5371,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5479,
											"end": 5489,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5258,
											"end": 5496,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5215,
											"end": 5496,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5215,
											"end": 5496,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5215,
											"end": 5496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5502,
											"end": 5631,
											"name": "tag",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 5502,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5536,
											"end": 5542,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 5563,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "425"
										},
										{
											"begin": 5563,
											"end": 5583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5563,
											"end": 5583,
											"name": "tag",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 5563,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5553,
											"end": 5583,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5553,
											"end": 5583,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5592,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 5620,
											"end": 5624,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5612,
											"end": 5618,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5592,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 5592,
											"end": 5625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5592,
											"end": 5625,
											"name": "tag",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 5592,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5502,
											"end": 5631,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5502,
											"end": 5631,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5502,
											"end": 5631,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5502,
											"end": 5631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5637,
											"end": 5945,
											"name": "tag",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 5637,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5699,
											"end": 5703,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5807,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5781,
											"end": 5787,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5778,
											"end": 5808,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5775,
											"end": 5831,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5775,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 5775,
											"end": 5831,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5811,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 5811,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 5811,
											"end": 5829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5811,
											"end": 5829,
											"name": "tag",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 5811,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5775,
											"end": 5831,
											"name": "tag",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 5775,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5849,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 5871,
											"end": 5877,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5849,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 5849,
											"end": 5878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5849,
											"end": 5878,
											"name": "tag",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 5849,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5841,
											"end": 5878,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5841,
											"end": 5878,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 5931,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5923,
											"end": 5938,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5915,
											"end": 5938,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5915,
											"end": 5938,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5637,
											"end": 5945,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5637,
											"end": 5945,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5637,
											"end": 5945,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5637,
											"end": 5945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5951,
											"end": 6099,
											"name": "tag",
											"source": 16,
											"value": "446"
										},
										{
											"begin": 5951,
											"end": 6099,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6044,
											"end": 6047,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6039,
											"end": 6042,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6026,
											"end": 6056,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 6090,
											"end": 6091,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6087,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6076,
											"end": 6079,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6065,
											"end": 6092,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5951,
											"end": 6099,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5951,
											"end": 6099,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5951,
											"end": 6099,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5951,
											"end": 6099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "tag",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6183,
											"end": 6188,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 6224,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 6266,
											"end": 6272,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6224,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 6224,
											"end": 6273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6224,
											"end": 6273,
											"name": "tag",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 6224,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6208,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 6208,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6208,
											"end": 6274,
											"name": "tag",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 6208,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6199,
											"end": 6274,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6199,
											"end": 6274,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6297,
											"end": 6303,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6290,
											"end": 6295,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6283,
											"end": 6304,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6335,
											"end": 6339,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6328,
											"end": 6333,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6340,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6373,
											"end": 6376,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6364,
											"end": 6370,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6359,
											"end": 6362,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6355,
											"end": 6371,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6352,
											"end": 6377,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6349,
											"end": 6461,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6349,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 6349,
											"end": 6461,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6380,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 6380,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 6380,
											"end": 6459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6380,
											"end": 6459,
											"name": "tag",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 6380,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6349,
											"end": 6461,
											"name": "tag",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 6349,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6470,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 6517,
											"end": 6523,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6512,
											"end": 6515,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6507,
											"end": 6510,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6470,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "446"
										},
										{
											"begin": 6470,
											"end": 6524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6470,
											"end": 6524,
											"name": "tag",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 6470,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6189,
											"end": 6530,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6105,
											"end": 6530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6550,
											"end": 6890,
											"name": "tag",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 6550,
											"end": 6890,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6606,
											"end": 6611,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6658,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6648,
											"end": 6652,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6640,
											"end": 6646,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6636,
											"end": 6653,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6632,
											"end": 6659,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6663,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 6663,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 6663,
											"end": 6742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6663,
											"end": 6742,
											"name": "tag",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 6663,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "tag",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6767,
											"end": 6787,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 6880,
											"end": 6883,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6872,
											"end": 6878,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6865,
											"end": 6869,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6857,
											"end": 6863,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6853,
											"end": 6870,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 6805,
											"end": 6884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "tag",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6796,
											"end": 6884,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6796,
											"end": 6884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6612,
											"end": 6890,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6550,
											"end": 6890,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6550,
											"end": 6890,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6550,
											"end": 6890,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6550,
											"end": 6890,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6550,
											"end": 6890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "tag",
											"source": 16,
											"value": "71"
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6983,
											"end": 6989,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6991,
											"end": 6997,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6999,
											"end": 7005,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7048,
											"end": 7050,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 7036,
											"end": 7045,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7027,
											"end": 7034,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7023,
											"end": 7046,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7051,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 7016,
											"end": 7135,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7016,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 7016,
											"end": 7135,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7054,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 7054,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 7054,
											"end": 7133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7054,
											"end": 7133,
											"name": "tag",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 7054,
											"end": 7133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7016,
											"end": 7135,
											"name": "tag",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 7016,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7202,
											"end": 7203,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7191,
											"end": 7200,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7187,
											"end": 7204,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7174,
											"end": 7205,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7250,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7224,
											"end": 7230,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7221,
											"end": 7251,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7218,
											"end": 7335,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7218,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 7218,
											"end": 7335,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7254,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 7254,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 7254,
											"end": 7333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7254,
											"end": 7333,
											"name": "tag",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 7254,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7218,
											"end": 7335,
											"name": "tag",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 7218,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7359,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 7414,
											"end": 7421,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7394,
											"end": 7403,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 7390,
											"end": 7412,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7359,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 7359,
											"end": 7422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7359,
											"end": 7422,
											"name": "tag",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 7359,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7349,
											"end": 7422,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 7349,
											"end": 7422,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7145,
											"end": 7432,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7471,
											"end": 7473,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7497,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 7542,
											"end": 7549,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7533,
											"end": 7539,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7522,
											"end": 7531,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 7518,
											"end": 7540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7497,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 7497,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7497,
											"end": 7550,
											"name": "tag",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 7497,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7487,
											"end": 7550,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7487,
											"end": 7550,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7442,
											"end": 7560,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7599,
											"end": 7601,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7625,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "565"
										},
										{
											"begin": 7670,
											"end": 7677,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7661,
											"end": 7667,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7650,
											"end": 7659,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 7646,
											"end": 7668,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7625,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 7625,
											"end": 7678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7625,
											"end": 7678,
											"name": "tag",
											"source": 16,
											"value": "565"
										},
										{
											"begin": 7625,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7615,
											"end": 7678,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7615,
											"end": 7678,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7570,
											"end": 7688,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6896,
											"end": 7695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7819,
											"name": "tag",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 7701,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7788,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 7806,
											"end": 7811,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7788,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 7788,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7788,
											"end": 7812,
											"name": "tag",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 7788,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7786,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7776,
											"end": 7813,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7819,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7819,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7825,
											"end": 8047,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 7825,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7918,
											"end": 7922,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7956,
											"end": 7958,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7945,
											"end": 7954,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7933,
											"end": 7959,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7933,
											"end": 7959,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7969,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 8037,
											"end": 8038,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8026,
											"end": 8035,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8022,
											"end": 8039,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8013,
											"end": 8019,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7969,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 7969,
											"end": 8040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7969,
											"end": 8040,
											"name": "tag",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 7969,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7825,
											"end": 8047,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7825,
											"end": 8047,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7825,
											"end": 8047,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7825,
											"end": 8047,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7825,
											"end": 8047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "tag",
											"source": 16,
											"value": "85"
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8130,
											"end": 8136,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8144,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8146,
											"end": 8152,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8195,
											"end": 8197,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 8183,
											"end": 8192,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8174,
											"end": 8181,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8170,
											"end": 8193,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8166,
											"end": 8198,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 8163,
											"end": 8282,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8163,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 8163,
											"end": 8282,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8201,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 8201,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 8201,
											"end": 8280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8201,
											"end": 8280,
											"name": "tag",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 8201,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8163,
											"end": 8282,
											"name": "tag",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 8163,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8321,
											"end": 8322,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8346,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 8391,
											"end": 8398,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8382,
											"end": 8388,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8371,
											"end": 8380,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 8367,
											"end": 8389,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8346,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 8346,
											"end": 8399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8346,
											"end": 8399,
											"name": "tag",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 8346,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8336,
											"end": 8399,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 8336,
											"end": 8399,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8292,
											"end": 8409,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8448,
											"end": 8450,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8474,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 8519,
											"end": 8526,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8510,
											"end": 8516,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8499,
											"end": 8508,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 8495,
											"end": 8517,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8474,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 8474,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8474,
											"end": 8527,
											"name": "tag",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 8474,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8464,
											"end": 8527,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8464,
											"end": 8527,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8419,
											"end": 8537,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8576,
											"end": 8578,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8602,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 8647,
											"end": 8654,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8638,
											"end": 8644,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8627,
											"end": 8636,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 8623,
											"end": 8645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8602,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 8602,
											"end": 8655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8602,
											"end": 8655,
											"name": "tag",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 8602,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8592,
											"end": 8655,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8592,
											"end": 8655,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8547,
											"end": 8665,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8053,
											"end": 8672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8678,
											"end": 9007,
											"name": "tag",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 8678,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8737,
											"end": 8743,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8786,
											"end": 8788,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8774,
											"end": 8783,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8765,
											"end": 8772,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8761,
											"end": 8784,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8757,
											"end": 8789,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 8754,
											"end": 8873,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8754,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 8754,
											"end": 8873,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8792,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 8792,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 8792,
											"end": 8871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8792,
											"end": 8871,
											"name": "tag",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 8792,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8754,
											"end": 8873,
											"name": "tag",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 8754,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8912,
											"end": 8913,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 8982,
											"end": 8989,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8973,
											"end": 8979,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8962,
											"end": 8971,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8958,
											"end": 8980,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8937,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 8937,
											"end": 8990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8937,
											"end": 8990,
											"name": "tag",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 8937,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8927,
											"end": 8990,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8927,
											"end": 8990,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8883,
											"end": 9000,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8678,
											"end": 9007,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8678,
											"end": 9007,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8678,
											"end": 9007,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8678,
											"end": 9007,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8678,
											"end": 9007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9013,
											"end": 9129,
											"name": "tag",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 9013,
											"end": 9129,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9083,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9083,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 9083,
											"end": 9104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9083,
											"end": 9104,
											"name": "tag",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 9083,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9076,
											"end": 9081,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9073,
											"end": 9105,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 9063,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 9063,
											"end": 9123,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9119,
											"end": 9120,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9116,
											"end": 9117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9109,
											"end": 9121,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9063,
											"end": 9123,
											"name": "tag",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 9063,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9013,
											"end": 9129,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9013,
											"end": 9129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9135,
											"end": 9268,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 9135,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9178,
											"end": 9183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9216,
											"end": 9222,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9203,
											"end": 9223,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 9194,
											"end": 9223,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9194,
											"end": 9223,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9232,
											"end": 9262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "584"
										},
										{
											"begin": 9256,
											"end": 9261,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9232,
											"end": 9262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 9232,
											"end": 9262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9232,
											"end": 9262,
											"name": "tag",
											"source": 16,
											"value": "584"
										},
										{
											"begin": 9232,
											"end": 9262,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9135,
											"end": 9268,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9135,
											"end": 9268,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9135,
											"end": 9268,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9135,
											"end": 9268,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9135,
											"end": 9268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9274,
											"end": 9742,
											"name": "tag",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 9274,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9347,
											"end": 9353,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9396,
											"end": 9398,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9384,
											"end": 9393,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9375,
											"end": 9382,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9371,
											"end": 9394,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9367,
											"end": 9399,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9483,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 9364,
											"end": 9483,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9402,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 9402,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 9402,
											"end": 9481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9402,
											"end": 9481,
											"name": "tag",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 9402,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9483,
											"name": "tag",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 9364,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9522,
											"end": 9523,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9547,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 9592,
											"end": 9599,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9583,
											"end": 9589,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9572,
											"end": 9581,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 9568,
											"end": 9590,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9547,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 9547,
											"end": 9600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9547,
											"end": 9600,
											"name": "tag",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 9547,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9537,
											"end": 9600,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9537,
											"end": 9600,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9493,
											"end": 9610,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9649,
											"end": 9651,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9675,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "589"
										},
										{
											"begin": 9717,
											"end": 9724,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9708,
											"end": 9714,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9697,
											"end": 9706,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 9693,
											"end": 9715,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9675,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 9675,
											"end": 9725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9675,
											"end": 9725,
											"name": "tag",
											"source": 16,
											"value": "589"
										},
										{
											"begin": 9675,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9665,
											"end": 9725,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9665,
											"end": 9725,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9620,
											"end": 9735,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9274,
											"end": 9742,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9274,
											"end": 9742,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9274,
											"end": 9742,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9274,
											"end": 9742,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9274,
											"end": 9742,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9274,
											"end": 9742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9748,
											"end": 9852,
											"name": "tag",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 9748,
											"end": 9852,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9793,
											"end": 9800,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9822,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "591"
										},
										{
											"begin": 9840,
											"end": 9845,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9822,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 9822,
											"end": 9846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9822,
											"end": 9846,
											"name": "tag",
											"source": 16,
											"value": "591"
										},
										{
											"begin": 9822,
											"end": 9846,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9811,
											"end": 9846,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9811,
											"end": 9846,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9748,
											"end": 9852,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9748,
											"end": 9852,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9748,
											"end": 9852,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9748,
											"end": 9852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9858,
											"end": 10000,
											"name": "tag",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 9858,
											"end": 10000,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9961,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "593"
										},
										{
											"begin": 9987,
											"end": 9992,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9961,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 9961,
											"end": 9993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9961,
											"end": 9993,
											"name": "tag",
											"source": 16,
											"value": "593"
										},
										{
											"begin": 9961,
											"end": 9993,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9956,
											"end": 9959,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9949,
											"end": 9994,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9858,
											"end": 10000,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9858,
											"end": 10000,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9858,
											"end": 10000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10006,
											"end": 10260,
											"name": "tag",
											"source": 16,
											"value": "156"
										},
										{
											"begin": 10006,
											"end": 10260,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10115,
											"end": 10119,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10155,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10142,
											"end": 10151,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10138,
											"end": 10156,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10130,
											"end": 10156,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10130,
											"end": 10156,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10166,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "595"
										},
										{
											"begin": 10250,
											"end": 10251,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10239,
											"end": 10248,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10235,
											"end": 10252,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10226,
											"end": 10232,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10166,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 10166,
											"end": 10253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10166,
											"end": 10253,
											"name": "tag",
											"source": 16,
											"value": "595"
										},
										{
											"begin": 10166,
											"end": 10253,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10006,
											"end": 10260,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10006,
											"end": 10260,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10006,
											"end": 10260,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10006,
											"end": 10260,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10006,
											"end": 10260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10266,
											"end": 10573,
											"name": "tag",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 10266,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10327,
											"end": 10331,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10409,
											"end": 10415,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10406,
											"end": 10436,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10403,
											"end": 10459,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10403,
											"end": 10459,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "597"
										},
										{
											"begin": 10403,
											"end": 10459,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10439,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "598"
										},
										{
											"begin": 10439,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 10439,
											"end": 10457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10439,
											"end": 10457,
											"name": "tag",
											"source": 16,
											"value": "598"
										},
										{
											"begin": 10439,
											"end": 10457,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10403,
											"end": 10459,
											"name": "tag",
											"source": 16,
											"value": "597"
										},
										{
											"begin": 10403,
											"end": 10459,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "599"
										},
										{
											"begin": 10499,
											"end": 10505,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 10477,
											"end": 10506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "tag",
											"source": 16,
											"value": "599"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10469,
											"end": 10506,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10469,
											"end": 10506,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10561,
											"end": 10565,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10555,
											"end": 10559,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10551,
											"end": 10566,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10543,
											"end": 10566,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10543,
											"end": 10566,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10266,
											"end": 10573,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10266,
											"end": 10573,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10266,
											"end": 10573,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10266,
											"end": 10573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10579,
											"end": 11002,
											"name": "tag",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 10579,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10681,
											"end": 10746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "601"
										},
										{
											"begin": 10697,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "602"
										},
										{
											"begin": 10738,
											"end": 10744,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10697,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 10697,
											"end": 10745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10697,
											"end": 10745,
											"name": "tag",
											"source": 16,
											"value": "602"
										},
										{
											"begin": 10697,
											"end": 10745,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10681,
											"end": 10746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 10681,
											"end": 10746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10681,
											"end": 10746,
											"name": "tag",
											"source": 16,
											"value": "601"
										},
										{
											"begin": 10681,
											"end": 10746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10672,
											"end": 10746,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10672,
											"end": 10746,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10769,
											"end": 10775,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10762,
											"end": 10767,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10755,
											"end": 10776,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10807,
											"end": 10811,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10800,
											"end": 10805,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10796,
											"end": 10812,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10845,
											"end": 10848,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10836,
											"end": 10842,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10831,
											"end": 10834,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10827,
											"end": 10843,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10824,
											"end": 10849,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10821,
											"end": 10933,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10821,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "603"
										},
										{
											"begin": 10821,
											"end": 10933,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10852,
											"end": 10931,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "604"
										},
										{
											"begin": 10852,
											"end": 10931,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 10852,
											"end": 10931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10852,
											"end": 10931,
											"name": "tag",
											"source": 16,
											"value": "604"
										},
										{
											"begin": 10852,
											"end": 10931,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10821,
											"end": 10933,
											"name": "tag",
											"source": 16,
											"value": "603"
										},
										{
											"begin": 10821,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10942,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "605"
										},
										{
											"begin": 10989,
											"end": 10995,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10984,
											"end": 10987,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10979,
											"end": 10982,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10942,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "446"
										},
										{
											"begin": 10942,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10942,
											"end": 10996,
											"name": "tag",
											"source": 16,
											"value": "605"
										},
										{
											"begin": 10942,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10662,
											"end": 11002,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10579,
											"end": 11002,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 10579,
											"end": 11002,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10579,
											"end": 11002,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10579,
											"end": 11002,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10579,
											"end": 11002,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10579,
											"end": 11002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11021,
											"end": 11359,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 11021,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11076,
											"end": 11081,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11125,
											"end": 11128,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11118,
											"end": 11122,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 11110,
											"end": 11116,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11106,
											"end": 11123,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11102,
											"end": 11129,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11092,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "607"
										},
										{
											"begin": 11092,
											"end": 11214,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11133,
											"end": 11212,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "608"
										},
										{
											"begin": 11133,
											"end": 11212,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 11133,
											"end": 11212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11133,
											"end": 11212,
											"name": "tag",
											"source": 16,
											"value": "608"
										},
										{
											"begin": 11133,
											"end": 11212,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11092,
											"end": 11214,
											"name": "tag",
											"source": 16,
											"value": "607"
										},
										{
											"begin": 11092,
											"end": 11214,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11250,
											"end": 11256,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11237,
											"end": 11257,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 11275,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "609"
										},
										{
											"begin": 11349,
											"end": 11352,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11341,
											"end": 11347,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11334,
											"end": 11338,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11326,
											"end": 11332,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11322,
											"end": 11339,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11275,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 11275,
											"end": 11353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11275,
											"end": 11353,
											"name": "tag",
											"source": 16,
											"value": "609"
										},
										{
											"begin": 11275,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11266,
											"end": 11353,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11266,
											"end": 11353,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11082,
											"end": 11359,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11021,
											"end": 11359,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11021,
											"end": 11359,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11021,
											"end": 11359,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11021,
											"end": 11359,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11021,
											"end": 11359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11365,
											"end": 12308,
											"name": "tag",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 11365,
											"end": 12308,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11460,
											"end": 11466,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11468,
											"end": 11474,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11476,
											"end": 11482,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11484,
											"end": 11490,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11533,
											"end": 11536,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 11521,
											"end": 11530,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11512,
											"end": 11519,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 11508,
											"end": 11531,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11504,
											"end": 11537,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11501,
											"end": 11621,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11501,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "611"
										},
										{
											"begin": 11501,
											"end": 11621,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11540,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "612"
										},
										{
											"begin": 11540,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 11540,
											"end": 11619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11540,
											"end": 11619,
											"name": "tag",
											"source": 16,
											"value": "612"
										},
										{
											"begin": 11540,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11501,
											"end": 11621,
											"name": "tag",
											"source": 16,
											"value": "611"
										},
										{
											"begin": 11501,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11660,
											"end": 11661,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11685,
											"end": 11738,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "613"
										},
										{
											"begin": 11730,
											"end": 11737,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 11721,
											"end": 11727,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11710,
											"end": 11719,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 11706,
											"end": 11728,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11685,
											"end": 11738,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 11685,
											"end": 11738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11685,
											"end": 11738,
											"name": "tag",
											"source": 16,
											"value": "613"
										},
										{
											"begin": 11685,
											"end": 11738,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11675,
											"end": 11738,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 11675,
											"end": 11738,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11631,
											"end": 11748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11787,
											"end": 11789,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11813,
											"end": 11866,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "614"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 11849,
											"end": 11855,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11838,
											"end": 11847,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 11834,
											"end": 11856,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11813,
											"end": 11866,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 11813,
											"end": 11866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11813,
											"end": 11866,
											"name": "tag",
											"source": 16,
											"value": "614"
										},
										{
											"begin": 11813,
											"end": 11866,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11803,
											"end": 11866,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 11803,
											"end": 11866,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11758,
											"end": 11876,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11915,
											"end": 11917,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 11941,
											"end": 11994,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "615"
										},
										{
											"begin": 11986,
											"end": 11993,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 11977,
											"end": 11983,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11966,
											"end": 11975,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 11962,
											"end": 11984,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11941,
											"end": 11994,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 11941,
											"end": 11994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11941,
											"end": 11994,
											"name": "tag",
											"source": 16,
											"value": "615"
										},
										{
											"begin": 11941,
											"end": 11994,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11931,
											"end": 11994,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11931,
											"end": 11994,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11886,
											"end": 12004,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12071,
											"end": 12073,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 12060,
											"end": 12069,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12056,
											"end": 12074,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12043,
											"end": 12075,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 12102,
											"end": 12120,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12094,
											"end": 12100,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 12088,
											"end": 12205,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12088,
											"end": 12205,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "616"
										},
										{
											"begin": 12088,
											"end": 12205,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12124,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "617"
										},
										{
											"begin": 12124,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 12124,
											"end": 12203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12124,
											"end": 12203,
											"name": "tag",
											"source": 16,
											"value": "617"
										},
										{
											"begin": 12124,
											"end": 12203,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12088,
											"end": 12205,
											"name": "tag",
											"source": 16,
											"value": "616"
										},
										{
											"begin": 12088,
											"end": 12205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12229,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "618"
										},
										{
											"begin": 12283,
											"end": 12290,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 12274,
											"end": 12280,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12263,
											"end": 12272,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 12259,
											"end": 12281,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12229,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 12229,
											"end": 12291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12229,
											"end": 12291,
											"name": "tag",
											"source": 16,
											"value": "618"
										},
										{
											"begin": 12229,
											"end": 12291,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12219,
											"end": 12291,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12219,
											"end": 12291,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12014,
											"end": 12301,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11365,
											"end": 12308,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11365,
											"end": 12308,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 11365,
											"end": 12308,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11365,
											"end": 12308,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 11365,
											"end": 12308,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11365,
											"end": 12308,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11365,
											"end": 12308,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11365,
											"end": 12308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12314,
											"end": 12788,
											"name": "tag",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 12314,
											"end": 12788,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12382,
											"end": 12388,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12390,
											"end": 12396,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12427,
											"end": 12436,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12418,
											"end": 12425,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12437,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12410,
											"end": 12442,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 12407,
											"end": 12526,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12407,
											"end": 12526,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "620"
										},
										{
											"begin": 12407,
											"end": 12526,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12445,
											"end": 12524,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "621"
										},
										{
											"begin": 12445,
											"end": 12524,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 12445,
											"end": 12524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12445,
											"end": 12524,
											"name": "tag",
											"source": 16,
											"value": "621"
										},
										{
											"begin": 12445,
											"end": 12524,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12407,
											"end": 12526,
											"name": "tag",
											"source": 16,
											"value": "620"
										},
										{
											"begin": 12407,
											"end": 12526,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12565,
											"end": 12566,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12590,
											"end": 12643,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "622"
										},
										{
											"begin": 12635,
											"end": 12642,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12626,
											"end": 12632,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12615,
											"end": 12624,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12633,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12590,
											"end": 12643,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 12590,
											"end": 12643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12590,
											"end": 12643,
											"name": "tag",
											"source": 16,
											"value": "622"
										},
										{
											"begin": 12590,
											"end": 12643,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12580,
											"end": 12643,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12580,
											"end": 12643,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12536,
											"end": 12653,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12694,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12718,
											"end": 12771,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "623"
										},
										{
											"begin": 12763,
											"end": 12770,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12754,
											"end": 12760,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12743,
											"end": 12752,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12739,
											"end": 12761,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12718,
											"end": 12771,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 12718,
											"end": 12771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12718,
											"end": 12771,
											"name": "tag",
											"source": 16,
											"value": "623"
										},
										{
											"begin": 12718,
											"end": 12771,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12708,
											"end": 12771,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12708,
											"end": 12771,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12663,
											"end": 12781,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12314,
											"end": 12788,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12314,
											"end": 12788,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12314,
											"end": 12788,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12314,
											"end": 12788,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12314,
											"end": 12788,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12314,
											"end": 12788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12794,
											"end": 12974,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 12794,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12842,
											"end": 12919,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12839,
											"end": 12840,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12832,
											"end": 12920,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12939,
											"end": 12943,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 12936,
											"end": 12937,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12929,
											"end": 12944,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12963,
											"end": 12967,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 12960,
											"end": 12961,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12953,
											"end": 12968,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 12980,
											"end": 13300,
											"name": "tag",
											"source": 16,
											"value": "189"
										},
										{
											"begin": 12980,
											"end": 13300,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13024,
											"end": 13030,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13061,
											"end": 13062,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 13055,
											"end": 13059,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13063,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 13041,
											"end": 13063,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13041,
											"end": 13063,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13108,
											"end": 13109,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13102,
											"end": 13106,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13098,
											"end": 13110,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 13129,
											"end": 13147,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13119,
											"end": 13200,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "626"
										},
										{
											"begin": 13119,
											"end": 13200,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13185,
											"end": 13189,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 13177,
											"end": 13183,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13173,
											"end": 13190,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 13163,
											"end": 13190,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13163,
											"end": 13190,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13119,
											"end": 13200,
											"name": "tag",
											"source": 16,
											"value": "626"
										},
										{
											"begin": 13119,
											"end": 13200,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13247,
											"end": 13249,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13239,
											"end": 13245,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13236,
											"end": 13250,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13216,
											"end": 13234,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13213,
											"end": 13251,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13210,
											"end": 13294,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "627"
										},
										{
											"begin": 13210,
											"end": 13294,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "628"
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 13266,
											"end": 13284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "tag",
											"source": 16,
											"value": "628"
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13210,
											"end": 13294,
											"name": "tag",
											"source": 16,
											"value": "627"
										},
										{
											"begin": 13210,
											"end": 13294,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13031,
											"end": 13300,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12980,
											"end": 13300,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12980,
											"end": 13300,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12980,
											"end": 13300,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12980,
											"end": 13300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13306,
											"end": 13486,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 13306,
											"end": 13486,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13446,
											"end": 13478,
											"name": "PUSH",
											"source": 16,
											"value": "496E73756666696369656E742066756E647320696E2074726561737572790000"
										},
										{
											"begin": 13442,
											"end": 13443,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13434,
											"end": 13440,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13430,
											"end": 13444,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13423,
											"end": 13479,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13306,
											"end": 13486,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13306,
											"end": 13486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13492,
											"end": 13858,
											"name": "tag",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 13492,
											"end": 13858,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13634,
											"end": 13637,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13655,
											"end": 13722,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "631"
										},
										{
											"begin": 13719,
											"end": 13721,
											"name": "PUSH",
											"source": 16,
											"value": "1E"
										},
										{
											"begin": 13714,
											"end": 13717,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13655,
											"end": 13722,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 13655,
											"end": 13722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13655,
											"end": 13722,
											"name": "tag",
											"source": 16,
											"value": "631"
										},
										{
											"begin": 13655,
											"end": 13722,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13648,
											"end": 13722,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13648,
											"end": 13722,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13731,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "632"
										},
										{
											"begin": 13820,
											"end": 13823,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13731,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 13731,
											"end": 13824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13731,
											"end": 13824,
											"name": "tag",
											"source": 16,
											"value": "632"
										},
										{
											"begin": 13731,
											"end": 13824,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13849,
											"end": 13851,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13844,
											"end": 13847,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13833,
											"end": 13852,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13833,
											"end": 13852,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13492,
											"end": 13858,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13492,
											"end": 13858,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13492,
											"end": 13858,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13492,
											"end": 13858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13864,
											"end": 14283,
											"name": "tag",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 13864,
											"end": 14283,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14030,
											"end": 14034,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14068,
											"end": 14070,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14057,
											"end": 14066,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14053,
											"end": 14071,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14045,
											"end": 14071,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14045,
											"end": 14071,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14117,
											"end": 14126,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14111,
											"end": 14115,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14107,
											"end": 14127,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 14103,
											"end": 14104,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14092,
											"end": 14101,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14088,
											"end": 14105,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14081,
											"end": 14128,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14145,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "634"
										},
										{
											"begin": 14271,
											"end": 14275,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14145,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 14145,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14145,
											"end": 14276,
											"name": "tag",
											"source": 16,
											"value": "634"
										},
										{
											"begin": 14145,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14137,
											"end": 14276,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14137,
											"end": 14276,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13864,
											"end": 14283,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13864,
											"end": 14283,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13864,
											"end": 14283,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13864,
											"end": 14283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14289,
											"end": 14712,
											"name": "tag",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 14289,
											"end": 14712,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14430,
											"end": 14434,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14468,
											"end": 14470,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 14457,
											"end": 14466,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14453,
											"end": 14471,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14445,
											"end": 14471,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14445,
											"end": 14471,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14481,
											"end": 14552,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "636"
										},
										{
											"begin": 14549,
											"end": 14550,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14538,
											"end": 14547,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14534,
											"end": 14551,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14525,
											"end": 14531,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14481,
											"end": 14552,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 14481,
											"end": 14552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14481,
											"end": 14552,
											"name": "tag",
											"source": 16,
											"value": "636"
										},
										{
											"begin": 14481,
											"end": 14552,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14599,
											"end": 14608,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14593,
											"end": 14597,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14589,
											"end": 14609,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 14584,
											"end": 14586,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14573,
											"end": 14582,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14569,
											"end": 14587,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14562,
											"end": 14610,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14627,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "637"
										},
										{
											"begin": 14700,
											"end": 14704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14691,
											"end": 14697,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14627,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 14627,
											"end": 14705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14627,
											"end": 14705,
											"name": "tag",
											"source": 16,
											"value": "637"
										},
										{
											"begin": 14627,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14619,
											"end": 14705,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14619,
											"end": 14705,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14289,
											"end": 14712,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 14289,
											"end": 14712,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14289,
											"end": 14712,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14289,
											"end": 14712,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14289,
											"end": 14712,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14289,
											"end": 14712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 15160,
											"name": "tag",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 14718,
											"end": 15160,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14867,
											"end": 14871,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14905,
											"end": 14907,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 14894,
											"end": 14903,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14890,
											"end": 14908,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14882,
											"end": 14908,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14882,
											"end": 14908,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14918,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "639"
										},
										{
											"begin": 14986,
											"end": 14987,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14975,
											"end": 14984,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14971,
											"end": 14988,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14962,
											"end": 14968,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 14918,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 14918,
											"end": 14989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14918,
											"end": 14989,
											"name": "tag",
											"source": 16,
											"value": "639"
										},
										{
											"begin": 14918,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14999,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "640"
										},
										{
											"begin": 15067,
											"end": 15069,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15056,
											"end": 15065,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15052,
											"end": 15070,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15043,
											"end": 15049,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14999,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 14999,
											"end": 15071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14999,
											"end": 15071,
											"name": "tag",
											"source": 16,
											"value": "640"
										},
										{
											"begin": 14999,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15081,
											"end": 15153,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "641"
										},
										{
											"begin": 15149,
											"end": 15151,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 15138,
											"end": 15147,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15134,
											"end": 15152,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15125,
											"end": 15131,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15081,
											"end": 15153,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 15081,
											"end": 15153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15081,
											"end": 15153,
											"name": "tag",
											"source": 16,
											"value": "641"
										},
										{
											"begin": 15081,
											"end": 15153,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 15160,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 15160,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 15160,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 15160,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 15160,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 15160,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 15160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15166,
											"end": 15342,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 15166,
											"end": 15342,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15306,
											"end": 15334,
											"name": "PUSH",
											"source": 16,
											"value": "4E4654206E6F74206F776E656420627920746865206775696C64000000000000"
										},
										{
											"begin": 15302,
											"end": 15303,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15294,
											"end": 15300,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15290,
											"end": 15304,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15283,
											"end": 15335,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15166,
											"end": 15342,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15166,
											"end": 15342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15348,
											"end": 15714,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 15348,
											"end": 15714,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15490,
											"end": 15493,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15511,
											"end": 15578,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "644"
										},
										{
											"begin": 15575,
											"end": 15577,
											"name": "PUSH",
											"source": 16,
											"value": "1A"
										},
										{
											"begin": 15570,
											"end": 15573,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15511,
											"end": 15578,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 15511,
											"end": 15578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15511,
											"end": 15578,
											"name": "tag",
											"source": 16,
											"value": "644"
										},
										{
											"begin": 15511,
											"end": 15578,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15504,
											"end": 15578,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15504,
											"end": 15578,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15587,
											"end": 15680,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "645"
										},
										{
											"begin": 15676,
											"end": 15679,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15587,
											"end": 15680,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 15587,
											"end": 15680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15587,
											"end": 15680,
											"name": "tag",
											"source": 16,
											"value": "645"
										},
										{
											"begin": 15587,
											"end": 15680,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15705,
											"end": 15707,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15700,
											"end": 15703,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15696,
											"end": 15708,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15689,
											"end": 15708,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15689,
											"end": 15708,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15348,
											"end": 15714,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15348,
											"end": 15714,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15348,
											"end": 15714,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15348,
											"end": 15714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15720,
											"end": 16139,
											"name": "tag",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 15720,
											"end": 16139,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15886,
											"end": 15890,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15924,
											"end": 15926,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15913,
											"end": 15922,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15909,
											"end": 15927,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15901,
											"end": 15927,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15901,
											"end": 15927,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15973,
											"end": 15982,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15967,
											"end": 15971,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15963,
											"end": 15983,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 15959,
											"end": 15960,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15944,
											"end": 15961,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15937,
											"end": 15984,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16001,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "647"
										},
										{
											"begin": 16127,
											"end": 16131,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16001,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 16001,
											"end": 16132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16001,
											"end": 16132,
											"name": "tag",
											"source": 16,
											"value": "647"
										},
										{
											"begin": 16001,
											"end": 16132,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15993,
											"end": 16132,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15993,
											"end": 16132,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15720,
											"end": 16139,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15720,
											"end": 16139,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15720,
											"end": 16139,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15720,
											"end": 16139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16145,
											"end": 16477,
											"name": "tag",
											"source": 16,
											"value": "251"
										},
										{
											"begin": 16145,
											"end": 16477,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16266,
											"end": 16270,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16304,
											"end": 16306,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 16293,
											"end": 16302,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16289,
											"end": 16307,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16281,
											"end": 16307,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16281,
											"end": 16307,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "649"
										},
										{
											"begin": 16385,
											"end": 16386,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16374,
											"end": 16383,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16370,
											"end": 16387,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16361,
											"end": 16367,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 16317,
											"end": 16388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "tag",
											"source": 16,
											"value": "649"
										},
										{
											"begin": 16317,
											"end": 16388,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16398,
											"end": 16470,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "650"
										},
										{
											"begin": 16466,
											"end": 16468,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16455,
											"end": 16464,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16451,
											"end": 16469,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16442,
											"end": 16448,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16398,
											"end": 16470,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 16398,
											"end": 16470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16398,
											"end": 16470,
											"name": "tag",
											"source": 16,
											"value": "650"
										},
										{
											"begin": 16398,
											"end": 16470,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16145,
											"end": 16477,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 16145,
											"end": 16477,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16145,
											"end": 16477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16145,
											"end": 16477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16145,
											"end": 16477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16145,
											"end": 16477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16483,
											"end": 16712,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 16483,
											"end": 16712,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16623,
											"end": 16657,
											"name": "PUSH",
											"source": 16,
											"value": "4F6E6C79206775696C64206D656D626572732063616E20706572666F726D2074"
										},
										{
											"begin": 16619,
											"end": 16620,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16611,
											"end": 16617,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16607,
											"end": 16621,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16600,
											"end": 16658,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16692,
											"end": 16704,
											"name": "PUSH",
											"source": 16,
											"value": "68697320616374696F6E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 16687,
											"end": 16689,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16679,
											"end": 16685,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16675,
											"end": 16690,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16668,
											"end": 16705,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16483,
											"end": 16712,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16483,
											"end": 16712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16718,
											"end": 17084,
											"name": "tag",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 16718,
											"end": 17084,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16860,
											"end": 16863,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16881,
											"end": 16948,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "653"
										},
										{
											"begin": 16945,
											"end": 16947,
											"name": "PUSH",
											"source": 16,
											"value": "2A"
										},
										{
											"begin": 16940,
											"end": 16943,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16881,
											"end": 16948,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 16881,
											"end": 16948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16881,
											"end": 16948,
											"name": "tag",
											"source": 16,
											"value": "653"
										},
										{
											"begin": 16881,
											"end": 16948,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16874,
											"end": 16948,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16874,
											"end": 16948,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16957,
											"end": 17050,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "654"
										},
										{
											"begin": 17046,
											"end": 17049,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16957,
											"end": 17050,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 16957,
											"end": 17050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16957,
											"end": 17050,
											"name": "tag",
											"source": 16,
											"value": "654"
										},
										{
											"begin": 16957,
											"end": 17050,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17075,
											"end": 17077,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 17070,
											"end": 17073,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17066,
											"end": 17078,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17059,
											"end": 17078,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17059,
											"end": 17078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16718,
											"end": 17084,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16718,
											"end": 17084,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16718,
											"end": 17084,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16718,
											"end": 17084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17090,
											"end": 17509,
											"name": "tag",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 17090,
											"end": 17509,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17256,
											"end": 17260,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 17283,
											"end": 17292,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17271,
											"end": 17297,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17271,
											"end": 17297,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17343,
											"end": 17352,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17337,
											"end": 17341,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17333,
											"end": 17353,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 17329,
											"end": 17330,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17318,
											"end": 17327,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17314,
											"end": 17331,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17307,
											"end": 17354,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 17371,
											"end": 17502,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "656"
										},
										{
											"begin": 17497,
											"end": 17501,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17371,
											"end": 17502,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 17371,
											"end": 17502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17371,
											"end": 17502,
											"name": "tag",
											"source": 16,
											"value": "656"
										},
										{
											"begin": 17371,
											"end": 17502,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17363,
											"end": 17502,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17363,
											"end": 17502,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17090,
											"end": 17509,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17090,
											"end": 17509,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17090,
											"end": 17509,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17090,
											"end": 17509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17515,
											"end": 17695,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 17515,
											"end": 17695,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17563,
											"end": 17640,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17560,
											"end": 17561,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17553,
											"end": 17641,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 17660,
											"end": 17664,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 17657,
											"end": 17658,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 17650,
											"end": 17665,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 17684,
											"end": 17688,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 17681,
											"end": 17682,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17674,
											"end": 17689,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 17701,
											"end": 18111,
											"name": "tag",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 17701,
											"end": 18111,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17741,
											"end": 17748,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17764,
											"end": 17784,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "659"
										},
										{
											"begin": 17782,
											"end": 17783,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17764,
											"end": 17784,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 17764,
											"end": 17784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17764,
											"end": 17784,
											"name": "tag",
											"source": 16,
											"value": "659"
										},
										{
											"begin": 17764,
											"end": 17784,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17759,
											"end": 17784,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17759,
											"end": 17784,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17798,
											"end": 17818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "660"
										},
										{
											"begin": 17816,
											"end": 17817,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17798,
											"end": 17818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 17798,
											"end": 17818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17798,
											"end": 17818,
											"name": "tag",
											"source": 16,
											"value": "660"
										},
										{
											"begin": 17798,
											"end": 17818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17793,
											"end": 17818,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17793,
											"end": 17818,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17853,
											"end": 17854,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17850,
											"end": 17851,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17846,
											"end": 17855,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 17875,
											"end": 17905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "661"
										},
										{
											"begin": 17893,
											"end": 17904,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17875,
											"end": 17905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 17875,
											"end": 17905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17875,
											"end": 17905,
											"name": "tag",
											"source": 16,
											"value": "661"
										},
										{
											"begin": 17875,
											"end": 17905,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17864,
											"end": 17905,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17864,
											"end": 17905,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18054,
											"end": 18055,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18045,
											"end": 18052,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18041,
											"end": 18056,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 18038,
											"end": 18039,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18035,
											"end": 18057,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 18015,
											"end": 18016,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18008,
											"end": 18017,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 17988,
											"end": 18071,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 17965,
											"end": 18104,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "662"
										},
										{
											"begin": 17965,
											"end": 18104,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18084,
											"end": 18102,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "663"
										},
										{
											"begin": 18084,
											"end": 18102,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 18084,
											"end": 18102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18084,
											"end": 18102,
											"name": "tag",
											"source": 16,
											"value": "663"
										},
										{
											"begin": 18084,
											"end": 18102,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17965,
											"end": 18104,
											"name": "tag",
											"source": 16,
											"value": "662"
										},
										{
											"begin": 17965,
											"end": 18104,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17749,
											"end": 18111,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17701,
											"end": 18111,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17701,
											"end": 18111,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17701,
											"end": 18111,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17701,
											"end": 18111,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17701,
											"end": 18111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18117,
											"end": 18297,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 18117,
											"end": 18297,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18165,
											"end": 18242,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18162,
											"end": 18163,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18155,
											"end": 18243,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 18262,
											"end": 18266,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 18259,
											"end": 18260,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 18252,
											"end": 18267,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 18286,
											"end": 18290,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 18283,
											"end": 18284,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18276,
											"end": 18291,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 18303,
											"end": 18488,
											"name": "tag",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 18303,
											"end": 18488,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18343,
											"end": 18344,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18360,
											"end": 18380,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "666"
										},
										{
											"begin": 18378,
											"end": 18379,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18360,
											"end": 18380,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 18360,
											"end": 18380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18360,
											"end": 18380,
											"name": "tag",
											"source": 16,
											"value": "666"
										},
										{
											"begin": 18360,
											"end": 18380,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18355,
											"end": 18380,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18355,
											"end": 18380,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18394,
											"end": 18414,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "667"
										},
										{
											"begin": 18412,
											"end": 18413,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18394,
											"end": 18414,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 18394,
											"end": 18414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18394,
											"end": 18414,
											"name": "tag",
											"source": 16,
											"value": "667"
										},
										{
											"begin": 18394,
											"end": 18414,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18389,
											"end": 18414,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18389,
											"end": 18414,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18433,
											"end": 18434,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18423,
											"end": 18458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "668"
										},
										{
											"begin": 18423,
											"end": 18458,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18438,
											"end": 18456,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "669"
										},
										{
											"begin": 18438,
											"end": 18456,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 18438,
											"end": 18456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18438,
											"end": 18456,
											"name": "tag",
											"source": 16,
											"value": "669"
										},
										{
											"begin": 18438,
											"end": 18456,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18423,
											"end": 18458,
											"name": "tag",
											"source": 16,
											"value": "668"
										},
										{
											"begin": 18423,
											"end": 18458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18480,
											"end": 18481,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18477,
											"end": 18478,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18473,
											"end": 18482,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 18468,
											"end": 18482,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18468,
											"end": 18482,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18303,
											"end": 18488,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18303,
											"end": 18488,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18303,
											"end": 18488,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18303,
											"end": 18488,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18303,
											"end": 18488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18642,
											"name": "tag",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 18494,
											"end": 18642,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18596,
											"end": 18607,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18633,
											"end": 18636,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18618,
											"end": 18636,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18618,
											"end": 18636,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18642,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18642,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18642,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18642,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18648,
											"end": 19038,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 18648,
											"end": 19038,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18754,
											"end": 18757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18782,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "672"
										},
										{
											"begin": 18815,
											"end": 18820,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18782,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 18782,
											"end": 18821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18782,
											"end": 18821,
											"name": "tag",
											"source": 16,
											"value": "672"
										},
										{
											"begin": 18782,
											"end": 18821,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18837,
											"end": 18926,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "673"
										},
										{
											"begin": 18919,
											"end": 18925,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18914,
											"end": 18917,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18837,
											"end": 18926,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 18837,
											"end": 18926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18837,
											"end": 18926,
											"name": "tag",
											"source": 16,
											"value": "673"
										},
										{
											"begin": 18837,
											"end": 18926,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18830,
											"end": 18926,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 18830,
											"end": 18926,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18935,
											"end": 19000,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "674"
										},
										{
											"begin": 18993,
											"end": 18999,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18988,
											"end": 18991,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18981,
											"end": 18985,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18974,
											"end": 18979,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 18970,
											"end": 18986,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18935,
											"end": 19000,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 18935,
											"end": 19000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18935,
											"end": 19000,
											"name": "tag",
											"source": 16,
											"value": "674"
										},
										{
											"begin": 18935,
											"end": 19000,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19025,
											"end": 19031,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 19020,
											"end": 19023,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19016,
											"end": 19032,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19009,
											"end": 19032,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19009,
											"end": 19032,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18758,
											"end": 19038,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18648,
											"end": 19038,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18648,
											"end": 19038,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18648,
											"end": 19038,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18648,
											"end": 19038,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18648,
											"end": 19038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19044,
											"end": 19479,
											"name": "tag",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 19044,
											"end": 19479,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19224,
											"end": 19227,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19246,
											"end": 19341,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "676"
										},
										{
											"begin": 19337,
											"end": 19340,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19328,
											"end": 19334,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19246,
											"end": 19341,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 19246,
											"end": 19341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19246,
											"end": 19341,
											"name": "tag",
											"source": 16,
											"value": "676"
										},
										{
											"begin": 19246,
											"end": 19341,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19239,
											"end": 19341,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19239,
											"end": 19341,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19358,
											"end": 19453,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "677"
										},
										{
											"begin": 19449,
											"end": 19452,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19440,
											"end": 19446,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19358,
											"end": 19453,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 19358,
											"end": 19453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19358,
											"end": 19453,
											"name": "tag",
											"source": 16,
											"value": "677"
										},
										{
											"begin": 19358,
											"end": 19453,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19351,
											"end": 19453,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19351,
											"end": 19453,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19470,
											"end": 19473,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19463,
											"end": 19473,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19463,
											"end": 19473,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19044,
											"end": 19479,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 19044,
											"end": 19479,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19044,
											"end": 19479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19044,
											"end": 19479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19044,
											"end": 19479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19044,
											"end": 19479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19485,
											"end": 19545,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 19485,
											"end": 19545,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19513,
											"end": 19516,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19534,
											"end": 19539,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19527,
											"end": 19539,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19527,
											"end": 19539,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19485,
											"end": 19545,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19485,
											"end": 19545,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19485,
											"end": 19545,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19485,
											"end": 19545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19551,
											"end": 19693,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 19551,
											"end": 19693,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19601,
											"end": 19610,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19634,
											"end": 19687,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "680"
										},
										{
											"begin": 19652,
											"end": 19686,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "681"
										},
										{
											"begin": 19661,
											"end": 19685,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "682"
										},
										{
											"begin": 19679,
											"end": 19684,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19661,
											"end": 19685,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 19661,
											"end": 19685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19661,
											"end": 19685,
											"name": "tag",
											"source": 16,
											"value": "682"
										},
										{
											"begin": 19661,
											"end": 19685,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19652,
											"end": 19686,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 19652,
											"end": 19686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19652,
											"end": 19686,
											"name": "tag",
											"source": 16,
											"value": "681"
										},
										{
											"begin": 19652,
											"end": 19686,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19634,
											"end": 19687,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 19634,
											"end": 19687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19634,
											"end": 19687,
											"name": "tag",
											"source": 16,
											"value": "680"
										},
										{
											"begin": 19634,
											"end": 19687,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19621,
											"end": 19687,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19621,
											"end": 19687,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19551,
											"end": 19693,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19551,
											"end": 19693,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19551,
											"end": 19693,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19551,
											"end": 19693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19699,
											"end": 19825,
											"name": "tag",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 19699,
											"end": 19825,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19749,
											"end": 19758,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19782,
											"end": 19819,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "684"
										},
										{
											"begin": 19813,
											"end": 19818,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19782,
											"end": 19819,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 19782,
											"end": 19819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19782,
											"end": 19819,
											"name": "tag",
											"source": 16,
											"value": "684"
										},
										{
											"begin": 19782,
											"end": 19819,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19769,
											"end": 19819,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19769,
											"end": 19819,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19699,
											"end": 19825,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19699,
											"end": 19825,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19699,
											"end": 19825,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19699,
											"end": 19825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19831,
											"end": 19965,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 19831,
											"end": 19965,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19889,
											"end": 19898,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19922,
											"end": 19959,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "686"
										},
										{
											"begin": 19953,
											"end": 19958,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19922,
											"end": 19959,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 19922,
											"end": 19959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19922,
											"end": 19959,
											"name": "tag",
											"source": 16,
											"value": "686"
										},
										{
											"begin": 19922,
											"end": 19959,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19909,
											"end": 19959,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19909,
											"end": 19959,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19831,
											"end": 19965,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19831,
											"end": 19965,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19831,
											"end": 19965,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19831,
											"end": 19965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19971,
											"end": 20118,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 19971,
											"end": 20118,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20066,
											"end": 20111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "688"
										},
										{
											"begin": 20105,
											"end": 20110,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20066,
											"end": 20111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 20066,
											"end": 20111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20066,
											"end": 20111,
											"name": "tag",
											"source": 16,
											"value": "688"
										},
										{
											"begin": 20066,
											"end": 20111,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20061,
											"end": 20064,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20054,
											"end": 20112,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 19971,
											"end": 20118,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19971,
											"end": 20118,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19971,
											"end": 20118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20124,
											"end": 20472,
											"name": "tag",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 20124,
											"end": 20472,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20253,
											"end": 20257,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20291,
											"end": 20293,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 20280,
											"end": 20289,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20276,
											"end": 20294,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20268,
											"end": 20294,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20268,
											"end": 20294,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20304,
											"end": 20375,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "690"
										},
										{
											"begin": 20372,
											"end": 20373,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20361,
											"end": 20370,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20357,
											"end": 20374,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20348,
											"end": 20354,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20304,
											"end": 20375,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 20304,
											"end": 20375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20304,
											"end": 20375,
											"name": "tag",
											"source": 16,
											"value": "690"
										},
										{
											"begin": 20304,
											"end": 20375,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20385,
											"end": 20465,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "691"
										},
										{
											"begin": 20461,
											"end": 20463,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20450,
											"end": 20459,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20446,
											"end": 20464,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20437,
											"end": 20443,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20385,
											"end": 20465,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 20385,
											"end": 20465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20385,
											"end": 20465,
											"name": "tag",
											"source": 16,
											"value": "691"
										},
										{
											"begin": 20385,
											"end": 20465,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20124,
											"end": 20472,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 20124,
											"end": 20472,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20124,
											"end": 20472,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20124,
											"end": 20472,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20124,
											"end": 20472,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20124,
											"end": 20472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20478,
											"end": 20576,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 20478,
											"end": 20576,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20529,
											"end": 20535,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20563,
											"end": 20568,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20557,
											"end": 20569,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20547,
											"end": 20569,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20547,
											"end": 20569,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20478,
											"end": 20576,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20478,
											"end": 20576,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20478,
											"end": 20576,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20478,
											"end": 20576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20582,
											"end": 20750,
											"name": "tag",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 20582,
											"end": 20750,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20665,
											"end": 20676,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20699,
											"end": 20705,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20694,
											"end": 20697,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20687,
											"end": 20706,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20739,
											"end": 20743,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20734,
											"end": 20737,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20730,
											"end": 20744,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20715,
											"end": 20744,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20715,
											"end": 20744,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20582,
											"end": 20750,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20582,
											"end": 20750,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20582,
											"end": 20750,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20582,
											"end": 20750,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20582,
											"end": 20750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20756,
											"end": 21129,
											"name": "tag",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 20756,
											"end": 21129,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20842,
											"end": 20845,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20870,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "695"
										},
										{
											"begin": 20902,
											"end": 20907,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20870,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 20870,
											"end": 20908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20870,
											"end": 20908,
											"name": "tag",
											"source": 16,
											"value": "695"
										},
										{
											"begin": 20870,
											"end": 20908,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20924,
											"end": 20994,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "696"
										},
										{
											"begin": 20987,
											"end": 20993,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20982,
											"end": 20985,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20924,
											"end": 20994,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 20924,
											"end": 20994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20924,
											"end": 20994,
											"name": "tag",
											"source": 16,
											"value": "696"
										},
										{
											"begin": 20924,
											"end": 20994,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20917,
											"end": 20994,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 20917,
											"end": 20994,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21003,
											"end": 21068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "697"
										},
										{
											"begin": 21061,
											"end": 21067,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21056,
											"end": 21059,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 21049,
											"end": 21053,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21042,
											"end": 21047,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 21038,
											"end": 21054,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21003,
											"end": 21068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 21003,
											"end": 21068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21003,
											"end": 21068,
											"name": "tag",
											"source": 16,
											"value": "697"
										},
										{
											"begin": 21003,
											"end": 21068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21093,
											"end": 21122,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "698"
										},
										{
											"begin": 21115,
											"end": 21121,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21093,
											"end": 21122,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 21093,
											"end": 21122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21093,
											"end": 21122,
											"name": "tag",
											"source": 16,
											"value": "698"
										},
										{
											"begin": 21093,
											"end": 21122,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21088,
											"end": 21091,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21084,
											"end": 21123,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21077,
											"end": 21123,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21077,
											"end": 21123,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20846,
											"end": 21129,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20756,
											"end": 21129,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20756,
											"end": 21129,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20756,
											"end": 21129,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20756,
											"end": 21129,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20756,
											"end": 21129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21135,
											"end": 21775,
											"name": "tag",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 21135,
											"end": 21775,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21330,
											"end": 21334,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21368,
											"end": 21371,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 21357,
											"end": 21366,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21353,
											"end": 21372,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21345,
											"end": 21372,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21345,
											"end": 21372,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21382,
											"end": 21453,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "700"
										},
										{
											"begin": 21450,
											"end": 21451,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21439,
											"end": 21448,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21435,
											"end": 21452,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21426,
											"end": 21432,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 21382,
											"end": 21453,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 21382,
											"end": 21453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21382,
											"end": 21453,
											"name": "tag",
											"source": 16,
											"value": "700"
										},
										{
											"begin": 21382,
											"end": 21453,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21463,
											"end": 21535,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "701"
										},
										{
											"begin": 21531,
											"end": 21533,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21520,
											"end": 21529,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21516,
											"end": 21534,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21507,
											"end": 21513,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 21463,
											"end": 21535,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 21463,
											"end": 21535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21463,
											"end": 21535,
											"name": "tag",
											"source": 16,
											"value": "701"
										},
										{
											"begin": 21463,
											"end": 21535,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21545,
											"end": 21617,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "702"
										},
										{
											"begin": 21613,
											"end": 21615,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 21602,
											"end": 21611,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21598,
											"end": 21616,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21589,
											"end": 21595,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 21545,
											"end": 21617,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 21545,
											"end": 21617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21545,
											"end": 21617,
											"name": "tag",
											"source": 16,
											"value": "702"
										},
										{
											"begin": 21545,
											"end": 21617,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21664,
											"end": 21673,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21658,
											"end": 21662,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21654,
											"end": 21674,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 21649,
											"end": 21651,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 21638,
											"end": 21647,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21634,
											"end": 21652,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21627,
											"end": 21675,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 21692,
											"end": 21768,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "703"
										},
										{
											"begin": 21763,
											"end": 21767,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21754,
											"end": 21760,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21692,
											"end": 21768,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 21692,
											"end": 21768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21692,
											"end": 21768,
											"name": "tag",
											"source": 16,
											"value": "703"
										},
										{
											"begin": 21692,
											"end": 21768,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21684,
											"end": 21768,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21684,
											"end": 21768,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21135,
											"end": 21775,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 21135,
											"end": 21775,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 21135,
											"end": 21775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21135,
											"end": 21775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21135,
											"end": 21775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21135,
											"end": 21775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21135,
											"end": 21775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21135,
											"end": 21775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21781,
											"end": 21922,
											"name": "tag",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 21781,
											"end": 21922,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21837,
											"end": 21842,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21868,
											"end": 21874,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21862,
											"end": 21875,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 21853,
											"end": 21875,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21853,
											"end": 21875,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21884,
											"end": 21916,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "705"
										},
										{
											"begin": 21910,
											"end": 21915,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21884,
											"end": 21916,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 21884,
											"end": 21916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21884,
											"end": 21916,
											"name": "tag",
											"source": 16,
											"value": "705"
										},
										{
											"begin": 21884,
											"end": 21916,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21781,
											"end": 21922,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21781,
											"end": 21922,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21781,
											"end": 21922,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21781,
											"end": 21922,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21781,
											"end": 21922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21928,
											"end": 22277,
											"name": "tag",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 21928,
											"end": 22277,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21997,
											"end": 22003,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22046,
											"end": 22048,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 22034,
											"end": 22043,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22025,
											"end": 22032,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22021,
											"end": 22044,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 22017,
											"end": 22049,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 22014,
											"end": 22133,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 22014,
											"end": 22133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "707"
										},
										{
											"begin": 22014,
											"end": 22133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 22052,
											"end": 22131,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "708"
										},
										{
											"begin": 22052,
											"end": 22131,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 22052,
											"end": 22131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22052,
											"end": 22131,
											"name": "tag",
											"source": 16,
											"value": "708"
										},
										{
											"begin": 22052,
											"end": 22131,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22014,
											"end": 22133,
											"name": "tag",
											"source": 16,
											"value": "707"
										},
										{
											"begin": 22014,
											"end": 22133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22172,
											"end": 22173,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22197,
											"end": 22260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "709"
										},
										{
											"begin": 22252,
											"end": 22259,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22243,
											"end": 22249,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22232,
											"end": 22241,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 22228,
											"end": 22250,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22197,
											"end": 22260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 22197,
											"end": 22260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22197,
											"end": 22260,
											"name": "tag",
											"source": 16,
											"value": "709"
										},
										{
											"begin": 22197,
											"end": 22260,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22187,
											"end": 22260,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22187,
											"end": 22260,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22143,
											"end": 22270,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21928,
											"end": 22277,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21928,
											"end": 22277,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21928,
											"end": 22277,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21928,
											"end": 22277,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21928,
											"end": 22277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22283,
											"end": 22615,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 22283,
											"end": 22615,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22404,
											"end": 22408,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22442,
											"end": 22444,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 22431,
											"end": 22440,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22427,
											"end": 22445,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22419,
											"end": 22445,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22419,
											"end": 22445,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22455,
											"end": 22526,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "711"
										},
										{
											"begin": 22523,
											"end": 22524,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22512,
											"end": 22521,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22508,
											"end": 22525,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22499,
											"end": 22505,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 22455,
											"end": 22526,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 22455,
											"end": 22526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22455,
											"end": 22526,
											"name": "tag",
											"source": 16,
											"value": "711"
										},
										{
											"begin": 22455,
											"end": 22526,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22536,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "712"
										},
										{
											"begin": 22604,
											"end": 22606,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 22593,
											"end": 22602,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22589,
											"end": 22607,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22580,
											"end": 22586,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22536,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 22536,
											"end": 22608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22536,
											"end": 22608,
											"name": "tag",
											"source": 16,
											"value": "712"
										},
										{
											"begin": 22536,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22283,
											"end": 22615,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 22283,
											"end": 22615,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22283,
											"end": 22615,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22283,
											"end": 22615,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22283,
											"end": 22615,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22283,
											"end": 22615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"NFT Tokens/Tk5.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acquireNFT(string,uint256,uint256)": "0c29f635",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"borrowNFT(uint256)": "529062fa",
							"borrowedNFTs(address,uint256)": "31c258e8",
							"distributeNFT()": "f796c2d9",
							"distributeProfits(uint256)": "9a969768",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"marketplace()": "abc8c7af",
							"membershipFee()": "c713a289",
							"name()": "06fdde03",
							"nftBalance()": "5301fa6f",
							"nftDistribution()": "97f7d0d5",
							"nftDistributionAddress()": "ede8592b",
							"nftDistributionAmount()": "68f5cd3b",
							"nftDistributionPercentage()": "5743ceda",
							"nftName()": "008bfb00",
							"nftOwner()": "4c39a749",
							"nftPrice()": "0d39fc81",
							"nftTokenId()": "7e830574",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalNFTSupply()": "e2c79281",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"treasuryBalance()": "313dab20"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NFTAcquired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"NFTBorrowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftDistributionAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftDistributionAddress\",\"type\":\"address\"}],\"name\":\"NFTDistribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"acquireNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"borrowNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowedNFTs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"distributeProfits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketplace\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"membershipFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftDistribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftDistributionAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftDistributionAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftDistributionPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalNFTSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFT Tokens/Tk5.sol\":\"DAGG\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"NFT Tokens/Tk5.sol\":{\"keccak256\":\"0xc78d0e8b933060ce466881ab2076ad2c6e41cac45c6fa90d1ebcba35183842ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e3950184360f2a4bb6a18f723d320ec3cb3d459c9c68c3b4c30086ca5e5ea41\",\"dweb:/ipfs/QmQZgSuehZ8u1EgXUWkSjSQMi6q7WLtsPy5NMajYwQYjqS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 788,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 790,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 794,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 798,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 802,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 808,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 3497,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "_tokenCounter",
								"offset": 0,
								"slot": "6",
								"type": "t_struct(Counter)1963_storage"
							},
							{
								"astId": 3499,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "treasuryBalance",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 3504,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "borrowedNFTs",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 3518,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "membershipFee",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 3520,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "marketplace",
								"offset": 0,
								"slot": "10",
								"type": "t_address_payable"
							},
							{
								"astId": 3522,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "nftPrice",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 3524,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "nftName",
								"offset": 0,
								"slot": "12",
								"type": "t_string_storage"
							},
							{
								"astId": 3526,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "nftTokenId",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 3528,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "nftOwner",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							},
							{
								"astId": 3530,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "nftBalance",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 3532,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "totalNFTSupply",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 3534,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "nftDistribution",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 3536,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "nftDistributionPercentage",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 3538,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "nftDistributionAmount",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 3540,
								"contract": "NFT Tokens/Tk5.sol:DAGG",
								"label": "nftDistributionAddress",
								"offset": 0,
								"slot": "20",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1963_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1962,
										"contract": "NFT Tokens/Tk5.sol:DAGG",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n  --> NFT Tokens/Tk5.sol:49:9:\n   |\n49 |         emit NFTAcquired(tokenId, name);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1886,
					"file": "NFT Tokens/Tk5.sol",
					"start": 1855
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1957
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 1958,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1957,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1957,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								1957
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1939,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1939,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1939,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1957
						],
						"ERC165": [
							2310
						],
						"ERC721": [
							1764
						],
						"IERC165": [
							2322
						],
						"IERC721": [
							1881
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1927
						],
						"IERC721Receiver": [
							1899
						],
						"Strings": [
							2286
						]
					},
					"id": 1765,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 759,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 1882,
							"src": "133:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 758,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1881,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 761,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 1900,
							"src": "172:54:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 760,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1899,
										"src": "180:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 763,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 1928,
							"src": "227:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 762,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1927,
										"src": "235:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 765,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 1958,
							"src": "293:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 764,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1957,
										"src": "301:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 767,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 2287,
							"src": "342:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 766,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2286,
										"src": "350:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 2311,
							"src": "391:69:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 768,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2322,
										"src": "399:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 769,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2310,
										"src": "408:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 772,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 137,
							"src": "461:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 771,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "469:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"804:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1957,
										"src": "804:7:4"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:4"
								},
								{
									"baseName": {
										"id": 776,
										"name": "ERC165",
										"nameLocations": [
											"813:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2310,
										"src": "813:6:4"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:4"
								},
								{
									"baseName": {
										"id": 778,
										"name": "IERC721",
										"nameLocations": [
											"821:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1881,
										"src": "821:7:4"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:4"
								},
								{
									"baseName": {
										"id": 780,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1927,
										"src": "830:15:4"
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:4"
								},
								{
									"baseName": {
										"id": 782,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "847:13:4"
									},
									"id": 783,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1764,
							"linearizedBaseContracts": [
								1764,
								89,
								1927,
								1881,
								2310,
								2322,
								1957
							],
							"name": "ERC721",
							"nameLocation": "794:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 786,
									"libraryName": {
										"id": 784,
										"name": "Strings",
										"nameLocations": [
											"873:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2286,
										"src": "873:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:4",
									"typeName": {
										"id": 785,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 788,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "917:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 787,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 790,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "964:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 789,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 794,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "993:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 793,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:4",
										"keyType": {
											"id": 791,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 792,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 798,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "1051:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 797,
										"keyName": "owner",
										"keyNameLocation": "1067:5:4",
										"keyType": {
											"id": 795,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 796,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 802,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "1109:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 801,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:4",
										"keyType": {
											"id": 799,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 800,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 808,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "1175:86:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 807,
										"keyName": "owner",
										"keyNameLocation": "1191:5:4",
										"keyType": {
											"id": 803,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 806,
											"keyName": "operator",
											"keyNameLocation": "1216:8:4",
											"keyType": {
												"id": 804,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 805,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "1437:57:4",
										"statements": [
											{
												"expression": {
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 816,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "1447:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 817,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "1455:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:4"
											},
											{
												"expression": {
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 820,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "1470:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 821,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "1480:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:4"
											}
										]
									},
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 825,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "1393:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "1414:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:4"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:4"
									},
									"scope": 1764,
									"src": "1381:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2309,
										2321
									],
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "1669:192:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "1698:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 838,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "1718:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1881_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1881_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 837,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1881",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 842,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "1754:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 844,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1927,
																			"src": "1774:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1927_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1927_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 843,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1927",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 851,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "1842:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 849,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1764_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2309,
															"src": "1818:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 835,
												"id": 854,
												"nodeType": "Return",
												"src": "1679:175:4"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 832,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 830,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2310,
												"src": "1637:6:4"
											},
											{
												"id": 831,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2322,
												"src": "1645:7:4"
											}
										],
										"src": "1628:25:4"
									},
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "1588:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 827,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:4"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "1663:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:4"
									},
									"scope": 1764,
									"src": "1561:300:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1806
									],
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "1992:136:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 864,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "2006:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 865,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 878,
												"nodeType": "IfStatement",
												"src": "2002:87:4",
												"trueBody": {
													"id": 877,
													"nodeType": "Block",
													"src": "2027:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 871,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 870,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "2048:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 876,
															"nodeType": "RevertStatement",
															"src": "2041:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 879,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "2105:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 881,
													"indexExpression": {
														"id": 880,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "2115:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 863,
												"id": 882,
												"nodeType": "Return",
												"src": "2098:23:4"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1939:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:4"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1983:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:4"
									},
									"scope": 1764,
									"src": "1920:208:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1814
									],
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "2257:46:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "2288:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "2274:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 891,
												"id": 895,
												"nodeType": "Return",
												"src": "2267:29:4"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2202:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:4"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2248:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:4"
									},
									"scope": 1764,
									"src": "2185:118:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1912
									],
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "2425:29:4",
										"statements": [
											{
												"expression": {
													"id": 903,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 788,
													"src": "2442:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 902,
												"id": 904,
												"nodeType": "Return",
												"src": "2435:12:4"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:4"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "2410:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 900,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:4"
									},
									"scope": 1764,
									"src": "2365:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1918
									],
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2580:31:4",
										"statements": [
											{
												"expression": {
													"id": 912,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 790,
													"src": "2597:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 911,
												"id": 913,
												"nodeType": "Return",
												"src": "2590:14:4"
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:4"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2565:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 909,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:4"
									},
									"scope": 1764,
									"src": "2518:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1926
									],
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "2756:176:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "2780:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 923,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "2766:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:4"
											},
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 950,
														"src": "2799:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 927,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 931,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 929,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "2823:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 934,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "2856:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 932,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 942,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "2892:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 943,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 918,
																		"src": "2901:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:4",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2099,
																	"src": "2901:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 939,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:4",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 922,
												"id": 949,
												"nodeType": "Return",
												"src": "2843:82:4"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "2695:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:4"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "2741:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 920,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:4"
									},
									"scope": 1764,
									"src": "2677:255:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "3240:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 956,
												"id": 958,
												"nodeType": "Return",
												"src": "3250:9:4"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:4"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3225:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 954,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:4"
									},
									"scope": 1764,
									"src": "3174:92:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1854
									],
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "3384:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 969,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "3403:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3407:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 971,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "3416:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 968,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1567,
															1633
														],
														"referencedDeclaration": 1567,
														"src": "3394:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:4"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3340:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3352:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:4"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:4"
									},
									"scope": 1764,
									"src": "3323:113:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1870
									],
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "3573:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 985,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "3597:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 984,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "3583:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 989,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "3636:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 988,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "3623:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 983,
												"id": 991,
												"nodeType": "Return",
												"src": "3616:28:4"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:4"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "3564:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:4"
									},
									"scope": 1764,
									"src": "3497:154:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1862
									],
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "3793:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1002,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "3822:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "3836:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "3846:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1001,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "3803:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:4"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3745:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3763:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:4"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:4"
									},
									"scope": 1764,
									"src": "3718:144:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1880
									],
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "4022:59:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1019,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "4039:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1021,
														"indexExpression": {
															"id": 1020,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "4058:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1023,
													"indexExpression": {
														"id": 1022,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "4065:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1024,
												"nodeType": "Return",
												"src": "4032:42:4"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3954:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3969:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:4"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "4016:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:4"
									},
									"scope": 1764,
									"src": "3928:153:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1846
									],
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "4223:498:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1036,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "4237:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1037,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1050,
												"nodeType": "IfStatement",
												"src": "4233:87:4",
												"trueBody": {
													"id": 1049,
													"nodeType": "Block",
													"src": "4255:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1043,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1042,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4276:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1048,
															"nodeType": "RevertStatement",
															"src": "4269:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													1052
												],
												"declarations": [
													{
														"constant": false,
														"id": 1052,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "4538:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1051,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"arguments": [
														{
															"id": 1054,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "4570:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "4574:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1056,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "4583:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1053,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "4562:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1060,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "4610:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1061,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "4627:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1070,
												"nodeType": "IfStatement",
												"src": "4606:109:4",
												"trueBody": {
													"id": 1069,
													"nodeType": "Block",
													"src": "4633:82:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1064,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "4675:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1065,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1033,
																		"src": "4681:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1066,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "4690:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1063,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4654:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1068,
															"nodeType": "RevertStatement",
															"src": "4647:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "4165:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "4179:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "4191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:4"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:4"
									},
									"scope": 1764,
									"src": "4143:578:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1836
									],
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "4863:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1083,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "4890:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1084,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "4896:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "4900:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1082,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1090,
															1116
														],
														"referencedDeclaration": 1116,
														"src": "4873:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:4"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "4813:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "4827:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "4839:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:4"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:4"
									},
									"scope": 1764,
									"src": "4787:132:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1826
									],
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "5088:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "5111:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5117:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "5121:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1102,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "5098:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1109,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "5162:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1110,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5168:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "5172:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1112,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "5181:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1108,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "5139:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:4"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "5011:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "5025:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "5037:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "5054:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1098,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:4"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:4"
									},
									"scope": 1764,
									"src": "4985:208:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "5782:40:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1124,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "5799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1126,
													"indexExpression": {
														"id": 1125,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "5807:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1123,
												"id": 1127,
												"nodeType": "Return",
												"src": "5792:23:4"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:4",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "5725:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:4"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "5773:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:4"
									},
									"scope": 1764,
									"src": "5707:115:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "6017:48:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1137,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "6034:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1139,
													"indexExpression": {
														"id": 1138,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "6050:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1136,
												"id": 1140,
												"nodeType": "Return",
												"src": "6027:31:4"
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:4",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "5960:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:4"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "6008:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:4"
									},
									"scope": 1764,
									"src": "5938:127:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "6485:163:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1154,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "6514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1155,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "6552:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1161,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "6561:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1164,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1145,
																				"src": "6589:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1165,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1147,
																				"src": "6596:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1163,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1026,
																			"src": "6572:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1169,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "6621:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1168,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1142,
																			"src": "6608:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1171,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "6633:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1174,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1153,
												"id": 1176,
												"nodeType": "Return",
												"src": "6495:146:4"
											}
										]
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:4",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "6399:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "6414:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "6431:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:4"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "6479:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:4"
									},
									"scope": 1764,
									"src": "6376:272:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "7179:271:4",
										"statements": [
											{
												"condition": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:4",
													"subExpression": {
														"arguments": [
															{
																"id": 1189,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "7208:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1190,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "7215:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1191,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "7224:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1188,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "7194:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1213,
												"nodeType": "IfStatement",
												"src": "7189:255:4",
												"trueBody": {
													"id": 1212,
													"nodeType": "Block",
													"src": "7234:210:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1194,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "7252:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1195,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1210,
																"nodeType": "Block",
																"src": "7350:84:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1206,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "7402:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1207,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1185,
																					"src": "7411:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1205,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "7375:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1209,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:4"
																	}
																]
															},
															"id": 1211,
															"nodeType": "IfStatement",
															"src": "7248:186:4",
															"trueBody": {
																"id": 1204,
																"nodeType": "Block",
																"src": "7273:71:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1201,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1185,
																					"src": "7321:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1200,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "7298:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1203,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:4",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "7108:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "7123:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "7140:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:4"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:4"
									},
									"scope": 1764,
									"src": "7082:368:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "8167:78:4",
										"statements": [
											{
												"id": 1229,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:4",
												"statements": [
													{
														"expression": {
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1223,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "8201:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1225,
																"indexExpression": {
																	"id": 1224,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "8211:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1226,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "8223:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1228,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:4",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "8118:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "8135:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1219,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:4"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:4"
									},
									"scope": 1764,
									"src": "8092:153:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "8933:700:4",
										"statements": [
											{
												"assignments": [
													1244
												],
												"declarations": [
													{
														"constant": false,
														"id": 1244,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "8943:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1243,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1248,
												"initialValue": {
													"arguments": [
														{
															"id": 1246,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "8967:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1245,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "8958:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1249,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "9035:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1250,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1262,
												"nodeType": "IfStatement",
												"src": "9031:86:4",
												"trueBody": {
													"id": 1261,
													"nodeType": "Block",
													"src": "9055:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1256,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1244,
																		"src": "9086:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1257,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1238,
																		"src": "9092:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1258,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1236,
																		"src": "9098:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1255,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "9069:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1260,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1263,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "9161:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1264,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "9157:256:4",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "9181:232:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1270,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1274,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1236,
																		"src": "9298:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1275,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1269,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1567,
																		1633
																	],
																	"referencedDeclaration": 1633,
																	"src": "9277:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1281,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:4"
														},
														{
															"id": 1288,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:4",
															"statements": [
																{
																	"expression": {
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1282,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "9368:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1284,
																			"indexExpression": {
																				"id": 1283,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1244,
																				"src": "9378:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1287,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:4"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1291,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "9427:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1292,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1305,
												"nodeType": "IfStatement",
												"src": "9423:107:4",
												"trueBody": {
													"id": 1304,
													"nodeType": "Block",
													"src": "9445:85:4",
													"statements": [
														{
															"id": 1303,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:4",
															"statements": [
																{
																	"expression": {
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1297,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "9487:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1299,
																			"indexExpression": {
																				"id": 1298,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1234,
																				"src": "9497:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1302,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:4"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1306,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "9540:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1308,
														"indexExpression": {
															"id": 1307,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "9548:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1309,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "9559:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1313,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "9586:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1314,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "9592:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1315,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "9596:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1312,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1780,
														"src": "9577:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "EmitStatement",
												"src": "9572:32:4"
											},
											{
												"expression": {
													"id": 1318,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1244,
													"src": "9622:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1242,
												"id": 1319,
												"nodeType": "Return",
												"src": "9615:11:4"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:4",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "8855:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "8867:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "8884:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:4"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "8924:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:4"
									},
									"scope": 1764,
									"src": "8838:795:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "10008:274:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1329,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "10022:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1330,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1343,
												"nodeType": "IfStatement",
												"src": "10018:87:4",
												"trueBody": {
													"id": 1342,
													"nodeType": "Block",
													"src": "10040:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1336,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1335,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "10061:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1341,
															"nodeType": "RevertStatement",
															"src": "10054:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													1345
												],
												"declarations": [
													{
														"constant": false,
														"id": 1345,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1370,
														"src": "10114:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1344,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1354,
												"initialValue": {
													"arguments": [
														{
															"id": 1347,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "10146:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1348,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "10150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1349,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1346,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "10138:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1355,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "10184:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1356,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1369,
												"nodeType": "IfStatement",
												"src": "10180:96:4",
												"trueBody": {
													"id": 1368,
													"nodeType": "Block",
													"src": "10213:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1362,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1361,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "10234:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1367,
															"nodeType": "RevertStatement",
															"src": "10227:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "9970:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:4"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:4"
									},
									"scope": 1764,
									"src": "9955:327:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "10690:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1380,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "10710:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1381,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "10714:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1379,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1386,
															1412
														],
														"referencedDeclaration": 1412,
														"src": "10700:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:4"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:4",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "10652:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "10664:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:4"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:4"
									},
									"scope": 1764,
									"src": "10633:100:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "11038:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1397,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "11054:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1398,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "11058:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1396,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "11048:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1402,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1406,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "11111:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1407,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "11115:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1408,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "11124:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1401,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "11076:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:4"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "10973:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "10985:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "11002:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:4"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:4"
									},
									"scope": 1764,
									"src": "10954:182:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "11503:186:4",
										"statements": [
											{
												"assignments": [
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1444,
														"src": "11513:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1418,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1431,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1421,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1425,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "11557:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1426,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1420,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "11537:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1432,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "11591:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1433,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1443,
												"nodeType": "IfStatement",
												"src": "11587:96:4",
												"trueBody": {
													"id": 1442,
													"nodeType": "Block",
													"src": "11620:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1439,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "11664:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1438,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "11641:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1441,
															"nodeType": "RevertStatement",
															"src": "11634:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "11477:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:4"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:4"
									},
									"scope": 1764,
									"src": "11462:227:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "12084:389:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1455,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "12098:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1456,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1469,
												"nodeType": "IfStatement",
												"src": "12094:87:4",
												"trueBody": {
													"id": 1468,
													"nodeType": "Block",
													"src": "12116:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1462,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1461,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "12137:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1467,
															"nodeType": "RevertStatement",
															"src": "12130:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													1471
												],
												"declarations": [
													{
														"constant": false,
														"id": 1471,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1504,
														"src": "12190:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1470,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1480,
												"initialValue": {
													"arguments": [
														{
															"id": 1473,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "12222:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1474,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "12226:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1472,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "12214:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1481,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "12260:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1482,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1492,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "12362:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1493,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "12379:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1502,
													"nodeType": "IfStatement",
													"src": "12358:109:4",
													"trueBody": {
														"id": 1501,
														"nodeType": "Block",
														"src": "12385:82:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1496,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "12427:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1497,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "12433:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1498,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1471,
																			"src": "12442:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1495,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "12406:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1500,
																"nodeType": "RevertStatement",
																"src": "12399:57:4"
															}
														]
													}
												},
												"id": 1503,
												"nodeType": "IfStatement",
												"src": "12256:211:4",
												"trueBody": {
													"id": 1491,
													"nodeType": "Block",
													"src": "12289:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1488,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "12333:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1487,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "12310:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1490,
															"nodeType": "RevertStatement",
															"src": "12303:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "12032:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "12046:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "12058:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:4"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:4"
									},
									"scope": 1764,
									"src": "12013:460:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "13481:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1516,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "13505:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1517,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "13511:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "13515:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1515,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1523,
															1549
														],
														"referencedDeclaration": 1549,
														"src": "13491:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:4"
											}
										]
									},
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "13429:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "13443:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "13455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:4"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:4"
									},
									"scope": 1764,
									"src": "13406:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "13873:102:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1536,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "13893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "13899:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1538,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "13903:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1535,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "13883:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1542,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "13944:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1543,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "13950:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1544,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "13954:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1545,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "13963:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1541,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "13921:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:4"
											}
										]
									},
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:4",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "13794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "13808:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "13820:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "13837:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:4"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:4"
									},
									"scope": 1764,
									"src": "13771:204:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "14488:50:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1560,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "14507:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1561,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "14511:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1562,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "14520:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1559,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1567,
															1633
														],
														"referencedDeclaration": 1633,
														"src": "14498:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:4"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "14436:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "14448:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "14465:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:4"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:4"
									},
									"scope": 1764,
									"src": "14418:120:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "14814:568:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1579,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "14880:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1580,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "14893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1581,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1625,
												"nodeType": "IfStatement",
												"src": "14876:460:4",
												"trueBody": {
													"id": 1624,
													"nodeType": "Block",
													"src": "14913:423:4",
													"statements": [
														{
															"assignments": [
																1588
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1588,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1624,
																	"src": "14927:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1587,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1592,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1590,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "14957:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1589,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1699,
																	"src": "14943:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1593,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1574,
																			"src": "15093:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1596,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1594,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1599,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "15115:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1600,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1574,
																			"src": "15124:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:4",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1604,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1588,
																				"src": "15150:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1605,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1574,
																				"src": "15157:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1603,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1026,
																			"src": "15133:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1614,
															"nodeType": "IfStatement",
															"src": "15089:142:4",
															"trueBody": {
																"id": 1613,
																"nodeType": "Block",
																"src": "15164:67:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1610,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1574,
																					"src": "15211:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1609,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "15189:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1612,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:4"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1615,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1576,
																"src": "15249:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1623,
															"nodeType": "IfStatement",
															"src": "15245:81:4",
															"trueBody": {
																"id": 1622,
																"nodeType": "Block",
																"src": "15260:66:4",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1617,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1588,
																					"src": "15292:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1618,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "15299:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1619,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "15303:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1616,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1789,
																				"src": "15283:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1621,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1626,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "15346:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1628,
														"indexExpression": {
															"id": 1627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "15362:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1629,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "15373:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:4"
											}
										]
									},
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:4",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "14738:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "14750:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "14767:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "14781:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:4"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:4"
									},
									"scope": 1764,
									"src": "14720:662:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "15684:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1643,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "15698:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1654,
												"nodeType": "IfStatement",
												"src": "15694:91:4",
												"trueBody": {
													"id": 1653,
													"nodeType": "Block",
													"src": "15722:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1650,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "15765:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1649,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "15743:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1652,
															"nodeType": "RevertStatement",
															"src": "15736:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1655,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "15794:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1658,
															"indexExpression": {
																"id": 1656,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "15813:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1659,
														"indexExpression": {
															"id": 1657,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "15820:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1660,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "15832:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1664,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "15870:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1665,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "15877:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1666,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "15887:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1663,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "15855:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "EmitStatement",
												"src": "15850:46:4"
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "15619:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "15634:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "15652:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:4"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:4"
									},
									"scope": 1764,
									"src": "15591:312:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "16210:169:4",
										"statements": [
											{
												"assignments": [
													1679
												],
												"declarations": [
													{
														"constant": false,
														"id": 1679,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1698,
														"src": "16220:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1678,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1683,
												"initialValue": {
													"arguments": [
														{
															"id": 1681,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "16245:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1680,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "16236:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1684,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "16267:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1685,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1695,
												"nodeType": "IfStatement",
												"src": "16263:88:4",
												"trueBody": {
													"id": 1694,
													"nodeType": "Block",
													"src": "16288:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1691,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1673,
																		"src": "16332:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1690,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "16309:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1693,
															"nodeType": "RevertStatement",
															"src": "16302:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1696,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1679,
													"src": "16367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1677,
												"id": 1697,
												"nodeType": "Return",
												"src": "16360:12:4"
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:4",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "16161:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:4"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "16201:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:4"
									},
									"scope": 1764,
									"src": "16138:241:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "17020:680:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1711,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "17034:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1761,
												"nodeType": "IfStatement",
												"src": "17030:664:4",
												"trueBody": {
													"id": 1760,
													"nodeType": "Block",
													"src": "17054:640:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1740,
																		"nodeType": "Block",
																		"src": "17168:162:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1733,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1729,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1727,
																						"src": "17190:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1730,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1899,
																								"src": "17200:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1899_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1731,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:4",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1898,
																							"src": "17200:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1732,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1739,
																				"nodeType": "IfStatement",
																				"src": "17186:130:4",
																				"trueBody": {
																					"id": 1738,
																					"nodeType": "Block",
																					"src": "17243:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1735,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1704,
																										"src": "17294:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1734,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17272:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1736,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1737,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1741,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1728,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1727,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1741,
																				"src": "17153:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1726,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:4"
																	},
																	"src": "17144:186:4"
																},
																{
																	"block": {
																		"id": 1757,
																		"nodeType": "Block",
																		"src": "17359:325:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1748,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1745,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1743,
																							"src": "17381:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1746,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1747,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1755,
																					"nodeType": "Block",
																					"src": "17480:190:4",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:4",
																								"nodeType": "YulBlock",
																								"src": "17566:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:4",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:4"
																													},
																													"nativeSrc": "17599:15:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:4",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:4"
																													},
																													"nativeSrc": "17616:13:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:4",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:4"
																											},
																											"nativeSrc": "17592:38:4",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:4"
																										},
																										"nativeSrc": "17592:38:4",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1743,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1743,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1754,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:4"
																						}
																					]
																				},
																				"id": 1756,
																				"nodeType": "IfStatement",
																				"src": "17377:293:4",
																				"trueBody": {
																					"id": 1753,
																					"nodeType": "Block",
																					"src": "17401:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1750,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1704,
																										"src": "17452:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1749,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17430:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1751,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1752,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1758,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1744,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1743,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1758,
																				"src": "17338:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1742,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:4"
																	},
																	"src": "17331:353:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1720,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1939,
																			"src": "17109:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1722,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1702,
																		"src": "17123:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1723,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "17129:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1724,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "17138:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1717,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1704,
																				"src": "17088:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1716,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1899,
																			"src": "17072:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1899_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1899",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:4",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1898,
																	"src": "17072:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1759,
															"nodeType": "TryStatement",
															"src": "17068:616:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:4",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "16950:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "16964:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "16976:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "16993:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1707,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:4"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:4"
									},
									"scope": 1764,
									"src": "16918:782:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1765,
							"src": "776:16926:4",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1780,
								1789,
								1798
							]
						}
					],
					"src": "107:17596:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2322
						],
						"IERC721": [
							1881
						]
					},
					"id": 1882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1766,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1882,
							"sourceUnit": 2323,
							"src": "134:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1767,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2322,
										"src": "142:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1770,
										"name": "IERC165",
										"nameLocations": [
											"287:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2322,
										"src": "287:7:5"
									},
									"id": 1771,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1769,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1881,
							"linearizedBaseContracts": [
								1881,
								2322
							],
							"name": "IERC721",
							"nameLocation": "276:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1780,
									"name": "Transfer",
									"nameLocation": "400:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "409:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "431:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "451:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:5"
									},
									"src": "394:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1789,
									"name": "Approval",
									"nameLocation": "587:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "596:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "619:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "645:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:5"
									},
									"src": "581:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1798,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "819:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "842:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:5"
									},
									"src": "798:85:5"
								},
								{
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:5"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "1027:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:5"
									},
									"scope": 1881,
									"src": "970:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "1203:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:5"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "1243:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:5"
									},
									"scope": 1881,
									"src": "1186:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "1860:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "1874:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "1886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "1903:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1822,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:5"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:5"
									},
									"scope": 1881,
									"src": "1834:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "2675:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "2689:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "2701:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:5"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:5"
									},
									"scope": 1881,
									"src": "2649:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "3492:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "3506:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:5"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:5"
									},
									"scope": 1881,
									"src": "3470:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1847,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4024:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4036:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:5"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:5"
									},
									"scope": 1881,
									"src": "4007:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "4415:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "4433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:5"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:5"
									},
									"scope": 1881,
									"src": "4388:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "4628:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:5"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "4668:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:5"
									},
									"scope": 1881,
									"src": "4607:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "4861:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "4876:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:5"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "4917:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:5"
									},
									"scope": 1881,
									"src": "4835:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "266:4659:5",
							"usedErrors": [],
							"usedEvents": [
								1780,
								1789,
								1798
							]
						}
					],
					"src": "108:4818:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1899
						]
					},
					"id": 1900,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1883,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1884,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:6",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1899,
							"linearizedBaseContracts": [
								1899
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:6",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "867:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "893:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "915:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "940:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1892,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:6"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "984:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1895,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:6"
									},
									"scope": 1899,
									"src": "832:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1900,
							"src": "295:699:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1881
						],
						"IERC721Metadata": [
							1927
						]
					},
					"id": 1928,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1901,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1928,
							"sourceUnit": 1882,
							"src": "153:39:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1902,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1881,
										"src": "161:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1905,
										"name": "IERC721",
										"nameLocations": [
											"357:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1881,
										"src": "357:7:7"
									},
									"id": 1906,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:7"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1904,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1927,
							"linearizedBaseContracts": [
								1927,
								1881,
								2322
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:7",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1912,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:7"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "473:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1909,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:7"
									},
									"scope": 1927,
									"src": "434:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:7",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:7"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "600:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:7"
									},
									"scope": 1927,
									"src": "559:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:7",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "734:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:7"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "774:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1923,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:7"
									},
									"scope": 1927,
									"src": "716:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1928,
							"src": "328:463:7",
							"usedErrors": [],
							"usedEvents": [
								1780,
								1789,
								1798
							]
						}
					],
					"src": "127:665:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1957
						]
					},
					"id": 1958,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1929,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1930,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1957,
							"linearizedBaseContracts": [
								1957
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1935,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1934,
												"id": 1937,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1957,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1944,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1943,
												"id": 1946,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1941,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1957,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1952,
												"id": 1954,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1957,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1958,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							2031
						]
					},
					"id": 2032,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1959,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1960,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:9",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 2031,
							"linearizedBaseContracts": [
								2031
							],
							"name": "Counters",
							"nameLocation": "432:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1963,
									"members": [
										{
											"constant": false,
											"id": 1962,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1963,
											"src": "786:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1961,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:9",
									"nodeType": "StructDefinition",
									"scope": 2031,
									"src": "447:374:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "901:38:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1971,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "918:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1962,
													"src": "918:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1970,
												"id": 1973,
												"nodeType": "Return",
												"src": "911:21:9"
											}
										]
									},
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "844:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1965,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1964,
														"name": "Counter",
														"nameLocations": [
															"844:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1963,
														"src": "844:7:9"
													},
													"referencedDeclaration": 1963,
													"src": "844:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:9"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "892:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:9"
									},
									"scope": 2031,
									"src": "827:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1988,
										"nodeType": "Block",
										"src": "998:70:9",
										"statements": [
											{
												"id": 1987,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:9",
												"statements": [
													{
														"expression": {
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1981,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1978,
																	"src": "1032:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1962,
																"src": "1032:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1986,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:9"
													}
												]
											}
										]
									},
									"id": 1989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "964:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1977,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1976,
														"name": "Counter",
														"nameLocations": [
															"964:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1963,
														"src": "964:7:9"
													},
													"referencedDeclaration": 1963,
													"src": "964:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:9"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:9"
									},
									"scope": 2031,
									"src": "945:123:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "1127:176:9",
										"statements": [
											{
												"assignments": [
													1996
												],
												"declarations": [
													{
														"constant": false,
														"id": 1996,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 2016,
														"src": "1137:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1999,
												"initialValue": {
													"expression": {
														"id": 1997,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "1153:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1962,
													"src": "1153:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2001,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "1185:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 2000,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2006,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:9"
											},
											{
												"id": 2015,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:9",
												"statements": [
													{
														"expression": {
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2007,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "1260:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1962,
																"src": "1260:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2010,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1996,
																	"src": "1277:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2014,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:9"
													}
												]
											}
										]
									},
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "1093:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1991,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1990,
														"name": "Counter",
														"nameLocations": [
															"1093:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1963,
														"src": "1093:7:9"
													},
													"referencedDeclaration": 1963,
													"src": "1093:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:9"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:9"
									},
									"scope": 2031,
									"src": "1074:229:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "1358:35:9",
										"statements": [
											{
												"expression": {
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2023,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "1368:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:9",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1962,
														"src": "1368:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:9"
											}
										]
									},
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "1324:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2018,
														"name": "Counter",
														"nameLocations": [
															"1324:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1963,
														"src": "1324:7:9"
													},
													"referencedDeclaration": 1963,
													"src": "1324:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:9"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:9"
									},
									"scope": 2031,
									"src": "1309:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2032,
							"src": "424:971:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3376
						],
						"SignedMath": [
							3481
						],
						"Strings": [
							2286
						]
					},
					"id": 2287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2033,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 2035,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2287,
							"sourceUnit": 3377,
							"src": "127:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2034,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3376,
										"src": "135:4:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 2037,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2287,
							"sourceUnit": 3482,
							"src": "165:49:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2036,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3481,
										"src": "173:10:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2038,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2286,
							"linearizedBaseContracts": [
								2286
							],
							"name": "Strings",
							"nameLocation": "259:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2041,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2286,
									"src": "273:56:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2039,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2040,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2044,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 2286,
									"src": "335:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2042,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2043,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:10",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2051,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "505:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "520:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:10"
									},
									"src": "470:66:10"
								},
								{
									"body": {
										"id": 2098,
										"nodeType": "Block",
										"src": "708:627:10",
										"statements": [
											{
												"id": 2097,
												"nodeType": "UncheckedBlock",
												"src": "718:611:10",
												"statements": [
													{
														"assignments": [
															2060
														],
														"declarations": [
															{
																"constant": false,
																"id": 2060,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2097,
																"src": "742:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2059,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2067,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2063,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2054,
																		"src": "770:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2061,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3376,
																		"src": "759:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3376_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3196,
																	"src": "759:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:10"
													},
													{
														"assignments": [
															2069
														],
														"declarations": [
															{
																"constant": false,
																"id": 2069,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2097,
																"src": "794:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2068,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2074,
														"initialValue": {
															"arguments": [
																{
																	"id": 2072,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2060,
																	"src": "828:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2070,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:10"
													},
													{
														"assignments": [
															2076
														],
														"declarations": [
															{
																"constant": false,
																"id": 2076,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 2097,
																"src": "849:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2075,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2077,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:10"
													},
													{
														"AST": {
															"nativeSrc": "930:67:10",
															"nodeType": "YulBlock",
															"src": "930:67:10",
															"statements": [
																{
																	"nativeSrc": "948:35:10",
																	"nodeType": "YulAssignment",
																	"src": "948:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:10",
																						"nodeType": "YulLiteral",
																						"src": "971:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:10"
																				},
																				"nativeSrc": "967:15:10",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:10"
																		},
																		"nativeSrc": "955:28:10",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2069,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:10",
																"valueSize": 1
															},
															{
																"declaration": 2060,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:10",
																"valueSize": 1
															},
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:10",
																"valueSize": 1
															}
														],
														"id": 2078,
														"nodeType": "InlineAssembly",
														"src": "921:76:10"
													},
													{
														"body": {
															"id": 2093,
															"nodeType": "Block",
															"src": "1023:269:10",
															"statements": [
																{
																	"expression": {
																		"id": 2081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:10",
																		"subExpression": {
																			"id": 2080,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2076,
																			"src": "1041:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2082,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:10"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:10",
																		"nodeType": "YulBlock",
																		"src": "1124:86:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:10",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:10"
																									},
																									"nativeSrc": "1164:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:10"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:10",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:10"
																							},
																							"nativeSrc": "1159:32:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:10",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:10"
																					},
																					"nativeSrc": "1146:46:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:10"
																				},
																				"nativeSrc": "1146:46:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 2041,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2076,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2054,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 2083,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:10"
																},
																{
																	"expression": {
																		"id": 2086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2084,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2054,
																			"src": "1227:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2087,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2088,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2054,
																			"src": "1260:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2092,
																	"nodeType": "IfStatement",
																	"src": "1256:21:10",
																	"trueBody": {
																		"id": 2091,
																		"nodeType": "Break",
																		"src": "1272:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2094,
														"nodeType": "WhileStatement",
														"src": "1010:282:10"
													},
													{
														"expression": {
															"id": 2095,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2069,
															"src": "1312:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2058,
														"id": 2096,
														"nodeType": "Return",
														"src": "1305:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2052,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "655:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:10"
									},
									"returnParameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "693:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2056,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:10"
									},
									"scope": 2286,
									"src": "637:698:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2124,
										"nodeType": "Block",
										"src": "1511:92:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2110,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2102,
																	"src": "1542:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:10",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2119,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2102,
																			"src": "1588:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2117,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3481,
																			"src": "1573:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3481_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:10",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3480,
																		"src": "1573:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2116,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "1564:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2107,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:10",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2106,
												"id": 2123,
												"nodeType": "Return",
												"src": "1521:75:10"
											}
										]
									},
									"documentation": {
										"id": 2100,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:10",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "1459:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2101,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:10"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "1496:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:10"
									},
									"scope": 2286,
									"src": "1435:168:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2144,
										"nodeType": "Block",
										"src": "1782:100:10",
										"statements": [
											{
												"id": 2143,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2134,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "1835:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2137,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2128,
																				"src": "1854:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2135,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3376,
																				"src": "1842:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3376_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3318,
																			"src": "1842:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2133,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2145,
																	2228,
																	2248
																],
																"referencedDeclaration": 2228,
																"src": "1823:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2132,
														"id": 2142,
														"nodeType": "Return",
														"src": "1816:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2126,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "1729:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:10"
									},
									"returnParameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "1767:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:10"
									},
									"scope": 2286,
									"src": "1708:174:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "2095:435:10",
										"statements": [
											{
												"assignments": [
													2156
												],
												"declarations": [
													{
														"constant": false,
														"id": 2156,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2227,
														"src": "2105:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2158,
												"initialValue": {
													"id": 2157,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2148,
													"src": "2126:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:10"
											},
											{
												"assignments": [
													2160
												],
												"declarations": [
													{
														"constant": false,
														"id": 2160,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2227,
														"src": "2141:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2159,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2169,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2164,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "2177:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2161,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:10"
											},
											{
												"expression": {
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2170,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "2198:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2172,
														"indexExpression": {
															"hexValue": "30",
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2175,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:10"
											},
											{
												"expression": {
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2176,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "2223:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2178,
														"indexExpression": {
															"hexValue": "31",
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2181,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:10"
											},
											{
												"body": {
													"id": 2210,
													"nodeType": "Block",
													"src": "2293:95:10",
													"statements": [
														{
															"expression": {
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2196,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2160,
																		"src": "2307:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2198,
																	"indexExpression": {
																		"id": 2197,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2183,
																		"src": "2314:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2199,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "2319:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2203,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2200,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2156,
																			"src": "2330:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2205,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:10"
														},
														{
															"expression": {
																"id": 2208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2206,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2156,
																	"src": "2361:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2209,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2190,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2183,
														"src": "2281:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2211,
												"initializationExpression": {
													"assignments": [
														2183
													],
													"declarations": [
														{
															"constant": false,
															"id": 2183,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2211,
															"src": "2253:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2182,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2189,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2185,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2150,
																"src": "2269:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:10"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:10",
														"subExpression": {
															"id": 2193,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "2290:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2195,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2212,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2156,
														"src": "2401:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2221,
												"nodeType": "IfStatement",
												"src": "2397:96:10",
												"trueBody": {
													"id": 2220,
													"nodeType": "Block",
													"src": "2418:75:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2216,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2148,
																		"src": "2468:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2217,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2150,
																		"src": "2475:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2215,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2051,
																	"src": "2439:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2219,
															"nodeType": "RevertStatement",
															"src": "2432:50:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2224,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "2516:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2222,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2154,
												"id": 2226,
												"nodeType": "Return",
												"src": "2502:21:10"
											}
										]
									},
									"documentation": {
										"id": 2146,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "2026:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "2041:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:10"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "2080:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:10"
									},
									"scope": 2286,
									"src": "2005:525:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2247,
										"nodeType": "Block",
										"src": "2762:75:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2241,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2231,
																			"src": "2807:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2239,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2237,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2244,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "2815:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2236,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2145,
															2228,
															2248
														],
														"referencedDeclaration": 2228,
														"src": "2779:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2235,
												"id": 2246,
												"nodeType": "Return",
												"src": "2772:58:10"
											}
										]
									},
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "2710:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:10"
									},
									"returnParameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "2747:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:10"
									},
									"scope": 2286,
									"src": "2689:148:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2284,
										"nodeType": "Block",
										"src": "2992:104:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2260,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2251,
																		"src": "3015:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2258,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2265,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2253,
																		"src": "3034:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2263,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2272,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2251,
																			"src": "3063:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2270,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2269,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2278,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2253,
																			"src": "3086:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2276,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2275,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2257,
												"id": 2283,
												"nodeType": "Return",
												"src": "3002:87:10"
											}
										]
									},
									"documentation": {
										"id": 2249,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:10",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "2929:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "2946:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:10"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "2986:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:10"
									},
									"scope": 2286,
									"src": "2914:182:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2287,
							"src": "251:2847:10",
							"usedErrors": [
								2051
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2310
						],
						"IERC165": [
							2322
						]
					},
					"id": 2311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2311,
							"sourceUnit": 2323,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2289,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2322,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2292,
										"name": "IERC165",
										"nameLocations": [
											"687:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2322,
										"src": "687:7:11"
									},
									"id": 2293,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2291,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2310,
							"linearizedBaseContracts": [
								2310,
								2322
							],
							"name": "ERC165",
							"nameLocation": "677:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2321
									],
									"body": {
										"id": 2308,
										"nodeType": "Block",
										"src": "844:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2301,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2296,
														"src": "861:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2303,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2322_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2322_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2302,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2322",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2300,
												"id": 2307,
												"nodeType": "Return",
												"src": "854:47:11"
											}
										]
									},
									"documentation": {
										"id": 2294,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "789:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2295,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:11"
									},
									"returnParameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "838:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:11"
									},
									"scope": 2310,
									"src": "762:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2311,
							"src": "659:251:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2322
						]
					},
					"id": 2323,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2313,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2322,
							"linearizedBaseContracts": [
								2322
							],
							"name": "IERC165",
							"nameLocation": "431:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "817:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2315,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:12"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "860:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:12"
									},
									"scope": 2322,
									"src": "790:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2323,
							"src": "421:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3376
						]
					},
					"id": 3377,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2324,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2325,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3376,
							"linearizedBaseContracts": [
								3376
							],
							"name": "Math",
							"nameLocation": "211:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2326,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:13",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2328,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:13"
									},
									"src": "277:29:13"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2333,
									"members": [
										{
											"id": 2329,
											"name": "Floor",
											"nameLocation": "336:5:13",
											"nodeType": "EnumValue",
											"src": "336:5:13"
										},
										{
											"id": 2330,
											"name": "Ceil",
											"nameLocation": "379:4:13",
											"nodeType": "EnumValue",
											"src": "379:4:13"
										},
										{
											"id": 2331,
											"name": "Trunc",
											"nameLocation": "421:5:13",
											"nodeType": "EnumValue",
											"src": "421:5:13"
										},
										{
											"id": 2332,
											"name": "Expand",
											"nameLocation": "451:6:13",
											"nodeType": "EnumValue",
											"src": "451:6:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:13",
									"nodeType": "EnumDefinition",
									"src": "312:169:13"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "661:140:13",
										"statements": [
											{
												"id": 2363,
												"nodeType": "UncheckedBlock",
												"src": "671:124:13",
												"statements": [
													{
														"assignments": [
															2346
														],
														"declarations": [
															{
																"constant": false,
																"id": 2346,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2363,
																"src": "695:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2345,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2350,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2347,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2336,
																"src": "707:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2348,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "711:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2351,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2346,
																"src": "730:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2352,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2336,
																"src": "734:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2358,
														"nodeType": "IfStatement",
														"src": "726:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2356,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2344,
															"id": 2357,
															"nodeType": "Return",
															"src": "737:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2360,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2346,
																	"src": "782:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2361,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2344,
														"id": 2362,
														"nodeType": "Return",
														"src": "768:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2334,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "646:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "652:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:13"
									},
									"scope": 3376,
									"src": "585:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2392,
										"nodeType": "Block",
										"src": "984:113:13",
										"statements": [
											{
												"id": 2391,
												"nodeType": "UncheckedBlock",
												"src": "994:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2377,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2370,
																"src": "1022:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2378,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "1026:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2384,
														"nodeType": "IfStatement",
														"src": "1018:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2382,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2376,
															"id": 2383,
															"nodeType": "Return",
															"src": "1029:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2386,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2368,
																		"src": "1074:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2387,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2370,
																		"src": "1078:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2376,
														"id": 2390,
														"nodeType": "Return",
														"src": "1060:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2366,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "924:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "935:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:13"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "969:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "975:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:13"
									},
									"scope": 3376,
									"src": "908:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2434,
										"nodeType": "Block",
										"src": "1283:417:13",
										"statements": [
											{
												"id": 2433,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2405,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2396,
																"src": "1551:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2412,
														"nodeType": "IfStatement",
														"src": "1547:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2410,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2404,
															"id": 2411,
															"nodeType": "Return",
															"src": "1559:16:13"
														}
													},
													{
														"assignments": [
															2414
														],
														"declarations": [
															{
																"constant": false,
																"id": 2414,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2433,
																"src": "1589:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2413,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2418,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2415,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2396,
																"src": "1601:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2416,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2398,
																"src": "1605:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2419,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2414,
																	"src": "1624:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2420,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "1628:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2422,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2398,
																"src": "1633:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2428,
														"nodeType": "IfStatement",
														"src": "1620:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2426,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2404,
															"id": 2427,
															"nodeType": "Return",
															"src": "1636:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2430,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2414,
																	"src": "1681:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2431,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2404,
														"id": 2432,
														"nodeType": "Return",
														"src": "1667:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2394,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "1223:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "1234:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:13"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "1268:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "1274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:13"
									},
									"scope": 3376,
									"src": "1207:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2462,
										"nodeType": "Block",
										"src": "1887:114:13",
										"statements": [
											{
												"id": 2461,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2447,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2440,
																"src": "1925:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2454,
														"nodeType": "IfStatement",
														"src": "1921:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2452,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2446,
															"id": 2453,
															"nodeType": "Return",
															"src": "1933:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2456,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2438,
																		"src": "1978:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2457,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2440,
																		"src": "1982:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2459,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2446,
														"id": 2460,
														"nodeType": "Return",
														"src": "1964:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2436,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "1827:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "1838:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:13"
									},
									"returnParameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "1872:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "1878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:13"
									},
									"scope": 3376,
									"src": "1811:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2490,
										"nodeType": "Block",
										"src": "2198:114:13",
										"statements": [
											{
												"id": 2489,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2475,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2468,
																"src": "2236:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2482,
														"nodeType": "IfStatement",
														"src": "2232:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2480,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2474,
															"id": 2481,
															"nodeType": "Return",
															"src": "2244:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2484,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2466,
																		"src": "2289:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2485,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2468,
																		"src": "2293:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2487,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2474,
														"id": 2488,
														"nodeType": "Return",
														"src": "2275:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2464,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "2138:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "2149:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:13"
									},
									"returnParameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "2183:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2470,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "2189:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:13"
									},
									"scope": 3376,
									"src": "2122:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2508,
										"nodeType": "Block",
										"src": "2449:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2501,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2494,
															"src": "2466:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2502,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2496,
															"src": "2470:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2505,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2496,
														"src": "2478:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:13",
													"trueExpression": {
														"id": 2504,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2494,
														"src": "2474:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2500,
												"id": 2507,
												"nodeType": "Return",
												"src": "2459:20:13"
											}
										]
									},
									"documentation": {
										"id": 2492,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "2395:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "2406:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:13"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "2440:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:13"
									},
									"scope": 3376,
									"src": "2382:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2526,
										"nodeType": "Block",
										"src": "2624:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2519,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2512,
															"src": "2641:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2520,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2514,
															"src": "2645:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2523,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2514,
														"src": "2653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:13",
													"trueExpression": {
														"id": 2522,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "2649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2518,
												"id": 2525,
												"nodeType": "Return",
												"src": "2634:20:13"
											}
										]
									},
									"documentation": {
										"id": 2510,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "2570:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "2581:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:13"
									},
									"returnParameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "2615:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:13"
									},
									"scope": 3376,
									"src": "2557:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2549,
										"nodeType": "Block",
										"src": "2845:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2537,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2530,
																	"src": "2900:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2538,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2532,
																	"src": "2904:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2540,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2541,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2530,
																		"src": "2910:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2542,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2532,
																		"src": "2914:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2544,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2536,
												"id": 2548,
												"nodeType": "Return",
												"src": "2892:28:13"
											}
										]
									},
									"documentation": {
										"id": 2528,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "2791:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "2802:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:13"
									},
									"returnParameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "2836:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:13"
									},
									"scope": 3376,
									"src": "2774:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2583,
										"nodeType": "Block",
										"src": "3219:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2560,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2555,
														"src": "3233:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2568,
												"nodeType": "IfStatement",
												"src": "3229:127:13",
												"trueBody": {
													"id": 2567,
													"nodeType": "Block",
													"src": "3241:115:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2563,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2553,
																	"src": "3340:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2564,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2555,
																	"src": "3344:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2559,
															"id": 2566,
															"nodeType": "Return",
															"src": "3333:12:13"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2569,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2553,
															"src": "3444:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2573,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2553,
																			"src": "3458:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2576,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2577,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2555,
																"src": "3467:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2559,
												"id": 2582,
												"nodeType": "Return",
												"src": "3437:35:13"
											}
										]
									},
									"documentation": {
										"id": 2551,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "3165:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "3176:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:13"
									},
									"returnParameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "3210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:13"
									},
									"scope": 3376,
									"src": "3148:331:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2709,
										"nodeType": "Block",
										"src": "3901:4018:13",
										"statements": [
											{
												"id": 2708,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:13",
												"statements": [
													{
														"assignments": [
															2597
														],
														"declarations": [
															{
																"constant": false,
																"id": 2597,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2708,
																"src": "4232:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2596,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2601,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2598,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2587,
																"src": "4248:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2599,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2589,
																"src": "4252:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:13"
													},
													{
														"assignments": [
															2603
														],
														"declarations": [
															{
																"constant": false,
																"id": 2603,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2708,
																"src": "4312:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2602,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2604,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:13"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:13",
															"nodeType": "YulBlock",
															"src": "4392:122:13",
															"statements": [
																{
																	"nativeSrc": "4410:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:13"
																				},
																				"nativeSrc": "4433:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:13"
																		},
																		"nativeSrc": "4420:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:13",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:13",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:13"
																				},
																				"nativeSrc": "4470:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:13"
																				},
																				"nativeSrc": "4486:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:13"
																		},
																		"nativeSrc": "4466:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2597,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2597,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2603,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2587,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2589,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:13",
																"valueSize": 1
															}
														],
														"id": 2605,
														"nodeType": "InlineAssembly",
														"src": "4383:131:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2606,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "4595:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2614,
														"nodeType": "IfStatement",
														"src": "4591:368:13",
														"trueBody": {
															"id": 2613,
															"nodeType": "Block",
															"src": "4607:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2609,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2597,
																			"src": "4925:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2610,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2591,
																			"src": "4933:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2595,
																	"id": 2612,
																	"nodeType": "Return",
																	"src": "4918:26:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2615,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2591,
																"src": "5065:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2616,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "5080:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2622,
														"nodeType": "IfStatement",
														"src": "5061:88:13",
														"trueBody": {
															"id": 2621,
															"nodeType": "Block",
															"src": "5087:62:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2618,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2328,
																			"src": "5112:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2620,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:13"
																}
															]
														}
													},
													{
														"assignments": [
															2624
														],
														"declarations": [
															{
																"constant": false,
																"id": 2624,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2708,
																"src": "5404:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2623,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2625,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:13"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:13",
															"nodeType": "YulBlock",
															"src": "5444:291:13",
															"statements": [
																{
																	"nativeSrc": "5513:38:13",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:13"
																		},
																		"nativeSrc": "5526:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:13",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:13"
																				},
																				"nativeSrc": "5653:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:13"
																		},
																		"nativeSrc": "5642:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:13",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:13"
																		},
																		"nativeSrc": "5700:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2591,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2597,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2597,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2597,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2603,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2603,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2624,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2624,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2624,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2587,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2589,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:13",
																"valueSize": 1
															}
														],
														"id": 2626,
														"nodeType": "InlineAssembly",
														"src": "5435:300:13"
													},
													{
														"assignments": [
															2628
														],
														"declarations": [
															{
																"constant": false,
																"id": 2628,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2708,
																"src": "5939:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2627,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2635,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2629,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2591,
																"src": "5954:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2631,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2591,
																			"src": "5973:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2633,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:13"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:13",
															"nodeType": "YulBlock",
															"src": "6008:362:13",
															"statements": [
																{
																	"nativeSrc": "6073:37:13",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:13"
																		},
																		"nativeSrc": "6088:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:13",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:13"
																		},
																		"nativeSrc": "6186:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:13",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:13"
																						},
																						"nativeSrc": "6333:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:13"
																				},
																				"nativeSrc": "6329:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:13"
																		},
																		"nativeSrc": "6325:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2591,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2591,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2597,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2597,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2628,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2628,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2628,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2628,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2628,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:13",
																"valueSize": 1
															}
														],
														"id": 2636,
														"nodeType": "InlineAssembly",
														"src": "5999:371:13"
													},
													{
														"expression": {
															"id": 2641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2637,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2597,
																"src": "6436:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2638,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2603,
																	"src": "6445:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2639,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2628,
																	"src": "6453:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2642,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:13"
													},
													{
														"assignments": [
															2644
														],
														"declarations": [
															{
																"constant": false,
																"id": 2644,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2708,
																"src": "6775:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2643,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2651,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2646,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2591,
																			"src": "6798:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2648,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:13"
													},
													{
														"expression": {
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2652,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2644,
																"src": "7031:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2654,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2591,
																		"src": "7046:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2655,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2644,
																		"src": "7060:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2659,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:13"
													},
													{
														"expression": {
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2660,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2644,
																"src": "7100:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2662,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2591,
																		"src": "7115:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2663,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2644,
																		"src": "7129:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2667,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:13"
													},
													{
														"expression": {
															"id": 2674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2668,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2644,
																"src": "7170:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2670,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2591,
																		"src": "7185:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2671,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2644,
																		"src": "7199:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2675,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:13"
													},
													{
														"expression": {
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2676,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2644,
																"src": "7240:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2678,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2591,
																		"src": "7255:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2679,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2644,
																		"src": "7269:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2683,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:13"
													},
													{
														"expression": {
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2684,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2644,
																"src": "7310:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2686,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2591,
																		"src": "7325:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2687,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2644,
																		"src": "7339:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2691,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:13"
													},
													{
														"expression": {
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2692,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2644,
																"src": "7381:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2694,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2591,
																		"src": "7396:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2695,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2644,
																		"src": "7410:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2699,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:13"
													},
													{
														"expression": {
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2700,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "7851:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2701,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2597,
																	"src": "7860:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2702,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2644,
																	"src": "7868:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2705,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:13"
													},
													{
														"expression": {
															"id": 2706,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2594,
															"src": "7896:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2595,
														"id": 2707,
														"nodeType": "Return",
														"src": "7889:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2585,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "3819:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "3830:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "3841:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:13"
									},
									"returnParameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "3885:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:13"
									},
									"scope": 3376,
									"src": "3803:4116:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2752,
										"nodeType": "Block",
										"src": "8161:192:13",
										"statements": [
											{
												"assignments": [
													2726
												],
												"declarations": [
													{
														"constant": false,
														"id": 2726,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2752,
														"src": "8171:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2725,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2732,
												"initialValue": {
													"arguments": [
														{
															"id": 2728,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2713,
															"src": "8195:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2729,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2715,
															"src": "8198:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2730,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2717,
															"src": "8201:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2727,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2710,
															2753
														],
														"referencedDeclaration": 2710,
														"src": "8188:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2734,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2720,
																"src": "8244:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2333",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2333",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2733,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3375,
															"src": "8227:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2333_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2737,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2713,
																	"src": "8264:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2738,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2715,
																	"src": "8267:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2739,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2717,
																	"src": "8270:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2736,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2749,
												"nodeType": "IfStatement",
												"src": "8223:101:13",
												"trueBody": {
													"id": 2748,
													"nodeType": "Block",
													"src": "8288:36:13",
													"statements": [
														{
															"expression": {
																"id": 2746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2744,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2726,
																	"src": "8302:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2747,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2750,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2726,
													"src": "8340:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2724,
												"id": 2751,
												"nodeType": "Return",
												"src": "8333:13:13"
											}
										]
									},
									"documentation": {
										"id": 2711,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "8067:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "8078:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "8089:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "8110:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2333",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2719,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2718,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2333,
														"src": "8110:8:13"
													},
													"referencedDeclaration": 2333,
													"src": "8110:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2333",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:13"
									},
									"returnParameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "8152:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:13"
									},
									"scope": 3376,
									"src": "8051:302:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2864,
										"nodeType": "Block",
										"src": "8644:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2761,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2756,
														"src": "8658:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2767,
												"nodeType": "IfStatement",
												"src": "8654:45:13",
												"trueBody": {
													"id": 2766,
													"nodeType": "Block",
													"src": "8666:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2760,
															"id": 2765,
															"nodeType": "Return",
															"src": "8680:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2769
												],
												"declarations": [
													{
														"constant": false,
														"id": 2769,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2864,
														"src": "9378:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2768,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2778,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2772,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2756,
																			"src": "9406:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2771,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3032,
																			3067
																		],
																		"referencedDeclaration": 3032,
																		"src": "9401:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2776,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:13"
											},
											{
												"id": 2863,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:13",
												"statements": [
													{
														"expression": {
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2779,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2769,
																"src": "9839:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2780,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2769,
																				"src": "9849:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2781,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2756,
																					"src": "9858:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2782,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2769,
																					"src": "9862:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2785,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2789,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:13"
													},
													{
														"expression": {
															"id": 2799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2790,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2769,
																"src": "9888:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2791,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2769,
																				"src": "9898:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2792,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2756,
																					"src": "9907:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2793,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2769,
																					"src": "9911:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2796,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2800,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:13"
													},
													{
														"expression": {
															"id": 2810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2801,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2769,
																"src": "9937:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2802,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2769,
																				"src": "9947:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2803,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2756,
																					"src": "9956:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2804,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2769,
																					"src": "9960:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2807,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2811,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:13"
													},
													{
														"expression": {
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2812,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2769,
																"src": "9986:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2813,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2769,
																				"src": "9996:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2814,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2756,
																					"src": "10005:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2815,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2769,
																					"src": "10009:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2818,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2822,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:13"
													},
													{
														"expression": {
															"id": 2832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2823,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2769,
																"src": "10035:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2824,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2769,
																				"src": "10045:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2827,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2825,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2756,
																					"src": "10054:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2826,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2769,
																					"src": "10058:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2829,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2833,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:13"
													},
													{
														"expression": {
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2834,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2769,
																"src": "10084:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2835,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2769,
																				"src": "10094:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2836,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2756,
																					"src": "10103:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2837,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2769,
																					"src": "10107:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2840,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2844,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:13"
													},
													{
														"expression": {
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2845,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2769,
																"src": "10133:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2846,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2769,
																				"src": "10143:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2847,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2756,
																					"src": "10152:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2848,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2769,
																					"src": "10156:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2851,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2855,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2857,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2769,
																	"src": "10193:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2858,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2756,
																		"src": "10201:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2859,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2769,
																		"src": "10205:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2856,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2527,
																"src": "10189:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2760,
														"id": 2862,
														"nodeType": "Return",
														"src": "10182:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2754,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2865,
												"src": "8601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:13"
									},
									"returnParameters": {
										"id": 2760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2865,
												"src": "8635:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:13"
									},
									"scope": 3376,
									"src": "8587:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2899,
										"nodeType": "Block",
										"src": "10405:164:13",
										"statements": [
											{
												"id": 2898,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:13",
												"statements": [
													{
														"assignments": [
															2877
														],
														"declarations": [
															{
																"constant": false,
																"id": 2877,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2898,
																"src": "10439:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2876,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2881,
														"initialValue": {
															"arguments": [
																{
																	"id": 2879,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2868,
																	"src": "10461:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2878,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2865,
																	2900
																],
																"referencedDeclaration": 2865,
																"src": "10456:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2882,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2877,
																"src": "10484:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2884,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2871,
																						"src": "10511:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2333",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2333",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2883,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3375,
																					"src": "10494:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2333_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2890,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2888,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2886,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2877,
																						"src": "10524:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2887,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2877,
																						"src": "10533:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2889,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2868,
																					"src": "10542:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2895,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2875,
														"id": 2897,
														"nodeType": "Return",
														"src": "10477:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2866,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "10343:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "10354:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2333",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2869,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2333,
														"src": "10354:8:13"
													},
													"referencedDeclaration": 2333,
													"src": "10354:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2333",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:13"
									},
									"returnParameters": {
										"id": 2875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "10396:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:13"
									},
									"scope": 3376,
									"src": "10329:240:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3031,
										"nodeType": "Block",
										"src": "10760:922:13",
										"statements": [
											{
												"assignments": [
													2909
												],
												"declarations": [
													{
														"constant": false,
														"id": 2909,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3031,
														"src": "10770:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2908,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2911,
												"initialValue": {
													"hexValue": "30",
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:13"
											},
											{
												"id": 3028,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2912,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2903,
																	"src": "10826:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2926,
														"nodeType": "IfStatement",
														"src": "10822:99:13",
														"trueBody": {
															"id": 2925,
															"nodeType": "Block",
															"src": "10844:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2917,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2903,
																			"src": "10862:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2920,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:13"
																},
																{
																	"expression": {
																		"id": 2923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2921,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2909,
																			"src": "10893:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2924,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2927,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2903,
																	"src": "10938:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2941,
														"nodeType": "IfStatement",
														"src": "10934:96:13",
														"trueBody": {
															"id": 2940,
															"nodeType": "Block",
															"src": "10955:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2932,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2903,
																			"src": "10973:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2935,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:13"
																},
																{
																	"expression": {
																		"id": 2938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2936,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2909,
																			"src": "11003:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2939,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2942,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2903,
																	"src": "11047:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2956,
														"nodeType": "IfStatement",
														"src": "11043:96:13",
														"trueBody": {
															"id": 2955,
															"nodeType": "Block",
															"src": "11064:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2947,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2903,
																			"src": "11082:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2950,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:13"
																},
																{
																	"expression": {
																		"id": 2953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2951,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2909,
																			"src": "11112:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2954,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2957,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2903,
																	"src": "11156:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2971,
														"nodeType": "IfStatement",
														"src": "11152:96:13",
														"trueBody": {
															"id": 2970,
															"nodeType": "Block",
															"src": "11173:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2962,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2903,
																			"src": "11191:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2965,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:13"
																},
																{
																	"expression": {
																		"id": 2968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2966,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2909,
																			"src": "11221:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2969,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2972,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2903,
																	"src": "11265:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2986,
														"nodeType": "IfStatement",
														"src": "11261:93:13",
														"trueBody": {
															"id": 2985,
															"nodeType": "Block",
															"src": "11281:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2977,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2903,
																			"src": "11299:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2980,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:13"
																},
																{
																	"expression": {
																		"id": 2983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2981,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2909,
																			"src": "11328:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2984,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2987,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2903,
																	"src": "11371:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3001,
														"nodeType": "IfStatement",
														"src": "11367:93:13",
														"trueBody": {
															"id": 3000,
															"nodeType": "Block",
															"src": "11387:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2992,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2903,
																			"src": "11405:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2995,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:13"
																},
																{
																	"expression": {
																		"id": 2998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2996,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2909,
																			"src": "11434:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2999,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3002,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2903,
																	"src": "11477:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3016,
														"nodeType": "IfStatement",
														"src": "11473:93:13",
														"trueBody": {
															"id": 3015,
															"nodeType": "Block",
															"src": "11493:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 3009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3007,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2903,
																			"src": "11511:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3010,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:13"
																},
																{
																	"expression": {
																		"id": 3013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3011,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2909,
																			"src": "11540:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3014,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3017,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2903,
																	"src": "11583:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3027,
														"nodeType": "IfStatement",
														"src": "11579:64:13",
														"trueBody": {
															"id": 3026,
															"nodeType": "Block",
															"src": "11599:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3022,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2909,
																			"src": "11617:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3025,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3029,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2909,
													"src": "11669:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2907,
												"id": 3030,
												"nodeType": "Return",
												"src": "11662:13:13"
											}
										]
									},
									"documentation": {
										"id": 2901,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:13",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "10713:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:13"
									},
									"returnParameters": {
										"id": 2907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "10751:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:13"
									},
									"scope": 3376,
									"src": "10699:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3066,
										"nodeType": "Block",
										"src": "11915:168:13",
										"statements": [
											{
												"id": 3065,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:13",
												"statements": [
													{
														"assignments": [
															3044
														],
														"declarations": [
															{
																"constant": false,
																"id": 3044,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3065,
																"src": "11949:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3043,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3048,
														"initialValue": {
															"arguments": [
																{
																	"id": 3046,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3035,
																	"src": "11971:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3045,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3032,
																	3067
																],
																"referencedDeclaration": 3032,
																"src": "11966:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3049,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3044,
																"src": "11998:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3051,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3038,
																						"src": "12025:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2333",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2333",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3050,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3375,
																					"src": "12008:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2333_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3057,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3055,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3053,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3054,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3044,
																						"src": "12043:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3056,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3035,
																					"src": "12052:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3062,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3042,
														"id": 3064,
														"nodeType": "Return",
														"src": "11991:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3033,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "11849:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3038,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "11864:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2333",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3037,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3036,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2333,
														"src": "11864:8:13"
													},
													"referencedDeclaration": 2333,
													"src": "11864:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2333",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:13"
									},
									"returnParameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "11906:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:13"
									},
									"scope": 3376,
									"src": "11835:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3195,
										"nodeType": "Block",
										"src": "12276:854:13",
										"statements": [
											{
												"assignments": [
													3076
												],
												"declarations": [
													{
														"constant": false,
														"id": 3076,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3195,
														"src": "12286:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3075,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3078,
												"initialValue": {
													"hexValue": "30",
													"id": 3077,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:13"
											},
											{
												"id": 3192,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3079,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3070,
																"src": "12342:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3095,
														"nodeType": "IfStatement",
														"src": "12338:103:13",
														"trueBody": {
															"id": 3094,
															"nodeType": "Block",
															"src": "12361:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 3088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3084,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3070,
																			"src": "12379:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3089,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:13"
																},
																{
																	"expression": {
																		"id": 3092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3090,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3076,
																			"src": "12414:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3093,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3096,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3070,
																"src": "12458:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3112,
														"nodeType": "IfStatement",
														"src": "12454:103:13",
														"trueBody": {
															"id": 3111,
															"nodeType": "Block",
															"src": "12477:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 3105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3101,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3070,
																			"src": "12495:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3106,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:13"
																},
																{
																	"expression": {
																		"id": 3109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3107,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3076,
																			"src": "12530:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3110,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3113,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3070,
																"src": "12574:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3129,
														"nodeType": "IfStatement",
														"src": "12570:103:13",
														"trueBody": {
															"id": 3128,
															"nodeType": "Block",
															"src": "12593:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 3122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3118,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3070,
																			"src": "12611:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3123,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:13"
																},
																{
																	"expression": {
																		"id": 3126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3124,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3076,
																			"src": "12646:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3127,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3070,
																"src": "12690:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3146,
														"nodeType": "IfStatement",
														"src": "12686:100:13",
														"trueBody": {
															"id": 3145,
															"nodeType": "Block",
															"src": "12708:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 3139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3135,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3070,
																			"src": "12726:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3140,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:13"
																},
																{
																	"expression": {
																		"id": 3143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3141,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3076,
																			"src": "12760:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3144,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3147,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3070,
																"src": "12803:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3163,
														"nodeType": "IfStatement",
														"src": "12799:100:13",
														"trueBody": {
															"id": 3162,
															"nodeType": "Block",
															"src": "12821:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 3156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3152,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3070,
																			"src": "12839:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3157,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:13"
																},
																{
																	"expression": {
																		"id": 3160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3158,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3076,
																			"src": "12873:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3161,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3164,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3070,
																"src": "12916:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3180,
														"nodeType": "IfStatement",
														"src": "12912:100:13",
														"trueBody": {
															"id": 3179,
															"nodeType": "Block",
															"src": "12934:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 3173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3169,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3070,
																			"src": "12952:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3174,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:13"
																},
																{
																	"expression": {
																		"id": 3177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3175,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3076,
																			"src": "12986:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3178,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3181,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3070,
																"src": "13029:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3191,
														"nodeType": "IfStatement",
														"src": "13025:66:13",
														"trueBody": {
															"id": 3190,
															"nodeType": "Block",
															"src": "13047:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3186,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3076,
																			"src": "13065:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3189,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3193,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3076,
													"src": "13117:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3074,
												"id": 3194,
												"nodeType": "Return",
												"src": "13110:13:13"
											}
										]
									},
									"documentation": {
										"id": 3068,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:13",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3196,
												"src": "12229:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:13"
									},
									"returnParameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3196,
												"src": "12267:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:13"
									},
									"scope": 3376,
									"src": "12214:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3230,
										"nodeType": "Block",
										"src": "13365:170:13",
										"statements": [
											{
												"id": 3229,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:13",
												"statements": [
													{
														"assignments": [
															3208
														],
														"declarations": [
															{
																"constant": false,
																"id": 3208,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3229,
																"src": "13399:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3207,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3212,
														"initialValue": {
															"arguments": [
																{
																	"id": 3210,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3199,
																	"src": "13422:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3209,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3196,
																	3231
																],
																"referencedDeclaration": 3196,
																"src": "13416:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3213,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3208,
																"src": "13449:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3215,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3202,
																						"src": "13476:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2333",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2333",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3214,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3375,
																					"src": "13459:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2333_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3219,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3218,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3208,
																						"src": "13495:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3220,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3199,
																					"src": "13504:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3226,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3206,
														"id": 3228,
														"nodeType": "Return",
														"src": "13442:76:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3197,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3231,
												"src": "13299:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3202,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3231,
												"src": "13314:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2333",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3201,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3200,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2333,
														"src": "13314:8:13"
													},
													"referencedDeclaration": 2333,
													"src": "13314:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2333",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:13"
									},
									"returnParameters": {
										"id": 3206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3231,
												"src": "13356:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:13"
									},
									"scope": 3376,
									"src": "13284:251:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3317,
										"nodeType": "Block",
										"src": "13855:600:13",
										"statements": [
											{
												"assignments": [
													3240
												],
												"declarations": [
													{
														"constant": false,
														"id": 3240,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3317,
														"src": "13865:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3242,
												"initialValue": {
													"hexValue": "30",
													"id": 3241,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:13"
											},
											{
												"id": 3314,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3243,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "13921:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3257,
														"nodeType": "IfStatement",
														"src": "13917:98:13",
														"trueBody": {
															"id": 3256,
															"nodeType": "Block",
															"src": "13939:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 3250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3248,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3234,
																			"src": "13957:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3251,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:13"
																},
																{
																	"expression": {
																		"id": 3254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3252,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3240,
																			"src": "13988:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3255,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3258,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "14032:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3272,
														"nodeType": "IfStatement",
														"src": "14028:95:13",
														"trueBody": {
															"id": 3271,
															"nodeType": "Block",
															"src": "14049:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3263,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3234,
																			"src": "14067:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3266,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:13"
																},
																{
																	"expression": {
																		"id": 3269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3267,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3240,
																			"src": "14097:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3270,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3273,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "14140:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3287,
														"nodeType": "IfStatement",
														"src": "14136:95:13",
														"trueBody": {
															"id": 3286,
															"nodeType": "Block",
															"src": "14157:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3278,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3234,
																			"src": "14175:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3281,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:13"
																},
																{
																	"expression": {
																		"id": 3284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3282,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3240,
																			"src": "14205:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3285,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3288,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "14248:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3302,
														"nodeType": "IfStatement",
														"src": "14244:95:13",
														"trueBody": {
															"id": 3301,
															"nodeType": "Block",
															"src": "14265:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3293,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3234,
																			"src": "14283:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3296,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:13"
																},
																{
																	"expression": {
																		"id": 3299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3297,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3240,
																			"src": "14313:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3300,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3303,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "14356:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3313,
														"nodeType": "IfStatement",
														"src": "14352:64:13",
														"trueBody": {
															"id": 3312,
															"nodeType": "Block",
															"src": "14372:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3308,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3240,
																			"src": "14390:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3311,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3315,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3240,
													"src": "14442:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3238,
												"id": 3316,
												"nodeType": "Return",
												"src": "14435:13:13"
											}
										]
									},
									"documentation": {
										"id": 3232,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:13",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "13808:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:13"
									},
									"returnParameters": {
										"id": 3238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "13846:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:13"
									},
									"scope": 3376,
									"src": "13792:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3355,
										"nodeType": "Block",
										"src": "14692:177:13",
										"statements": [
											{
												"id": 3354,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:13",
												"statements": [
													{
														"assignments": [
															3330
														],
														"declarations": [
															{
																"constant": false,
																"id": 3330,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3354,
																"src": "14726:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3329,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3334,
														"initialValue": {
															"arguments": [
																{
																	"id": 3332,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3321,
																	"src": "14750:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3331,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3318,
																	3356
																],
																"referencedDeclaration": 3318,
																"src": "14743:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3335,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3330,
																"src": "14777:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3337,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3324,
																						"src": "14804:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2333",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2333",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3336,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3375,
																					"src": "14787:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2333_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3346,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3344,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3339,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3342,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3340,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3330,
																									"src": "14823:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3341,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3343,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3345,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3321,
																					"src": "14838:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3351,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3328,
														"id": 3353,
														"nodeType": "Return",
														"src": "14770:82:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3319,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3356,
												"src": "14626:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3356,
												"src": "14641:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2333",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3322,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2333,
														"src": "14641:8:13"
													},
													"referencedDeclaration": 2333,
													"src": "14641:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2333",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:13"
									},
									"returnParameters": {
										"id": 3328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3356,
												"src": "14683:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:13"
									},
									"scope": 3376,
									"src": "14610:259:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3374,
										"nodeType": "Block",
										"src": "15067:48:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3367,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3360,
																	"src": "15090:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2333",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2333",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3365,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3364,
												"id": 3373,
												"nodeType": "Return",
												"src": "15077:31:13"
											}
										]
									},
									"documentation": {
										"id": 3357,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:13",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3360,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3375,
												"src": "15019:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2333",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3359,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3358,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2333,
														"src": "15019:8:13"
													},
													"referencedDeclaration": 2333,
													"src": "15019:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2333",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:13"
									},
									"returnParameters": {
										"id": 3364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3375,
												"src": "15061:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:13"
									},
									"scope": 3376,
									"src": "14993:122:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3377,
							"src": "203:14914:13",
							"usedErrors": [
								2328
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3481
						]
					},
					"id": 3482,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3378,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3379,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3481,
							"linearizedBaseContracts": [
								3481
							],
							"name": "SignedMath",
							"nameLocation": "224:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3396,
										"nodeType": "Block",
										"src": "376:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3389,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3382,
															"src": "393:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3390,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3384,
															"src": "397:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3393,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3384,
														"src": "405:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:14",
													"trueExpression": {
														"id": 3392,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3382,
														"src": "401:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3388,
												"id": 3395,
												"nodeType": "Return",
												"src": "386:20:14"
											}
										]
									},
									"documentation": {
										"id": 3380,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3382,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "325:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3381,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3384,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "335:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3383,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:14"
									},
									"returnParameters": {
										"id": 3388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "368:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3386,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:14"
									},
									"scope": 3481,
									"src": "312:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3414,
										"nodeType": "Block",
										"src": "555:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3407,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3400,
															"src": "572:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3408,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3402,
															"src": "576:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3411,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3402,
														"src": "584:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:14",
													"trueExpression": {
														"id": 3410,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3400,
														"src": "580:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3406,
												"id": 3413,
												"nodeType": "Return",
												"src": "565:20:14"
											}
										]
									},
									"documentation": {
										"id": 3398,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3400,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3415,
												"src": "504:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3399,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3402,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3415,
												"src": "514:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3401,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:14"
									},
									"returnParameters": {
										"id": 3406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3415,
												"src": "547:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3404,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:14"
									},
									"scope": 3481,
									"src": "491:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3458,
										"nodeType": "Block",
										"src": "797:162:14",
										"statements": [
											{
												"assignments": [
													3426
												],
												"declarations": [
													{
														"constant": false,
														"id": 3426,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3458,
														"src": "859:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3425,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3439,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3427,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3418,
																	"src": "871:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3428,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3420,
																	"src": "875:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3430,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3431,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3418,
																				"src": "882:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3432,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3420,
																				"src": "886:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3434,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3437,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3440,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3426,
														"src": "911:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3445,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3426,
																						"src": "931:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3444,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3443,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3441,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3450,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3418,
																				"src": "945:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3451,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3420,
																				"src": "949:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3453,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3455,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3424,
												"id": 3457,
												"nodeType": "Return",
												"src": "904:48:14"
											}
										]
									},
									"documentation": {
										"id": 3416,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3418,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "746:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3417,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3420,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "756:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3419,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:14"
									},
									"returnParameters": {
										"id": 3424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "789:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3422,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:14"
									},
									"scope": 3481,
									"src": "729:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3479,
										"nodeType": "Block",
										"src": "1103:158:14",
										"statements": [
											{
												"id": 3478,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3469,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3462,
																			"src": "1228:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:14",
																		"subExpression": {
																			"id": 3473,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3462,
																			"src": "1242:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:14",
																	"trueExpression": {
																		"id": 3472,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3462,
																		"src": "1237:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3467,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3466,
														"id": 3477,
														"nodeType": "Return",
														"src": "1213:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3460,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3462,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3480,
												"src": "1061:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3461,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:14"
									},
									"returnParameters": {
										"id": 3466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3480,
												"src": "1094:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:14"
									},
									"scope": 3481,
									"src": "1048:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3482,
							"src": "216:1047:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:14"
				},
				"id": 14
			},
			"NFT Tokens/Tk5.sol": {
				"ast": {
					"absolutePath": "NFT Tokens/Tk5.sol",
					"exportedSymbols": {
						"Context": [
							1957
						],
						"Counters": [
							2031
						],
						"DAGG": [
							3749
						],
						"ERC165": [
							2310
						],
						"ERC20": [
							651
						],
						"ERC721": [
							1764
						],
						"IERC165": [
							2322
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"IERC721": [
							1881
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1927
						],
						"IERC721Receiver": [
							1899
						],
						"Strings": [
							2286
						]
					},
					"id": 3750,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3483,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3484,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3750,
							"sourceUnit": 1765,
							"src": "58:57:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 3485,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3750,
							"sourceUnit": 652,
							"src": "116:55:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3486,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3750,
							"sourceUnit": 2032,
							"src": "172:52:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "44414747204e4654",
											"id": 3488,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "250:10:15",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_2b56bfde8228698cccfb9f69e70a2b379e035a9d7ad56cc942e5d03b3909a94e",
												"typeString": "literal_string \"DAGG NFT\""
											},
											"value": "DAGG NFT"
										},
										{
											"hexValue": "44414747",
											"id": 3489,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "262:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_ba2becf8062efd5aa8f68e693ef0dceb93f10f46bb95d81796ab034374d4e088",
												"typeString": "literal_string \"DAGG\""
											},
											"value": "DAGG"
										}
									],
									"baseName": {
										"id": 3487,
										"name": "ERC721",
										"nameLocations": [
											"243:6:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1764,
										"src": "243:6:15"
									},
									"id": 3490,
									"nodeType": "InheritanceSpecifier",
									"src": "243:26:15"
								}
							],
							"canonicalName": "DAGG",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3749,
							"linearizedBaseContracts": [
								3749,
								1764,
								89,
								1927,
								1881,
								2310,
								2322,
								1957
							],
							"name": "DAGG",
							"nameLocation": "235:4:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3494,
									"libraryName": {
										"id": 3491,
										"name": "Counters",
										"nameLocations": [
											"283:8:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2031,
										"src": "283:8:15"
									},
									"nodeType": "UsingForDirective",
									"src": "277:36:15",
									"typeName": {
										"id": 3493,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3492,
											"name": "Counters.Counter",
											"nameLocations": [
												"296:8:15",
												"305:7:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1963,
											"src": "296:16:15"
										},
										"referencedDeclaration": 1963,
										"src": "296:16:15",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3497,
									"mutability": "mutable",
									"name": "_tokenCounter",
									"nameLocation": "343:13:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "318:38:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1963_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3496,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3495,
											"name": "Counters.Counter",
											"nameLocations": [
												"318:8:15",
												"327:7:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1963,
											"src": "318:16:15"
										},
										"referencedDeclaration": 1963,
										"src": "318:16:15",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1963_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "313dab20",
									"id": 3499,
									"mutability": "mutable",
									"name": "treasuryBalance",
									"nameLocation": "374:15:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "362:27:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3498,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "362:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "31c258e8",
									"id": 3504,
									"mutability": "mutable",
									"name": "borrowedNFTs",
									"nameLocation": "429:12:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "395:46:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 3503,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3500,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "403:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "395:26:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 3501,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "414:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 3502,
											"nodeType": "ArrayTypeName",
											"src": "414:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "29705a31c393a642035ad5f190e6f0b0b3f0ef43ed68c72cf87ae76be0e3185b",
									"id": 3510,
									"name": "NFTAcquired",
									"nameLocation": "453:11:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3506,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "470:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3510,
												"src": "465:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "465:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3508,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "486:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3510,
												"src": "479:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3507,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "479:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:27:15"
									},
									"src": "447:45:15"
								},
								{
									"anonymous": false,
									"eventSelector": "50580f9b480d6d5cec851393deb0b48a42783dca51b04cec0e1f104d553f516c",
									"id": 3516,
									"name": "NFTBorrowed",
									"nameLocation": "503:11:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3512,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "520:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "515:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "515:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3514,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "537:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "529:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:32:15"
									},
									"src": "497:50:15"
								},
								{
									"constant": false,
									"functionSelector": "c713a289",
									"id": 3518,
									"mutability": "mutable",
									"name": "membershipFee",
									"nameLocation": "564:13:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "552:25:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3517,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "552:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "abc8c7af",
									"id": 3520,
									"mutability": "mutable",
									"name": "marketplace",
									"nameLocation": "606:11:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "583:34:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 3519,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "583:15:15",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d39fc81",
									"id": 3522,
									"mutability": "mutable",
									"name": "nftPrice",
									"nameLocation": "635:8:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "623:20:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3521,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "623:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "008bfb00",
									"id": 3524,
									"mutability": "mutable",
									"name": "nftName",
									"nameLocation": "663:7:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "649:21:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3523,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "649:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e830574",
									"id": 3526,
									"mutability": "mutable",
									"name": "nftTokenId",
									"nameLocation": "688:10:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "676:22:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3525,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "676:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4c39a749",
									"id": 3528,
									"mutability": "mutable",
									"name": "nftOwner",
									"nameLocation": "719:8:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "704:23:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3527,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "704:7:15",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5301fa6f",
									"id": 3530,
									"mutability": "mutable",
									"name": "nftBalance",
									"nameLocation": "745:10:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "733:22:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3529,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "733:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2c79281",
									"id": 3532,
									"mutability": "mutable",
									"name": "totalNFTSupply",
									"nameLocation": "773:14:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "761:26:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3531,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "761:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "97f7d0d5",
									"id": 3534,
									"mutability": "mutable",
									"name": "nftDistribution",
									"nameLocation": "805:15:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "793:27:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3533,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "793:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5743ceda",
									"id": 3536,
									"mutability": "mutable",
									"name": "nftDistributionPercentage",
									"nameLocation": "838:25:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "826:37:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3535,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "826:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "68f5cd3b",
									"id": 3538,
									"mutability": "mutable",
									"name": "nftDistributionAmount",
									"nameLocation": "881:21:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "869:33:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3537,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "869:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ede8592b",
									"id": 3540,
									"mutability": "mutable",
									"name": "nftDistributionAddress",
									"nameLocation": "931:22:15",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "908:45:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 3539,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "908:15:15",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "72be57c44bdcdf29e3bded0b32580b641d4c7f1e2d1cd7aba457fe552b351aaf",
									"id": 3546,
									"name": "NFTDistribution",
									"nameLocation": "965:15:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3542,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftDistributionAmount",
												"nameLocation": "986:21:15",
												"nodeType": "VariableDeclaration",
												"scope": 3546,
												"src": "981:26:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3541,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "981:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3544,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftDistributionAddress",
												"nameLocation": "1017:22:15",
												"nodeType": "VariableDeclaration",
												"scope": 3546,
												"src": "1009:30:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:60:15"
									},
									"src": "959:82:15"
								},
								{
									"body": {
										"id": 3558,
										"nodeType": "Block",
										"src": "1120:49:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3554,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3548,
															"src": "1143:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3555,
															"name": "_tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3550,
															"src": "1152:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3553,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3559,
														"src": "1130:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1130:32:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3557,
												"nodeType": "ExpressionStatement",
												"src": "1130:32:15"
											}
										]
									},
									"id": 3559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1056:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3548,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1077:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3559,
												"src": "1069:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3550,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1100:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3559,
												"src": "1086:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1086:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:42:15"
									},
									"returnParameters": {
										"id": 3552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1120:0:15"
									},
									"scope": 3749,
									"src": "1047:122:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3581,
										"nodeType": "Block",
										"src": "1207:226:15",
										"statements": [
											{
												"expression": {
													"id": 3568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3562,
														"name": "nftDistributionAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3538,
														"src": "1217:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3563,
																"name": "nftBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3530,
																"src": "1241:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 3564,
																"name": "nftDistributionPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3536,
																"src": "1254:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1241:38:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 3566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1282:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "1241:44:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1217:68:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3569,
												"nodeType": "ExpressionStatement",
												"src": "1217:68:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3573,
															"name": "nftDistributionAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3538,
															"src": "1327:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3570,
															"name": "nftDistributionAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3540,
															"src": "1295:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1318:8:15",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1295:31:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1295:54:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3575,
												"nodeType": "ExpressionStatement",
												"src": "1295:54:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3577,
															"name": "nftDistributionAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3538,
															"src": "1380:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3578,
															"name": "nftDistributionAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3540,
															"src": "1403:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 3576,
														"name": "NFTDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3546,
														"src": "1364:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 3579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1364:62:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3580,
												"nodeType": "EmitStatement",
												"src": "1359:67:15"
											}
										]
									},
									"functionSelector": "f796c2d9",
									"id": 3582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distributeNFT",
									"nameLocation": "1184:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1197:2:15"
									},
									"returnParameters": {
										"id": 3561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:0:15"
									},
									"scope": 3749,
									"src": "1175:258:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3594,
										"nodeType": "Block",
										"src": "1519:49:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3590,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3584,
															"src": "1542:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3591,
															"name": "_tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3586,
															"src": "1551:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3589,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3559,
														"src": "1529:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1529:32:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3593,
												"nodeType": "ExpressionStatement",
												"src": "1529:32:15"
											}
										]
									},
									"id": 3595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "internalSetTokenURI",
									"nameLocation": "1448:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3584,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1476:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3595,
												"src": "1468:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3586,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1499:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3595,
												"src": "1485:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1485:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:42:15"
									},
									"returnParameters": {
										"id": 3588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:15"
									},
									"scope": 3749,
									"src": "1439:129:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3635,
										"nodeType": "Block",
										"src": "1655:238:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3605,
																"name": "treasuryBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3499,
																"src": "1673:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3606,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3601,
																"src": "1692:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e647320696e207472656173757279",
															"id": 3608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1699:32:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab",
																"typeString": "literal_string \"Insufficient funds in treasury\""
															},
															"value": "Insufficient funds in treasury"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e96c79e4797ff0c39eb9b1deeee733965a146a3416d14f19356ddded45c27ab",
																"typeString": "literal_string \"Insufficient funds in treasury\""
															}
														],
														"id": 3604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1665:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1665:67:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3610,
												"nodeType": "ExpressionStatement",
												"src": "1665:67:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3614,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3601,
															"src": "1763:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3611,
															"name": "marketplace",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3520,
															"src": "1742:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1754:8:15",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1742:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1742:27:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3616,
												"nodeType": "ExpressionStatement",
												"src": "1742:27:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3620,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1793:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DAGG_$3749",
																		"typeString": "contract DAGG"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DAGG_$3749",
																		"typeString": "contract DAGG"
																	}
																],
																"id": 3619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1785:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3618,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1785:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1785:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3622,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3599,
															"src": "1800:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3617,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "1779:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:29:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3624,
												"nodeType": "ExpressionStatement",
												"src": "1779:29:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3626,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3599,
															"src": "1831:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3627,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3597,
															"src": "1840:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3625,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3559,
														"src": "1818:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1818:27:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3629,
												"nodeType": "ExpressionStatement",
												"src": "1818:27:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3631,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3599,
															"src": "1872:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3632,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3597,
															"src": "1881:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3630,
														"name": "NFTAcquired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3510,
														"src": "1860:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1860:26:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3634,
												"nodeType": "EmitStatement",
												"src": "1855:31:15"
											}
										]
									},
									"functionSelector": "0c29f635",
									"id": 3636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acquireNFT",
									"nameLocation": "1583:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3597,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1608:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3636,
												"src": "1594:18:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3596,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3599,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1619:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3636,
												"src": "1614:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3598,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1614:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3601,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1633:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3636,
												"src": "1628:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3600,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1628:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:46:15"
									},
									"returnParameters": {
										"id": 3603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1655:0:15"
									},
									"scope": 3749,
									"src": "1574:319:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3667,
										"nodeType": "Block",
										"src": "1939:185:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3643,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3638,
																		"src": "1966:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3642,
																	"name": "_ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "1957:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 3644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1957:17:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 3647,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1986:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_DAGG_$3749",
																			"typeString": "contract DAGG"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_DAGG_$3749",
																			"typeString": "contract DAGG"
																		}
																	],
																	"id": 3646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1978:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3645,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1978:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 3648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1978:13:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1957:34:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4654206e6f74206f776e656420627920746865206775696c64",
															"id": 3650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1993:28:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8",
																"typeString": "literal_string \"NFT not owned by the guild\""
															},
															"value": "NFT not owned by the guild"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b4987a767e8faf19d243c750f4c0812c419191437f264b8ce5951b7ea56d3e8",
																"typeString": "literal_string \"NFT not owned by the guild\""
															}
														],
														"id": 3641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1949:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1949:73:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3652,
												"nodeType": "ExpressionStatement",
												"src": "1949:73:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3658,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3638,
															"src": "2062:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 3653,
																"name": "borrowedNFTs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3504,
																"src": "2032:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 3656,
															"indexExpression": {
																"expression": {
																	"id": 3654,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2045:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2049:6:15",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2045:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2032:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2057:4:15",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2032:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 3659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2032:38:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3660,
												"nodeType": "ExpressionStatement",
												"src": "2032:38:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3662,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3638,
															"src": "2097:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3663,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2106:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2110:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2106:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3661,
														"name": "NFTBorrowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3516,
														"src": "2085:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 3665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2085:32:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3666,
												"nodeType": "EmitStatement",
												"src": "2080:37:15"
											}
										]
									},
									"functionSelector": "529062fa",
									"id": 3668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "borrowNFT",
									"nameLocation": "1908:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3638,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1923:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3668,
												"src": "1918:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3637,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1918:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1917:14:15"
									},
									"returnParameters": {
										"id": 3640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1939:0:15"
									},
									"scope": 3749,
									"src": "1899:225:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3677,
										"nodeType": "Block",
										"src": "2180:47:15",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3673,
															"name": "_tokenCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3497,
															"src": "2197:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1963_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3674,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2211:7:15",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1975,
														"src": "2197:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1963_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1963_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2197:23:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3672,
												"id": 3676,
												"nodeType": "Return",
												"src": "2190:30:15"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 3678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2139:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2150:2:15"
									},
									"returnParameters": {
										"id": 3672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3678,
												"src": "2174:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2174:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2173:6:15"
									},
									"scope": 3749,
									"src": "2130:97:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3733,
										"nodeType": "Block",
										"src": "2297:326:15",
										"statements": [
											{
												"assignments": [
													3686
												],
												"declarations": [
													{
														"constant": false,
														"id": 3686,
														"mutability": "mutable",
														"name": "totalTokens",
														"nameLocation": "2312:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 3733,
														"src": "2307:16:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3685,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2307:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3689,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3687,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3678,
														"src": "2326:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 3688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2326:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2307:32:15"
											},
											{
												"body": {
													"id": 3731,
													"nodeType": "Block",
													"src": "2388:229:15",
													"statements": [
														{
															"assignments": [
																3701
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3701,
																	"mutability": "mutable",
																	"name": "member",
																	"nameLocation": "2410:6:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 3731,
																	"src": "2402:14:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 3700,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2402:7:15",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3705,
															"initialValue": {
																"arguments": [
																	{
																		"id": 3703,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3691,
																		"src": "2427:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3702,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "2419:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 3704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2419:10:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2402:27:15"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3707,
																			"name": "member",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3701,
																			"src": "2457:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3706,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "2447:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 3708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2447:17:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2467:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2447:21:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3730,
															"nodeType": "IfStatement",
															"src": "2443:164:15",
															"trueBody": {
																"id": 3729,
																"nodeType": "Block",
																"src": "2470:137:15",
																"statements": [
																	{
																		"assignments": [
																			3712
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3712,
																				"mutability": "mutable",
																				"name": "amount",
																				"nameLocation": "2493:6:15",
																				"nodeType": "VariableDeclaration",
																				"scope": 3729,
																				"src": "2488:11:15",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 3711,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "2488:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3720,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3713,
																					"name": "profit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3680,
																					"src": "2502:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"arguments": [
																						{
																							"id": 3715,
																							"name": "member",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3701,
																							"src": "2521:6:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 3714,
																						"name": "balanceOf",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 884,
																						"src": "2511:9:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address) view returns (uint256)"
																						}
																					},
																					"id": 3716,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2511:17:15",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2502:26:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3718,
																				"name": "totalTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3686,
																				"src": "2531:11:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2502:40:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2488:54:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 3726,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3712,
																					"src": "2585:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 3723,
																							"name": "member",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3701,
																							"src": "2568:6:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 3722,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2560:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 3721,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2560:8:15",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 3724,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2560:15:15",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 3725,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2576:8:15",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "2560:24:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 3727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2560:32:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3728,
																		"nodeType": "ExpressionStatement",
																		"src": "2560:32:15"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3694,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3691,
														"src": "2366:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3695,
														"name": "totalTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3686,
														"src": "2370:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2366:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3732,
												"initializationExpression": {
													"assignments": [
														3691
													],
													"declarations": [
														{
															"constant": false,
															"id": 3691,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2359:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 3732,
															"src": "2354:6:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3690,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2354:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3693,
													"initialValue": {
														"hexValue": "30",
														"id": 3692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2363:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2354:10:15"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2383:3:15",
														"subExpression": {
															"id": 3697,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3691,
															"src": "2383:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3699,
													"nodeType": "ExpressionStatement",
													"src": "2383:3:15"
												},
												"nodeType": "ForStatement",
												"src": "2349:268:15"
											}
										]
									},
									"functionSelector": "9a969768",
									"id": 3734,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3683,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3682,
												"name": "onlyTokenHolders",
												"nameLocations": [
													"2280:16:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3748,
												"src": "2280:16:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2280:16:15"
										}
									],
									"name": "distributeProfits",
									"nameLocation": "2242:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3680,
												"mutability": "mutable",
												"name": "profit",
												"nameLocation": "2265:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3734,
												"src": "2260:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3679,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2260:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:13:15"
									},
									"returnParameters": {
										"id": 3684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2297:0:15"
									},
									"scope": 3749,
									"src": "2233:390:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3747,
										"nodeType": "Block",
										"src": "2657:108:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3738,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2685:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2689:6:15",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2685:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3737,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "2675:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 3740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2675:21:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2699:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2675:25:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206775696c64206d656d626572732063616e20706572666f726d207468697320616374696f6e",
															"id": 3743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2702:44:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711",
																"typeString": "literal_string \"Only guild members can perform this action\""
															},
															"value": "Only guild members can perform this action"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba77d0a28b6a0e8a37a19b1f877e355365ee28f659618109c9a109baca496711",
																"typeString": "literal_string \"Only guild members can perform this action\""
															}
														],
														"id": 3736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2667:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2667:80:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3745,
												"nodeType": "ExpressionStatement",
												"src": "2667:80:15"
											},
											{
												"id": 3746,
												"nodeType": "PlaceholderStatement",
												"src": "2757:1:15"
											}
										]
									},
									"id": 3748,
									"name": "onlyTokenHolders",
									"nameLocation": "2638:16:15",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2654:2:15"
									},
									"src": "2629:136:15",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3750,
							"src": "226:2541:15",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1780,
								1789,
								1798,
								3510,
								3516,
								3546
							]
						}
					],
					"src": "32:2736:15"
				},
				"id": 15
			}
		}
	}
}