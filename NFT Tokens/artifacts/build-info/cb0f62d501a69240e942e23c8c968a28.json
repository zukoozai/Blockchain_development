{
	"id": "cb0f62d501a69240e942e23c8c968a28",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"NFT Tokens/Tk8.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.25;\n\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract DynamicArtNFT is VRFConsumerBase, ERC721 {\n    address payable public vrfCoordinator;\n    address public linkToken;\n    bytes32 constant private keyHash = 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef;\n    uint256 public fee;\n    uint256 public gasLimit;\n    uint256 public requestFee;\n    uint256 public totalNFTsMinted;\n    string public baseArtwork;\n    string[] public traits;\n    \n    mapping(uint => string[]) public nftTraits;\n\n    event NFTMinted(uint tokenId, string[] traits);\n\n    constructor(\n        address payable _vrfCoordinator,\n        address _linkToken,\n        uint256 _gasLimit,\n        uint256 _requestFee\n    ) VRFConsumerBase(_vrfCoordinator, _linkToken) ERC721(\"DynamicArtNFT\", \"DART\") {\n        vrfCoordinator = _vrfCoordinator;\n        linkToken = _linkToken;\n        gasLimit = _gasLimit;\n        requestFee = _requestFee;\n        fee = 0.1 * 10 ** 18;\n    }\n    \n    function setBaseArtwork(string memory artwork) public {\n        baseArtwork = artwork;\n    }\n\n    function addTrait(string memory trait) public {\n        traits.push(trait);\n    }\n\n    function requestRandomTraits() public returns (bytes32 requestId) {\n        require(LINK.balanceOf(address(this)) >= requestFee, \"Not enough LINK tokens\");\n        return requestRandomness(keyHash, fee);\n    }\n\n    function fulfillRandomness(\n        bytes32 requestId,\n        uint256 randomness\n    ) internal override {\n        uint256 tokenId = totalNFTsMinted + 1;\n        string[] memory randomTraits = new string[](traits.length);\n        \n        bytes32[] memory randomWords = new bytes32[](1);\n        randomWords[0] = bytes32(randomness);\n        \n        for (uint i = 0; i < traits.length; i++) {\n            uint256 index = uint256(keccak256(abi.encodePacked(randomWords[0], i))) % traits.length;\n            randomTraits[i] = traits[index];\n        }\n        \n        nftTraits[tokenId] = randomTraits;\n        _mint(msg.sender, tokenId);\n        totalNFTsMinted++;\n        emit NFTMinted(tokenId, randomTraits);\n    }\n\n    function getNFTTraits(uint tokenId) public view returns(string[] memory) {\n        return nftTraits[tokenId];\n    }\n    \n}"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./interfaces/LinkTokenInterface.sol\";\n\nimport \"./VRFRequestIDBase.sol\";\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator, _link) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash), and have told you the minimum LINK\n * @dev price for VRF service. Make sure your contract has sufficient LINK, and\n * @dev call requestRandomness(keyHash, fee, seed), where seed is the input you\n * @dev want to generate randomness from.\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomness method.\n *\n * @dev The randomness argument to fulfillRandomness is the actual random value\n * @dev generated from your seed.\n *\n * @dev The requestId argument is generated from the keyHash and the seed by\n * @dev makeRequestId(keyHash, seed). If your contract could have concurrent\n * @dev requests open, you can use the requestId to track which seed is\n * @dev associated with which randomness. See VRFRequestIDBase.sol for more\n * @dev details. (See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.)\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ. (Which is critical to making unpredictable randomness! See the\n * @dev next section.)\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the ultimate input to the VRF is mixed with the block hash of the\n * @dev block in which the request is made, user-provided seeds have no impact\n * @dev on its economic security properties. They are only included for API\n * @dev compatability with previous versions of this contract.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request.\n */\nabstract contract VRFConsumerBase is VRFRequestIDBase {\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBase expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomness the VRF output\n   */\n  function fulfillRandomness(bytes32 requestId, uint256 randomness) internal virtual;\n\n  /**\n   * @dev In order to keep backwards compatibility we have kept the user\n   * seed field around. We remove the use of it because given that the blockhash\n   * enters later, it overrides whatever randomness the used seed provides.\n   * Given that it adds no security, and can easily lead to misunderstandings,\n   * we have removed it from usage and can now provide a simpler API.\n   */\n  uint256 private constant USER_SEED_PLACEHOLDER = 0;\n\n  /**\n   * @notice requestRandomness initiates a request for VRF output given _seed\n   *\n   * @dev The fulfillRandomness method receives the output, once it's provided\n   * @dev by the Oracle, and verified by the vrfCoordinator.\n   *\n   * @dev The _keyHash must already be registered with the VRFCoordinator, and\n   * @dev the _fee must exceed the fee specified during registration of the\n   * @dev _keyHash.\n   *\n   * @dev The _seed parameter is vestigial, and is kept only for API\n   * @dev compatibility with older versions. It can't *hurt* to mix in some of\n   * @dev your own randomness, here, but it's not necessary because the VRF\n   * @dev oracle will mix the hash of the block containing your request into the\n   * @dev VRF seed it ultimately uses.\n   *\n   * @param _keyHash ID of public key against which randomness is generated\n   * @param _fee The amount of LINK to send with the request\n   *\n   * @return requestId unique ID for this request\n   *\n   * @dev The returned requestId can be used to distinguish responses to\n   * @dev concurrent requests. It is passed as the first argument to\n   * @dev fulfillRandomness.\n   */\n  function requestRandomness(bytes32 _keyHash, uint256 _fee) internal returns (bytes32 requestId) {\n    LINK.transferAndCall(vrfCoordinator, _fee, abi.encode(_keyHash, USER_SEED_PLACEHOLDER));\n    // This is the seed passed to VRFCoordinator. The oracle will mix this with\n    // the hash of the block containing this request to obtain the seed/input\n    // which is finally passed to the VRF cryptographic machinery.\n    uint256 vRFSeed = makeVRFInputSeed(_keyHash, USER_SEED_PLACEHOLDER, address(this), nonces[_keyHash]);\n    // nonces[_keyHash] must stay in sync with\n    // VRFCoordinator.nonces[_keyHash][this], which was incremented by the above\n    // successful LINK.transferAndCall (in VRFCoordinator.randomnessRequest).\n    // This provides protection against the user repeating their input seed,\n    // which would result in a predictable/duplicate output, if multiple such\n    // requests appeared in the same block.\n    nonces[_keyHash] = nonces[_keyHash] + 1;\n    return makeRequestId(_keyHash, vRFSeed);\n  }\n\n  LinkTokenInterface internal immutable LINK;\n  address private immutable vrfCoordinator;\n\n  // Nonces for each VRF key from which randomness has been requested.\n  //\n  // Must stay in sync with VRFCoordinator[_keyHash][this]\n  mapping(bytes32 => uint256) /* keyHash */ /* nonce */\n    private nonces;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   * @param _link address of LINK token contract\n   *\n   * @dev https://docs.chain.link/docs/link-token-contracts\n   */\n  constructor(address _vrfCoordinator, address _link) {\n    vrfCoordinator = _vrfCoordinator;\n    LINK = LinkTokenInterface(_link);\n  }\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomness(bytes32 requestId, uint256 randomness) external {\n    require(msg.sender == vrfCoordinator, \"Only VRFCoordinator can fulfill\");\n    fulfillRandomness(requestId, randomness);\n  }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract VRFRequestIDBase {\n  /**\n   * @notice returns the seed which is actually input to the VRF coordinator\n   *\n   * @dev To prevent repetition of VRF output due to repetition of the\n   * @dev user-supplied seed, that seed is combined in a hash with the\n   * @dev user-specific nonce, and the address of the consuming contract. The\n   * @dev risk of repetition is mostly mitigated by inclusion of a blockhash in\n   * @dev the final seed, but the nonce does protect against repetition in\n   * @dev requests which are included in a single block.\n   *\n   * @param _userSeed VRF seed input provided by user\n   * @param _requester Address of the requesting contract\n   * @param _nonce User-specific nonce at the time of the request\n   */\n  function makeVRFInputSeed(\n    bytes32 _keyHash,\n    uint256 _userSeed,\n    address _requester,\n    uint256 _nonce\n  ) internal pure returns (uint256) {\n    return uint256(keccak256(abi.encode(_keyHash, _userSeed, _requester, _nonce)));\n  }\n\n  /**\n   * @notice Returns the id for this request\n   * @param _keyHash The serviceAgreement ID to be used for this request\n   * @param _vRFInputSeed The seed to be passed directly to the VRF\n   * @return The id for this request\n   *\n   * @dev Note that _vRFInputSeed is not the seed passed by the consuming\n   * @dev contract, but the one generated by makeVRFInputSeed\n   */\n  function makeRequestId(bytes32 _keyHash, uint256 _vRFInputSeed) internal pure returns (bytes32) {\n    return keccak256(abi.encodePacked(_keyHash, _vRFInputSeed));\n  }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(\n    address to,\n    uint256 value,\n    bytes calldata data\n  ) external returns (bool success);\n\n  function transferFrom(\n    address from,\n    address to,\n    uint256 value\n  ) external returns (bool success);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol": {
				"VRFConsumerBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "randomness",
									"type": "uint256"
								}
							],
							"name": "rawFulfillRandomness",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator, _link) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash), and have told you the minimum LINKprice for VRF service. Make sure your contract has sufficient LINK, andcall requestRandomness(keyHash, fee, seed), where seed is the input youwant to generate randomness from.Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomness method.The randomness argument to fulfillRandomness is the actual random valuegenerated from your seed.The requestId argument is generated from the keyHash and the seed bymakeRequestId(keyHash, seed). If your contract could have concurrentrequests open, you can use the requestId to track which seed isassociated with which randomness. See VRFRequestIDBase.sol for moredetails. (See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.)Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. (Which is critical to making unpredictable randomness! See thenext section.) *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the ultimate input to the VRF is mixed with the block hash of theblock in which the request is made, user-provided seeds have no impacton its economic security properties. They are only included for APIcompatability with previous versions of this contract.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "https://docs.chain.link/docs/link-token-contracts",
								"params": {
									"_link": "address of LINK token contract",
									"_vrfCoordinator": "address of VRFCoordinator contract"
								}
							}
						},
						"stateVariables": {
							"USER_SEED_PLACEHOLDER": {
								"details": "In order to keep backwards compatibility we have kept the user seed field around. We remove the use of it because given that the blockhash enters later, it overrides whatever randomness the used seed provides. Given that it adds no security, and can easily lead to misunderstandings, we have removed it from usage and can now provide a simpler API."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"rawFulfillRandomness(bytes32,uint256)": "94985ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"randomness\",\"type\":\"uint256\"}],\"name\":\"rawFulfillRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator, _link) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash), and have told you the minimum LINKprice for VRF service. Make sure your contract has sufficient LINK, andcall requestRandomness(keyHash, fee, seed), where seed is the input youwant to generate randomness from.Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomness method.The randomness argument to fulfillRandomness is the actual random valuegenerated from your seed.The requestId argument is generated from the keyHash and the seed bymakeRequestId(keyHash, seed). If your contract could have concurrentrequests open, you can use the requestId to track which seed isassociated with which randomness. See VRFRequestIDBase.sol for moredetails. (See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.)Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. (Which is critical to making unpredictable randomness! See thenext section.) *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the ultimate input to the VRF is mixed with the block hash of theblock in which the request is made, user-provided seeds have no impacton its economic security properties. They are only included for APIcompatability with previous versions of this contract.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"https://docs.chain.link/docs/link-token-contracts\",\"params\":{\"_link\":\"address of LINK token contract\",\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"stateVariables\":{\"USER_SEED_PLACEHOLDER\":{\"details\":\"In order to keep backwards compatibility we have kept the user seed field around. We remove the use of it because given that the blockhash enters later, it overrides whatever randomness the used seed provides. Given that it adds no security, and can easily lead to misunderstandings, we have removed it from usage and can now provide a simpler API.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":\"VRFConsumerBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":{\"keccak256\":\"0xff9e7d773545a1a5d73106e72bfb429da79c1cc4d893fb62051df801d2e61469\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68ff9557dad6da8108073dadcbfe5cd1f45106c2f890443eacd3bf8d59955d4e\",\"dweb:/ipfs/QmSKYkP8wNX7MKYrCroFps62gdxEwwrZwsz4RLc6XzNkxi\"]},\"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":{\"keccak256\":\"0x2bf1168e8fe548fa990e0aeaf89ef90680f80aa31eeaf901f485df60de51d51b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79c72d66deaa4b0f251f3f0817f45ebceb71f5b4f94a86ac0e586de99f5af2b6\",\"dweb:/ipfs/QmcHkApHm5CAynjajcCUYppaKJ9sNWGZTEcSs4tUK8B5K5\"]},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 79,
								"contract": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:VRFConsumerBase",
								"label": "nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_uint256)"
							}
						],
						"types": {
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "****************************************************************************Interface for contracts using VRF randomness *****************************************************************************",
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol": {
				"VRFRequestIDBase": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":57:1584  contract VRFRequestIDBase {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":57:1584  contract VRFRequestIDBase {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220aa1500a8804f74bfc1a02943bbb3d2541609550086d4a561c8823db064a772a564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220aa1500a8804f74bfc1a02943bbb3d2541609550086d4a561c8823db064a772a564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA ISZERO STOP 0xA8 DUP1 0x4F PUSH21 0xBFC1A02943BBB3D2541609550086D4A561C8823DB0 PUSH5 0xA772A56473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "57:1527:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220aa1500a8804f74bfc1a02943bbb3d2541609550086d4a561c8823db064a772a564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA ISZERO STOP 0xA8 DUP1 0x4F PUSH21 0xBFC1A02943BBB3D2541609550086D4A561C8823DB0 PUSH5 0xA772A56473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "57:1527:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"makeRequestId(bytes32,uint256)": "infinite",
								"makeVRFInputSeed(bytes32,uint256,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1584,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1584,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aa1500a8804f74bfc1a02943bbb3d2541609550086d4a561c8823db064a772a564736f6c63430008190033",
									".code": [
										{
											"begin": 57,
											"end": 1584,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1584,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 57,
											"end": 1584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 1584,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
								"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol",
								"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"NFT Tokens/Tk8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":\"VRFRequestIDBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":{\"keccak256\":\"0x2bf1168e8fe548fa990e0aeaf89ef90680f80aa31eeaf901f485df60de51d51b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79c72d66deaa4b0f251f3f0817f45ebceb71f5b4f94a86ac0e586de99f5af2b6\",\"dweb:/ipfs/QmcHkApHm5CAynjajcCUYppaKJ9sNWGZTEcSs4tUK8B5K5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
				"LinkTokenInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "decimalPlaces",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseApproval",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "increaseApproval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalTokensIssued",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseApproval(address,uint256)": "66188463",
							"increaseApproval(address,uint256)": "d73dd623",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 435,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 437,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 441,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 445,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 449,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 455,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bec6e6bc0e54600d1963cf86837a5ca170a786b479a6592b700803baafc3363d64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bec6e6bc0e54600d1963cf86837a5ca170a786b479a6592b700803baafc3363d64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xC6 0xE6 0xBC 0xE SLOAD PUSH1 0xD NOT PUSH4 0xCF86837A TLOAD LOG1 PUSH17 0xA786B479A6592B700803BAAFC3363D6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bec6e6bc0e54600d1963cf86837a5ca170a786b479a6592b700803baafc3363d64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xC6 0xE6 0xBC 0xE SLOAD PUSH1 0xD NOT PUSH4 0xCF86837A TLOAD LOG1 PUSH17 0xA786B479A6592B700803BAAFC3363D6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bec6e6bc0e54600d1963cf86837a5ca170a786b479a6592b700803baafc3363d64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
								"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol",
								"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"NFT Tokens/Tk8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SDIV 0xB2 0x21 PUSH30 0x8B4FEFE310F3BA770D7C407E8AEFB52200E261E53F4B0CE9C3132264736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SDIV 0xB2 0x21 PUSH30 0x8B4FEFE310F3BA770D7C407E8AEFB52200E261E53F4B0CE9C3132264736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
								"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol",
								"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"NFT Tokens/Tk8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122079d67ec5f0269e00933469fd8bac804e50ccd0f45f359861bfb31c9b9d6c7ab464736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122079d67ec5f0269e00933469fd8bac804e50ccd0f45f359861bfb31c9b9d6c7ab464736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD67EC5F0269E00933469FD8BAC804E50CCD0F45F359861BFB31C SWAP12 SWAP14 PUSH13 0x7AB464736F6C63430008190033 ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122079d67ec5f0269e00933469fd8bac804e50ccd0f45f359861bfb31c9b9d6c7ab464736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD67EC5F0269E00933469FD8BAC804E50CCD0F45F359861BFB31C SWAP12 SWAP14 PUSH13 0x7AB464736F6C63430008190033 ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079d67ec5f0269e00933469fd8bac804e50ccd0f45f359861bfb31c9b9d6c7ab464736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
								"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol",
								"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"NFT Tokens/Tk8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NFT Tokens/Tk8.sol": {
				"DynamicArtNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_vrfCoordinator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_linkToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_requestFee",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "traits",
									"type": "string[]"
								}
							],
							"name": "NFTMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "trait",
									"type": "string"
								}
							],
							"name": "addTrait",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseArtwork",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gasLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getNFTTraits",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nftTraits",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "randomness",
									"type": "uint256"
								}
							],
							"name": "rawFulfillRandomness",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestRandomTraits",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "artwork",
									"type": "string"
								}
							],
							"name": "setBaseArtwork",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalNFTsMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "traits",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vrfCoordinator",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFT Tokens/Tk8.sol\":178:2351  contract DynamicArtNFT is VRFConsumerBase, ERC721 {... */\n  mstore(0x40, 0xc0)\n    /* \"NFT Tokens/Tk8.sol\":700:1095  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x0d\n  dup2\n  mstore\n  shl(0x9a, 0x111e5b985b5a58d05c9d139195)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup3\n  mload\n  dup1\n  dup5\n  add\n  swap1\n  swap4\n  mstore\n  0x04\n  dup4\n  mstore\n  shl(0xe2, 0x11105495)\n  swap1\n  dup4\n  add\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9306:9338  vrfCoordinator = _vrfCoordinator */\n  dup1\n  dup8\n  and\n  0xa0\n  mstore\n    /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9344:9376  LINK = LinkTokenInterface(_link) */\n  dup6\n  and\n  0x80\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_11\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n    /* \"NFT Tokens/Tk8.sol\":930:944  vrfCoordinator */\n  0x07\n    /* \"NFT Tokens/Tk8.sol\":930:962  vrfCoordinator = _vrfCoordinator */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap7\n  dup8\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"NFT Tokens/Tk8.sol\":972:981  linkToken */\n  0x08\n    /* \"NFT Tokens/Tk8.sol\":972:994  linkToken = _linkToken */\n  dup1\n  sload\n  swap6\n  swap1\n  swap7\n  and\n  swap5\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap4\n  sstore\n    /* \"NFT Tokens/Tk8.sol\":1004:1012  gasLimit */\n  0x0a\n    /* \"NFT Tokens/Tk8.sol\":1004:1024  gasLimit = _gasLimit */\n  sstore\n  pop\n    /* \"NFT Tokens/Tk8.sol\":1034:1044  requestFee */\n  0x0b\n    /* \"NFT Tokens/Tk8.sol\":1034:1058  requestFee = _requestFee */\n  sstore\n    /* \"NFT Tokens/Tk8.sol\":1074:1088  0.1 * 10 ** 18 */\n  0x016345785d8a0000\n    /* \"NFT Tokens/Tk8.sol\":1068:1071  fee */\n  0x09\n    /* \"NFT Tokens/Tk8.sol\":1068:1088  fee = 0.1 * 10 ** 18 */\n  sstore\n    /* \"NFT Tokens/Tk8.sol\":178:2351  contract DynamicArtNFT is VRFConsumerBase, ERC721 {... */\n  jump(tag_20)\n    /* \"#utility.yul\":14:153   */\ntag_14:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":97:128   */\n  dup2\n  and\n    /* \"#utility.yul\":87:129   */\n  dup2\n  eq\n    /* \"#utility.yul\":77:147   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":143:144   */\n  0x00\n    /* \"#utility.yul\":140:141   */\n  dup1\n    /* \"#utility.yul\":133:145   */\n  revert\n    /* \"#utility.yul\":77:147   */\ntag_22:\n    /* \"#utility.yul\":14:153   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":158:690   */\ntag_3:\n    /* \"#utility.yul\":263:269   */\n  0x00\n    /* \"#utility.yul\":271:277   */\n  dup1\n    /* \"#utility.yul\":279:285   */\n  0x00\n    /* \"#utility.yul\":287:293   */\n  dup1\n    /* \"#utility.yul\":340:343   */\n  0x80\n    /* \"#utility.yul\":328:337   */\n  dup6\n    /* \"#utility.yul\":319:326   */\n  dup8\n    /* \"#utility.yul\":315:338   */\n  sub\n    /* \"#utility.yul\":311:344   */\n  slt\n    /* \"#utility.yul\":308:361   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":357:358   */\n  0x00\n    /* \"#utility.yul\":354:355   */\n  dup1\n    /* \"#utility.yul\":347:359   */\n  revert\n    /* \"#utility.yul\":308:361   */\ntag_24:\n    /* \"#utility.yul\":389:398   */\n  dup5\n    /* \"#utility.yul\":383:399   */\n  mload\n    /* \"#utility.yul\":408:447   */\n  tag_25\n    /* \"#utility.yul\":441:446   */\n  dup2\n    /* \"#utility.yul\":408:447   */\n  tag_14\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":516:518   */\n  0x20\n    /* \"#utility.yul\":501:519   */\n  dup7\n  add\n    /* \"#utility.yul\":495:520   */\n  mload\n    /* \"#utility.yul\":466:471   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":529:570   */\n  tag_26\n    /* \"#utility.yul\":495:520   */\n  dup2\n    /* \"#utility.yul\":529:570   */\n  tag_14\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":636:638   */\n  0x40\n    /* \"#utility.yul\":621:639   */\n  dup7\n  add\n    /* \"#utility.yul\":615:640   */\n  mload\n    /* \"#utility.yul\":680:682   */\n  0x60\n    /* \"#utility.yul\":665:683   */\n  swap1\n  swap7\n  add\n    /* \"#utility.yul\":659:684   */\n  mload\n    /* \"#utility.yul\":158:690   */\n  swap5\n  swap8\n    /* \"#utility.yul\":589:596   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":158:690   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":695:822   */\ntag_15:\n    /* \"#utility.yul\":756:766   */\n  0x4e487b71\n    /* \"#utility.yul\":751:754   */\n  0xe0\n    /* \"#utility.yul\":747:767   */\n  shl\n    /* \"#utility.yul\":744:745   */\n  0x00\n    /* \"#utility.yul\":737:768   */\n  mstore\n    /* \"#utility.yul\":787:791   */\n  0x41\n    /* \"#utility.yul\":784:785   */\n  0x04\n    /* \"#utility.yul\":777:792   */\n  mstore\n    /* \"#utility.yul\":811:815   */\n  0x24\n    /* \"#utility.yul\":808:809   */\n  0x00\n    /* \"#utility.yul\":801:816   */\n  revert\n    /* \"#utility.yul\":827:1207   */\ntag_16:\n    /* \"#utility.yul\":906:907   */\n  0x01\n    /* \"#utility.yul\":902:914   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":949:961   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":970:1031   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1024:1028   */\n  0x7f\n    /* \"#utility.yul\":1016:1022   */\n  dup3\n    /* \"#utility.yul\":1012:1029   */\n  and\n    /* \"#utility.yul\":1002:1029   */\n  swap2\n  pop\n    /* \"#utility.yul\":970:1031   */\ntag_29:\n    /* \"#utility.yul\":1077:1079   */\n  0x20\n    /* \"#utility.yul\":1069:1075   */\n  dup3\n    /* \"#utility.yul\":1066:1080   */\n  lt\n    /* \"#utility.yul\":1046:1064   */\n  dup2\n    /* \"#utility.yul\":1043:1081   */\n  sub\n    /* \"#utility.yul\":1040:1201   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1123:1133   */\n  0x4e487b71\n    /* \"#utility.yul\":1118:1121   */\n  0xe0\n    /* \"#utility.yul\":1114:1134   */\n  shl\n    /* \"#utility.yul\":1111:1112   */\n  0x00\n    /* \"#utility.yul\":1104:1135   */\n  mstore\n    /* \"#utility.yul\":1158:1162   */\n  0x22\n    /* \"#utility.yul\":1155:1156   */\n  0x04\n    /* \"#utility.yul\":1148:1163   */\n  mstore\n    /* \"#utility.yul\":1186:1190   */\n  0x24\n    /* \"#utility.yul\":1183:1184   */\n  0x00\n    /* \"#utility.yul\":1176:1191   */\n  revert\n    /* \"#utility.yul\":1040:1201   */\ntag_30:\n  pop\n    /* \"#utility.yul\":827:1207   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1338:1856   */\ntag_18:\n    /* \"#utility.yul\":1440:1442   */\n  0x1f\n    /* \"#utility.yul\":1435:1438   */\n  dup3\n    /* \"#utility.yul\":1432:1443   */\n  gt\n    /* \"#utility.yul\":1429:1850   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1476:1481   */\n  dup1\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1482   */\n  mstore\n    /* \"#utility.yul\":1520:1524   */\n  0x20\n    /* \"#utility.yul\":1517:1518   */\n  0x00\n    /* \"#utility.yul\":1507:1525   */\n  keccak256\n    /* \"#utility.yul\":1590:1592   */\n  0x1f\n    /* \"#utility.yul\":1578:1588   */\n  dup5\n    /* \"#utility.yul\":1574:1593   */\n  add\n    /* \"#utility.yul\":1571:1572   */\n  0x05\n    /* \"#utility.yul\":1567:1594   */\n  shr\n    /* \"#utility.yul\":1561:1565   */\n  dup2\n    /* \"#utility.yul\":1557:1595   */\n  add\n    /* \"#utility.yul\":1626:1630   */\n  0x20\n    /* \"#utility.yul\":1614:1624   */\n  dup6\n    /* \"#utility.yul\":1611:1631   */\n  lt\n    /* \"#utility.yul\":1608:1655   */\n  iszero\n  tag_34\n  jumpi\n  pop\n    /* \"#utility.yul\":1649:1653   */\n  dup1\n    /* \"#utility.yul\":1608:1655   */\ntag_34:\n    /* \"#utility.yul\":1704:1706   */\n  0x1f\n    /* \"#utility.yul\":1699:1702   */\n  dup5\n    /* \"#utility.yul\":1695:1707   */\n  add\n    /* \"#utility.yul\":1692:1693   */\n  0x05\n    /* \"#utility.yul\":1688:1708   */\n  shr\n    /* \"#utility.yul\":1682:1686   */\n  dup3\n    /* \"#utility.yul\":1678:1709   */\n  add\n    /* \"#utility.yul\":1668:1709   */\n  swap2\n  pop\n    /* \"#utility.yul\":1759:1840   */\ntag_35:\n    /* \"#utility.yul\":1777:1779   */\n  dup2\n    /* \"#utility.yul\":1770:1775   */\n  dup2\n    /* \"#utility.yul\":1767:1780   */\n  lt\n    /* \"#utility.yul\":1759:1840   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1836:1837   */\n  0x00\n    /* \"#utility.yul\":1822:1838   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1803:1804   */\n  0x01\n    /* \"#utility.yul\":1792:1805   */\n  add\n    /* \"#utility.yul\":1759:1840   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":1763:1766   */\n  pop\n  pop\n    /* \"#utility.yul\":1429:1850   */\ntag_33:\n    /* \"#utility.yul\":1338:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2032:3377   */\ntag_10:\n    /* \"#utility.yul\":2152:2162   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2174:2204   */\n  dup2\n  gt\n    /* \"#utility.yul\":2171:2227   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":2207:2225   */\n  tag_41\n  tag_15\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":2236:2333   */\n  tag_42\n    /* \"#utility.yul\":2326:2332   */\n  dup2\n    /* \"#utility.yul\":2286:2324   */\n  tag_43\n    /* \"#utility.yul\":2318:2322   */\n  dup5\n    /* \"#utility.yul\":2312:2323   */\n  sload\n    /* \"#utility.yul\":2286:2324   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":2280:2284   */\n  dup5\n    /* \"#utility.yul\":2236:2333   */\n  tag_18\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":2388:2392   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2445:2447   */\n  0x1f\n    /* \"#utility.yul\":2434:2448   */\n  dup4\n  gt\n    /* \"#utility.yul\":2462:2463   */\n  0x01\n    /* \"#utility.yul\":2457:3120   */\n  dup2\n  eq\n  tag_45\n  jumpi\n    /* \"#utility.yul\":3164:3165   */\n  0x00\n    /* \"#utility.yul\":3181:3187   */\n  dup5\n    /* \"#utility.yul\":3178:3267   */\n  iszero\n  tag_46\n  jumpi\n  pop\n    /* \"#utility.yul\":3233:3252   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3227:3253   */\n  mload\n    /* \"#utility.yul\":3178:3267   */\ntag_46:\n  not(0x00)\n    /* \"#utility.yul\":1989:1990   */\n  0x03\n    /* \"#utility.yul\":1985:1996   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1981:2005   */\n  shr\n    /* \"#utility.yul\":1977:2006   */\n  not\n    /* \"#utility.yul\":1967:2007   */\n  and\n    /* \"#utility.yul\":2013:2014   */\n  0x01\n    /* \"#utility.yul\":2009:2020   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1964:2021   */\n  or\n    /* \"#utility.yul\":3280:3361   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2427:3371   */\n  jump(tag_44)\n    /* \"#utility.yul\":2457:3120   */\ntag_45:\n    /* \"#utility.yul\":1285:1286   */\n  0x00\n    /* \"#utility.yul\":1278:1292   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1322:1326   */\n  0x20\n    /* \"#utility.yul\":1309:1327   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2493:2513   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2611:2847   */\ntag_49:\n    /* \"#utility.yul\":2625:2632   */\n  dup3\n    /* \"#utility.yul\":2622:2623   */\n  dup2\n    /* \"#utility.yul\":2619:2633   */\n  lt\n    /* \"#utility.yul\":2611:2847   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2714:2733   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2708:2734   */\n  mload\n    /* \"#utility.yul\":2693:2735   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2806:2833   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2774:2775   */\n  0x01\n    /* \"#utility.yul\":2762:2776   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2641:2660   */\n  dup5\n  add\n    /* \"#utility.yul\":2611:2847   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":2615:2618   */\n  pop\n    /* \"#utility.yul\":2875:2881   */\n  dup6\n    /* \"#utility.yul\":2866:2873   */\n  dup3\n    /* \"#utility.yul\":2863:2882   */\n  lt\n    /* \"#utility.yul\":2860:3061   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2936:2955   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2930:2956   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3019:3020   */\n  0x03\n    /* \"#utility.yul\":3015:3029   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3031:3034   */\n  0xf8\n    /* \"#utility.yul\":3011:3035   */\n  and\n    /* \"#utility.yul\":3007:3044   */\n  shr\n    /* \"#utility.yul\":3003:3045   */\n  not\n    /* \"#utility.yul\":2988:3046   */\n  and\n    /* \"#utility.yul\":2973:3047   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2860:3061   */\ntag_52:\n  pop\n  pop\n    /* \"#utility.yul\":3107:3108   */\n  0x01\n    /* \"#utility.yul\":3098:3104   */\n  dup5\n    /* \"#utility.yul\":3095:3096   */\n  0x01\n    /* \"#utility.yul\":3091:3105   */\n  shl\n    /* \"#utility.yul\":3087:3109   */\n  add\n    /* \"#utility.yul\":3081:3085   */\n  dup6\n    /* \"#utility.yul\":3074:3110   */\n  sstore\n    /* \"#utility.yul\":2427:3371   */\ntag_44:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2032:3377   */\n  pop\n  pop\n  jump\t// out\ntag_20:\n    /* \"NFT Tokens/Tk8.sol\":178:2351  contract DynamicArtNFT is VRFConsumerBase, ERC721 {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6dbb33232cde86c8a04f90a8bed9fc1c5ef520188a14538d96eb100d69bc2a94\")\n  0x00\n  assignImmutable(\"0xb2219b801710730437d0358146c829b62297a059eceaa0b40b27aea2daecf595\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"NFT Tokens/Tk8.sol\":178:2351  contract DynamicArtNFT is VRFConsumerBase, ERC721 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ba19512\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xe84b3ad0\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe84b3ad0\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xeb2e578b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf68016b7\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0xb88d4fde\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x9cc8c69b\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x9cc8c69b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa3e56fa8\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa630fd97\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x7ba19512\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x94985ddd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x3ff6bc4e\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x57970e93\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x57970e93\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5ed5b5af\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x3ff6bc4e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4eb7e95f\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2d72225b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1464:1515   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1452:1454   */\n      0x20\n        /* \"#utility.yul\":1437:1455   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      tag_40\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_52\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"NFT Tokens/Tk8.sol\":565:587  string[] public traits */\n    tag_8:\n      tag_42\n      tag_61\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"NFT Tokens/Tk8.sol\":1290:1499  function requestRandomTraits() public returns (bytes32 requestId) {... */\n    tag_9:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n        /* \"#utility.yul\":2442:2467   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2430:2432   */\n      0x20\n        /* \"#utility.yul\":2415:2433   */\n      add\n        /* \"NFT Tokens/Tk8.sol\":1290:1499  function requestRandomTraits() public returns (bytes32 requestId) {... */\n      tag_40\n        /* \"#utility.yul\":2296:2473   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      tag_52\n      tag_69\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"NFT Tokens/Tk8.sol\":498:528  uint256 public totalNFTsMinted */\n    tag_11:\n      tag_64\n      sload(0x0c)\n      dup2\n      jump\n        /* \"NFT Tokens/Tk8.sol\":277:301  address public linkToken */\n    tag_12:\n      sload(0x08)\n      tag_46\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"NFT Tokens/Tk8.sol\":598:640  mapping(uint => string[]) public nftTraits */\n    tag_13:\n      tag_42\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_14:\n      tag_46\n      tag_84\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_64\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"NFT Tokens/Tk8.sol\":1105:1197  function setBaseArtwork(string memory artwork) public {... */\n    tag_16:\n      tag_52\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9576:9783  function rawFulfillRandomness(bytes32 requestId, uint256 randomness) external {... */\n    tag_17:\n      tag_52\n      tag_97\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_42\n      tag_101\n      jump\t// in\n        /* \"NFT Tokens/Tk8.sol\":1203:1284  function addTrait(string memory trait) public {... */\n    tag_19:\n      tag_52\n      tag_104\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_20:\n      tag_52\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n        /* \"NFT Tokens/Tk8.sol\":234:271  address payable public vrfCoordinator */\n    tag_21:\n      sload(0x07)\n      tag_46\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"NFT Tokens/Tk8.sol\":2229:2344  function getNFTTraits(uint tokenId) public view returns(string[] memory) {... */\n    tag_22:\n      tag_114\n      tag_115\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_23:\n      tag_52\n      tag_120\n      calldatasize\n      0x04\n      tag_121\n      jump\t// in\n    tag_120:\n      tag_122\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_24:\n      tag_42\n      tag_124\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n        /* \"NFT Tokens/Tk8.sol\":414:432  uint256 public fee */\n    tag_25:\n      tag_64\n      sload(0x09)\n      dup2\n      jump\n        /* \"NFT Tokens/Tk8.sol\":534:559  string public baseArtwork */\n    tag_26:\n      tag_42\n      tag_131\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_27:\n      tag_36\n      tag_134\n      calldatasize\n      0x04\n      tag_135\n      jump\t// in\n    tag_134:\n      tag_136\n      jump\t// in\n        /* \"NFT Tokens/Tk8.sol\":467:492  uint256 public requestFee */\n    tag_28:\n      tag_64\n      sload(0x0b)\n      dup2\n      jump\n        /* \"NFT Tokens/Tk8.sol\":438:461  uint256 public gasLimit */\n    tag_29:\n      tag_64\n      sload(0x0a)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      tag_145\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_147\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_151\n      jump\t// in\n    tag_152:\n      dup1\n      iszero\n      tag_153\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_154\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_153)\n    tag_154:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_155:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_155\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_157:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7728:7743   */\n      dup1\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7710:7744   */\n      mstore\n        /* \"#utility.yul\":7760:7778   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7753:7787   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":7823:7838   */\n      dup3\n      and\n        /* \"#utility.yul\":7803:7821   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7796:7839   */\n      mstore\n        /* \"#utility.yul\":7645:7663   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_168\n        /* \"#utility.yul\":7470:7845   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk8.sol\":565:587  string[] public traits */\n    tag_62:\n      0x0e\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_151\n      jump\t// in\n    tag_177:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_178\n      swap1\n      tag_151\n      jump\t// in\n    tag_178:\n      dup1\n      iszero\n      tag_179\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_180\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_179)\n    tag_180:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_181:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_181\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"NFT Tokens/Tk8.sol\":1290:1499  function requestRandomTraits() public returns (bytes32 requestId) {... */\n    tag_65:\n        /* \"NFT Tokens/Tk8.sol\":1407:1417  requestFee */\n      sload(0x0b)\n        /* \"NFT Tokens/Tk8.sol\":1374:1403  LINK.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"NFT Tokens/Tk8.sol\":1397:1401  this */\n      address\n        /* \"NFT Tokens/Tk8.sol\":1374:1403  LINK.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"NFT Tokens/Tk8.sol\":1337:1354  bytes32 requestId */\n      0x00\n      swap2\n        /* \"NFT Tokens/Tk8.sol\":1407:1417  requestFee */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NFT Tokens/Tk8.sol\":1374:1378  LINK */\n      immutable(\"0xb2219b801710730437d0358146c829b62297a059eceaa0b40b27aea2daecf595\")\n        /* \"NFT Tokens/Tk8.sol\":1374:1388  LINK.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"NFT Tokens/Tk8.sol\":1374:1403  LINK.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"NFT Tokens/Tk8.sol\":1374:1417  LINK.balanceOf(address(this)) >= requestFee */\n      lt\n      iszero\n        /* \"NFT Tokens/Tk8.sol\":1366:1444  require(LINK.balanceOf(address(this)) >= requestFee, \"Not enough LINK tokens\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8241:8243   */\n      0x20\n        /* \"NFT Tokens/Tk8.sol\":1366:1444  require(LINK.balanceOf(address(this)) >= requestFee, \"Not enough LINK tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8223:8244   */\n      mstore\n        /* \"#utility.yul\":8280:8282   */\n      0x16\n        /* \"#utility.yul\":8260:8278   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8253:8283   */\n      mstore\n      shl(0x50, 0x4e6f7420656e6f756768204c494e4b20746f6b656e73)\n        /* \"#utility.yul\":8299:8317   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8292:8344   */\n      mstore\n        /* \"#utility.yul\":8361:8379   */\n      0x64\n      add\n        /* \"NFT Tokens/Tk8.sol\":1366:1444  require(LINK.balanceOf(address(this)) >= requestFee, \"Not enough LINK tokens\") */\n      tag_168\n        /* \"#utility.yul\":8039:8385   */\n      jump\n        /* \"NFT Tokens/Tk8.sol\":1366:1444  require(LINK.balanceOf(address(this)) >= requestFee, \"Not enough LINK tokens\") */\n    tag_188:\n        /* \"NFT Tokens/Tk8.sol\":1461:1492  requestRandomness(keyHash, fee) */\n      tag_191\n        /* \"NFT Tokens/Tk8.sol\":342:408  0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef */\n      0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\n        /* \"NFT Tokens/Tk8.sol\":1479:1486  keyHash */\n      0x00\n      shl\n        /* \"NFT Tokens/Tk8.sol\":1488:1491  fee */\n      sload(0x09)\n        /* \"NFT Tokens/Tk8.sol\":1461:1478  requestRandomness */\n      tag_192\n        /* \"NFT Tokens/Tk8.sol\":1461:1492  requestRandomness(keyHash, fee) */\n      jump\t// in\n    tag_191:\n        /* \"NFT Tokens/Tk8.sol\":1454:1492  return requestRandomness(keyHash, fee) */\n      swap1\n      pop\n        /* \"NFT Tokens/Tk8.sol\":1290:1499  function requestRandomTraits() public returns (bytes32 requestId) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk8.sol\":598:640  mapping(uint => string[]) public nftTraits */\n    tag_81:\n      mstore(0x20, 0x0f)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_151\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      tag_168\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_205:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"NFT Tokens/Tk8.sol\":1105:1197  function setBaseArtwork(string memory artwork) public {... */\n    tag_95:\n        /* \"NFT Tokens/Tk8.sol\":1169:1180  baseArtwork */\n      0x0d\n        /* \"NFT Tokens/Tk8.sol\":1169:1190  baseArtwork = artwork */\n      tag_162\n        /* \"NFT Tokens/Tk8.sol\":1183:1190  artwork */\n      dup3\n        /* \"NFT Tokens/Tk8.sol\":1169:1180  baseArtwork */\n      dup3\n        /* \"NFT Tokens/Tk8.sol\":1169:1190  baseArtwork = artwork */\n      tag_209\n      jump\t// in\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9576:9783  function rawFulfillRandomness(bytes32 requestId, uint256 randomness) external {... */\n    tag_99:\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9668:9678  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9682:9696  vrfCoordinator */\n      immutable(\"0x6dbb33232cde86c8a04f90a8bed9fc1c5ef520188a14538d96eb100d69bc2a94\")\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9668:9696  msg.sender == vrfCoordinator */\n      and\n      eq\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9660:9732  require(msg.sender == vrfCoordinator, \"Only VRFCoordinator can fulfill\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10762:10764   */\n      0x20\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9660:9732  require(msg.sender == vrfCoordinator, \"Only VRFCoordinator can fulfill\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10744:10765   */\n      mstore\n        /* \"#utility.yul\":10801:10803   */\n      0x1f\n        /* \"#utility.yul\":10781:10799   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10774:10804   */\n      mstore\n        /* \"#utility.yul\":10840:10873   */\n      0x4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00\n        /* \"#utility.yul\":10820:10838   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10813:10874   */\n      mstore\n        /* \"#utility.yul\":10891:10909   */\n      0x64\n      add\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9660:9732  require(msg.sender == vrfCoordinator, \"Only VRFCoordinator can fulfill\") */\n      tag_168\n        /* \"#utility.yul\":10560:10915   */\n      jump\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9660:9732  require(msg.sender == vrfCoordinator, \"Only VRFCoordinator can fulfill\") */\n    tag_211:\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9738:9778  fulfillRandomness(requestId, randomness) */\n      tag_162\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9756:9765  requestId */\n      dup3\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9767:9777  randomness */\n      dup3\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9738:9755  fulfillRandomness */\n      tag_215\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":9738:9778  fulfillRandomness(requestId, randomness) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n        /* \"NFT Tokens/Tk8.sol\":1203:1284  function addTrait(string memory trait) public {... */\n    tag_105:\n        /* \"NFT Tokens/Tk8.sol\":1259:1265  traits */\n      0x0e\n        /* \"NFT Tokens/Tk8.sol\":1259:1277  traits.push(trait) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      0xbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd\n      add\n      tag_162\n        /* \"NFT Tokens/Tk8.sol\":1271:1276  trait */\n      dup3\n        /* \"NFT Tokens/Tk8.sol\":1259:1277  traits.push(trait) */\n      dup3\n      tag_209\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_162\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"NFT Tokens/Tk8.sol\":2229:2344  function getNFTTraits(uint tokenId) public view returns(string[] memory) {... */\n    tag_116:\n        /* \"NFT Tokens/Tk8.sol\":2285:2300  string[] memory */\n      0x60\n        /* \"NFT Tokens/Tk8.sol\":2319:2328  nftTraits */\n      0x0f\n        /* \"NFT Tokens/Tk8.sol\":2319:2337  nftTraits[tokenId] */\n      0x00\n        /* \"NFT Tokens/Tk8.sol\":2329:2336  tokenId */\n      dup4\n        /* \"NFT Tokens/Tk8.sol\":2319:2337  nftTraits[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFT Tokens/Tk8.sol\":2312:2337  return nftTraits[tokenId] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_230:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_231\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      dup1\n      sload\n      tag_233\n      swap1\n      tag_151\n      jump\t// in\n    tag_233:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_234\n      swap1\n      tag_151\n      jump\t// in\n    tag_234:\n      dup1\n      iszero\n      tag_235\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_236\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_235)\n    tag_236:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_237:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_237\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_230)\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NFT Tokens/Tk8.sol\":2229:2344  function getNFTTraits(uint tokenId) public view returns(string[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_243:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_246\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_247)\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_250\n      swap3\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk8.sol\":534:559  string public baseArtwork */\n    tag_131:\n      0x0d\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_151\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2442:2467   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":2415:2433   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      tag_168\n        /* \"#utility.yul\":2296:2473   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_275:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_274:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_276\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":7732:8752  function requestRandomness(bytes32 _keyHash, uint256 _fee) internal returns (bytes32 requestId) {... */\n    tag_192:\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":7809:7826  bytes32 requestId */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":7834:7838  LINK */\n      immutable(\"0xb2219b801710730437d0358146c829b62297a059eceaa0b40b27aea2daecf595\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":7834:7854  LINK.transferAndCall */\n      and\n      0x4000aea0\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":7855:7869  vrfCoordinator */\n      immutable(\"0x6dbb33232cde86c8a04f90a8bed9fc1c5ef520188a14538d96eb100d69bc2a94\")\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":7871:7875  _fee */\n      dup5\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":7888:7896  _keyHash */\n      dup7\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":6589:6590  0 */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":7877:7920  abi.encode(_keyHash, USER_SEED_PLACEHOLDER) */\n      add(0x20, mload(0x40))\n      tag_278\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":11583:11608   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":11639:11641   */\n      0x20\n        /* \"#utility.yul\":11624:11642   */\n      dup3\n      add\n        /* \"#utility.yul\":11617:11651   */\n      mstore\n        /* \"#utility.yul\":11571:11573   */\n      0x40\n        /* \"#utility.yul\":11556:11574   */\n      add\n      swap1\n        /* \"#utility.yul\":11409:11657   */\n      jump\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":7877:7920  abi.encode(_keyHash, USER_SEED_PLACEHOLDER) */\n    tag_278:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":7834:7921  LINK.transferAndCall(vrfCoordinator, _fee, abi.encode(_keyHash, USER_SEED_PLACEHOLDER)) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_283\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_283:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      pop\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":8152:8167  uint256 vRFSeed */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":8235:8251  nonces[_keyHash] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":978:1029  abi.encode(_keyHash, _userSeed, _requester, _nonce) */\n      dup2\n      mload\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":15071:15096   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":15112:15130   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":15105:15139   */\n      dup6\n      swap1\n      mstore\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":8228:8232  this */\n      address\n        /* \"#utility.yul\":15155:15173   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":15148:15208   */\n      mstore\n        /* \"#utility.yul\":15224:15242   */\n      0x80\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":15217:15251   */\n      dup4\n      swap1\n      mstore\n        /* \"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":978:1029  abi.encode(_keyHash, _userSeed, _requester, _nonce) */\n      dup4\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":15043:15062   */\n      0xa0\n      swap1\n      swap2\n      add\n        /* \"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":978:1029  abi.encode(_keyHash, _userSeed, _requester, _nonce) */\n      swap1\n      swap3\n      mstore\n        /* \"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":968:1030  keccak256(abi.encode(_keyHash, _userSeed, _requester, _nonce)) */\n      dup2\n      mload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":8682:8698  nonces[_keyHash] */\n      dup7\n      dup5\n      mstore\n      swap3\n      swap1\n      swap2\n      mstore\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":8682:8702  nonces[_keyHash] + 1 */\n      tag_288\n      swap1\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":8701:8702  1 */\n      0x01\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":8682:8702  nonces[_keyHash] + 1 */\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":8663:8669  nonces */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":8663:8679  nonces[_keyHash] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":8663:8702  nonces[_keyHash] = nonces[_keyHash] + 1 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":1535:1576  abi.encodePacked(_keyHash, _vRFInputSeed) */\n      dup1\n      mload\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":12865:12884   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":12900:12912   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12893:12921   */\n      dup5\n      swap1\n      mstore\n        /* \"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":1535:1576  abi.encodePacked(_keyHash, _vRFInputSeed) */\n      dup2\n      mload\n      dup1\n      dup3\n      sub\n      dup4\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":12937:12949   */\n      0x60\n      swap1\n      swap2\n      add\n        /* \"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":1535:1576  abi.encodePacked(_keyHash, _vRFInputSeed) */\n      swap1\n      swap2\n      mstore\n        /* \"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":1525:1577  keccak256(abi.encodePacked(_keyHash, _vRFInputSeed)) */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":8715:8747  makeRequestId(_keyHash, vRFSeed) */\n    tag_290:\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":8708:8747  return makeRequestId(_keyHash, vRFSeed) */\n      swap5\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":7732:8752  function requestRandomness(bytes32 _keyHash, uint256 _fee) internal returns (bytes32 requestId) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk8.sol\":1505:2223  function fulfillRandomness(... */\n    tag_215:\n        /* \"NFT Tokens/Tk8.sol\":1621:1636  uint256 tokenId */\n      0x00\n        /* \"NFT Tokens/Tk8.sol\":1639:1654  totalNFTsMinted */\n      sload(0x0c)\n        /* \"NFT Tokens/Tk8.sol\":1657:1658  1 */\n      0x01\n        /* \"NFT Tokens/Tk8.sol\":1639:1658  totalNFTsMinted + 1 */\n      tag_293\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_293:\n        /* \"NFT Tokens/Tk8.sol\":1712:1718  traits */\n      0x0e\n        /* \"NFT Tokens/Tk8.sol\":1712:1725  traits.length */\n      sload\n        /* \"NFT Tokens/Tk8.sol\":1621:1658  uint256 tokenId = totalNFTsMinted + 1 */\n      swap1\n      swap2\n      pop\n        /* \"NFT Tokens/Tk8.sol\":1668:1696  string[] memory randomTraits */\n      0x00\n      swap1\n        /* \"NFT Tokens/Tk8.sol\":1699:1726  new string[](traits.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_295\n      jumpi\n      tag_295\n      tag_296\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_297\n      jumpi\n      dup2\n      0x20\n      add\n    tag_298:\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_298\n      jumpi\n      swap1\n      pop\n    tag_297:\n      pop\n        /* \"NFT Tokens/Tk8.sol\":1776:1792  new bytes32[](1) */\n      0x40\n      dup1\n      mload\n        /* \"NFT Tokens/Tk8.sol\":1790:1791  1 */\n      0x01\n        /* \"NFT Tokens/Tk8.sol\":1776:1792  new bytes32[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"NFT Tokens/Tk8.sol\":1668:1726  string[] memory randomTraits = new string[](traits.length) */\n      swap2\n      swap3\n      pop\n        /* \"NFT Tokens/Tk8.sol\":1745:1773  bytes32[] memory randomWords */\n      0x00\n      swap2\n        /* \"NFT Tokens/Tk8.sol\":1776:1792  new bytes32[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"NFT Tokens/Tk8.sol\":1745:1792  bytes32[] memory randomWords = new bytes32[](1) */\n      swap1\n      pop\n        /* \"NFT Tokens/Tk8.sol\":1827:1837  randomness */\n      dup4\n        /* \"NFT Tokens/Tk8.sol\":1819:1838  bytes32(randomness) */\n      0x00\n      shl\n        /* \"NFT Tokens/Tk8.sol\":1802:1813  randomWords */\n      dup2\n        /* \"NFT Tokens/Tk8.sol\":1814:1815  0 */\n      0x00\n        /* \"NFT Tokens/Tk8.sol\":1802:1816  randomWords[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_303\n      jumpi\n      tag_303\n      tag_304\n      jump\t// in\n    tag_303:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"NFT Tokens/Tk8.sol\":1802:1838  randomWords[0] = bytes32(randomness) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"NFT Tokens/Tk8.sol\":1862:1868  uint i */\n      0x00\n        /* \"NFT Tokens/Tk8.sol\":1857:2055  for (uint i = 0; i < traits.length; i++) {... */\n    tag_305:\n        /* \"NFT Tokens/Tk8.sol\":1878:1884  traits */\n      0x0e\n        /* \"NFT Tokens/Tk8.sol\":1878:1891  traits.length */\n      sload\n        /* \"NFT Tokens/Tk8.sol\":1874:1891  i < traits.length */\n      dup2\n      lt\n        /* \"NFT Tokens/Tk8.sol\":1857:2055  for (uint i = 0; i < traits.length; i++) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"NFT Tokens/Tk8.sol\":1912:1925  uint256 index */\n      0x00\n        /* \"NFT Tokens/Tk8.sol\":1986:1992  traits */\n      0x0e\n        /* \"NFT Tokens/Tk8.sol\":1986:1999  traits.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"NFT Tokens/Tk8.sol\":1963:1974  randomWords */\n      dup4\n        /* \"NFT Tokens/Tk8.sol\":1975:1976  0 */\n      0x00\n        /* \"NFT Tokens/Tk8.sol\":1963:1977  randomWords[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_309\n      jumpi\n      tag_309\n      tag_304\n      jump\t// in\n    tag_309:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"NFT Tokens/Tk8.sol\":1979:1980  i */\n      dup4\n        /* \"NFT Tokens/Tk8.sol\":1946:1981  abi.encodePacked(randomWords[0], i) */\n      add(0x20, mload(0x40))\n      tag_310\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":12865:12884   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":12909:12911   */\n      0x20\n        /* \"#utility.yul\":12900:12912   */\n      dup3\n      add\n        /* \"#utility.yul\":12893:12921   */\n      mstore\n        /* \"#utility.yul\":12946:12948   */\n      0x40\n        /* \"#utility.yul\":12937:12949   */\n      add\n      swap1\n        /* \"#utility.yul\":12708:12955   */\n      jump\n        /* \"NFT Tokens/Tk8.sol\":1946:1981  abi.encodePacked(randomWords[0], i) */\n    tag_310:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"NFT Tokens/Tk8.sol\":1936:1982  keccak256(abi.encodePacked(randomWords[0], i)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"NFT Tokens/Tk8.sol\":1928:1983  uint256(keccak256(abi.encodePacked(randomWords[0], i))) */\n      0x00\n      shr\n        /* \"NFT Tokens/Tk8.sol\":1928:1999  uint256(keccak256(abi.encodePacked(randomWords[0], i))) % traits.length */\n      tag_312\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n        /* \"NFT Tokens/Tk8.sol\":1912:1999  uint256 index = uint256(keccak256(abi.encodePacked(randomWords[0], i))) % traits.length */\n      swap1\n      pop\n        /* \"NFT Tokens/Tk8.sol\":2031:2037  traits */\n      0x0e\n        /* \"NFT Tokens/Tk8.sol\":2038:2043  index */\n      dup2\n        /* \"NFT Tokens/Tk8.sol\":2031:2044  traits[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_315\n      jumpi\n      tag_315\n      tag_304\n      jump\t// in\n    tag_315:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"NFT Tokens/Tk8.sol\":2013:2044  randomTraits[i] = traits[index] */\n      dup1\n      sload\n      tag_317\n      swap1\n      tag_151\n      jump\t// in\n    tag_317:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_318\n      swap1\n      tag_151\n      jump\t// in\n    tag_318:\n      dup1\n      iszero\n      tag_319\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_320\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_319)\n    tag_320:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_321:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_321\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_319:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"NFT Tokens/Tk8.sol\":2013:2025  randomTraits */\n      dup5\n        /* \"NFT Tokens/Tk8.sol\":2026:2027  i */\n      dup4\n        /* \"NFT Tokens/Tk8.sol\":2013:2028  randomTraits[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_323\n      jumpi\n      tag_323\n      tag_304\n      jump\t// in\n    tag_323:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"NFT Tokens/Tk8.sol\":2013:2044  randomTraits[i] = traits[index] */\n      mstore\n      pop\n        /* \"NFT Tokens/Tk8.sol\":1893:1896  i++ */\n      0x01\n      add\n        /* \"NFT Tokens/Tk8.sol\":1857:2055  for (uint i = 0; i < traits.length; i++) {... */\n      jump(tag_305)\n    tag_306:\n      pop\n        /* \"NFT Tokens/Tk8.sol\":2073:2091  nftTraits[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"NFT Tokens/Tk8.sol\":2073:2082  nftTraits */\n      0x0f\n        /* \"NFT Tokens/Tk8.sol\":2073:2091  nftTraits[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"NFT Tokens/Tk8.sol\":2073:2106  nftTraits[tokenId] = randomTraits */\n      dup4\n      mload\n      tag_324\n      swap3\n      dup6\n      add\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      pop\n        /* \"NFT Tokens/Tk8.sol\":2116:2142  _mint(msg.sender, tokenId) */\n      tag_326\n        /* \"NFT Tokens/Tk8.sol\":2122:2132  msg.sender */\n      caller\n        /* \"NFT Tokens/Tk8.sol\":2134:2141  tokenId */\n      dup5\n        /* \"NFT Tokens/Tk8.sol\":2116:2121  _mint */\n      tag_327\n        /* \"NFT Tokens/Tk8.sol\":2116:2142  _mint(msg.sender, tokenId) */\n      jump\t// in\n    tag_326:\n        /* \"NFT Tokens/Tk8.sol\":2152:2167  totalNFTsMinted */\n      0x0c\n        /* \"NFT Tokens/Tk8.sol\":2152:2169  totalNFTsMinted++ */\n      dup1\n      sload\n      swap1\n        /* \"NFT Tokens/Tk8.sol\":2152:2167  totalNFTsMinted */\n      0x00\n        /* \"NFT Tokens/Tk8.sol\":2152:2169  totalNFTsMinted++ */\n      tag_328\n      dup4\n      tag_329\n      jump\t// in\n    tag_328:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"NFT Tokens/Tk8.sol\":2184:2216  NFTMinted(tokenId, randomTraits) */\n      0x65f952dd632608f6d1db9e9311e0972e973f6e783ba47c13460083c575bf07f3\n        /* \"NFT Tokens/Tk8.sol\":2194:2201  tokenId */\n      dup4\n        /* \"NFT Tokens/Tk8.sol\":2203:2215  randomTraits */\n      dup4\n        /* \"NFT Tokens/Tk8.sol\":2184:2216  NFTMinted(tokenId, randomTraits) */\n      mload(0x40)\n      tag_330\n      swap3\n      swap2\n      swap1\n      tag_331\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NFT Tokens/Tk8.sol\":1611:2223  {... */\n      pop\n      pop\n      pop\n        /* \"NFT Tokens/Tk8.sol\":1505:2223  function fulfillRandomness(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      tag_168\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_339\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_340\n      jump\t// in\n    tag_339:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_341\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_342\n      swap2\n      dup2\n      add\n      swap1\n      tag_343\n      jump\t// in\n    tag_342:\n      0x01\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_344\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_349\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_348)\n    tag_349:\n      0x60\n      swap2\n      pop\n    tag_348:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      tag_168\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_344:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      tag_168\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_358\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_359\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_361\n      jumpi\n      tag_361\n      tag_296\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_362\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_362:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_363:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_363\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_371\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_371:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      tag_374\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_374:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_375\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_376\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_375:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      tag_168\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_377:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_379\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_379:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_372:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_381\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_382\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_194\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_384\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2442:2467   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2415:2433   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      tag_168\n        /* \"#utility.yul\":2296:2473   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14753:14785   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14735:14786   */\n      mstore\n        /* \"#utility.yul\":14802:14820   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14795:14829   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":14708:14726   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      tag_168\n        /* \"#utility.yul\":14561:14835   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_327:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_395\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      tag_168\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_397\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_397:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x39e35637)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      tag_168\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_401\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_401:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_404\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_404:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_407\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_407:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_410\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_410:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_413:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_416\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_416:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      tag_290\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_423\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_423\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_423:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_290\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      swap2\n      and\n      eq\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n    tag_325:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_428\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_427:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_428\n      jumpi\n      dup3\n      mload\n      dup3\n      swap1\n      tag_429\n      swap1\n      dup3\n      tag_209\n      jump\t// in\n    tag_429:\n      pop\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_427)\n    tag_428:\n      pop\n      tag_430\n      swap3\n      swap2\n      pop\n      tag_431\n      jump\t// in\n    tag_430:\n      pop\n      swap1\n      jump\t// out\n    tag_431:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_430\n      jumpi\n      0x00\n      tag_434\n      dup3\n      dup3\n      tag_435\n      jump\t// in\n    tag_434:\n      pop\n      0x01\n      add\n      jump(tag_431)\n    tag_435:\n      pop\n      dup1\n      sload\n      tag_436\n      swap1\n      tag_151\n      jump\t// in\n    tag_436:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_438\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_438:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_439\n      swap2\n      swap1\n      tag_440\n      jump\t// in\n    tag_439:\n      pop\n      jump\t// out\n    tag_440:\n    tag_441:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_430\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_441)\n        /* \"#utility.yul\":14:145   */\n    tag_443:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_38:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_458:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_247\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_443\n      jump\t// in\n        /* \"#utility.yul\":592:892   */\n    tag_444:\n        /* \"#utility.yul\":645:648   */\n      0x00\n        /* \"#utility.yul\":683:688   */\n      dup2\n        /* \"#utility.yul\":677:689   */\n      mload\n        /* \"#utility.yul\":710:716   */\n      dup1\n        /* \"#utility.yul\":705:708   */\n      dup5\n        /* \"#utility.yul\":698:717   */\n      mstore\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":759:763   */\n      0x20\n        /* \"#utility.yul\":752:757   */\n      dup5\n        /* \"#utility.yul\":748:764   */\n      add\n        /* \"#utility.yul\":741:745   */\n      0x20\n        /* \"#utility.yul\":736:739   */\n      dup7\n        /* \"#utility.yul\":732:746   */\n      add\n        /* \"#utility.yul\":726:773   */\n      mcopy\n        /* \"#utility.yul\":818:819   */\n      0x00\n        /* \"#utility.yul\":811:815   */\n      0x20\n        /* \"#utility.yul\":802:808   */\n      dup3\n        /* \"#utility.yul\":797:800   */\n      dup7\n        /* \"#utility.yul\":793:809   */\n      add\n        /* \"#utility.yul\":789:816   */\n      add\n        /* \"#utility.yul\":782:820   */\n      mstore\n        /* \"#utility.yul\":881:885   */\n      0x20\n        /* \"#utility.yul\":874:876   */\n      0x1f\n        /* \"#utility.yul\":870:877   */\n      not\n        /* \"#utility.yul\":865:867   */\n      0x1f\n        /* \"#utility.yul\":857:863   */\n      dup4\n        /* \"#utility.yul\":853:868   */\n      add\n        /* \"#utility.yul\":849:878   */\n      and\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":840:879   */\n      add\n        /* \"#utility.yul\":836:886   */\n      add\n        /* \"#utility.yul\":829:886   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":592:892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1128   */\n    tag_45:\n        /* \"#utility.yul\":1046:1048   */\n      0x20\n        /* \"#utility.yul\":1035:1044   */\n      dup2\n        /* \"#utility.yul\":1028:1049   */\n      mstore\n        /* \"#utility.yul\":1009:1013   */\n      0x00\n        /* \"#utility.yul\":1066:1122   */\n      tag_247\n        /* \"#utility.yul\":1118:1120   */\n      0x20\n        /* \"#utility.yul\":1107:1116   */\n      dup4\n        /* \"#utility.yul\":1103:1121   */\n      add\n        /* \"#utility.yul\":1095:1101   */\n      dup5\n        /* \"#utility.yul\":1066:1122   */\n      tag_444\n      jump\t// in\n        /* \"#utility.yul\":1133:1313   */\n    tag_48:\n        /* \"#utility.yul\":1192:1198   */\n      0x00\n        /* \"#utility.yul\":1245:1247   */\n      0x20\n        /* \"#utility.yul\":1233:1242   */\n      dup3\n        /* \"#utility.yul\":1224:1231   */\n      dup5\n        /* \"#utility.yul\":1220:1243   */\n      sub\n        /* \"#utility.yul\":1216:1248   */\n      slt\n        /* \"#utility.yul\":1213:1265   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":1261:1262   */\n      0x00\n        /* \"#utility.yul\":1258:1259   */\n      dup1\n        /* \"#utility.yul\":1251:1263   */\n      revert\n        /* \"#utility.yul\":1213:1265   */\n    tag_465:\n      pop\n        /* \"#utility.yul\":1284:1307   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1133:1313   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1526:1699   */\n    tag_445:\n        /* \"#utility.yul\":1594:1614   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1643:1674   */\n      dup2\n      and\n        /* \"#utility.yul\":1633:1675   */\n      dup2\n      eq\n        /* \"#utility.yul\":1623:1693   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":1689:1690   */\n      0x00\n        /* \"#utility.yul\":1686:1687   */\n      dup1\n        /* \"#utility.yul\":1679:1691   */\n      revert\n        /* \"#utility.yul\":1623:1693   */\n    tag_468:\n        /* \"#utility.yul\":1526:1699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1704:1958   */\n    tag_54:\n        /* \"#utility.yul\":1772:1778   */\n      0x00\n        /* \"#utility.yul\":1780:1786   */\n      dup1\n        /* \"#utility.yul\":1833:1835   */\n      0x40\n        /* \"#utility.yul\":1821:1830   */\n      dup4\n        /* \"#utility.yul\":1812:1819   */\n      dup6\n        /* \"#utility.yul\":1808:1831   */\n      sub\n        /* \"#utility.yul\":1804:1836   */\n      slt\n        /* \"#utility.yul\":1801:1853   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":1849:1850   */\n      0x00\n        /* \"#utility.yul\":1846:1847   */\n      dup1\n        /* \"#utility.yul\":1839:1851   */\n      revert\n        /* \"#utility.yul\":1801:1853   */\n    tag_470:\n        /* \"#utility.yul\":1872:1901   */\n      tag_471\n        /* \"#utility.yul\":1891:1900   */\n      dup4\n        /* \"#utility.yul\":1872:1901   */\n      tag_445\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":1862:1901   */\n      swap5\n        /* \"#utility.yul\":1948:1950   */\n      0x20\n        /* \"#utility.yul\":1933:1951   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1920:1952   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1704:1958   */\n      jump\t// out\n        /* \"#utility.yul\":1963:2291   */\n    tag_58:\n        /* \"#utility.yul\":2040:2046   */\n      0x00\n        /* \"#utility.yul\":2048:2054   */\n      dup1\n        /* \"#utility.yul\":2056:2062   */\n      0x00\n        /* \"#utility.yul\":2109:2111   */\n      0x60\n        /* \"#utility.yul\":2097:2106   */\n      dup5\n        /* \"#utility.yul\":2088:2095   */\n      dup7\n        /* \"#utility.yul\":2084:2107   */\n      sub\n        /* \"#utility.yul\":2080:2112   */\n      slt\n        /* \"#utility.yul\":2077:2129   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":2125:2126   */\n      0x00\n        /* \"#utility.yul\":2122:2123   */\n      dup1\n        /* \"#utility.yul\":2115:2127   */\n      revert\n        /* \"#utility.yul\":2077:2129   */\n    tag_473:\n        /* \"#utility.yul\":2148:2177   */\n      tag_474\n        /* \"#utility.yul\":2167:2176   */\n      dup5\n        /* \"#utility.yul\":2148:2177   */\n      tag_445\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":2138:2177   */\n      swap3\n      pop\n        /* \"#utility.yul\":2196:2234   */\n      tag_475\n        /* \"#utility.yul\":2230:2232   */\n      0x20\n        /* \"#utility.yul\":2219:2228   */\n      dup6\n        /* \"#utility.yul\":2215:2233   */\n      add\n        /* \"#utility.yul\":2196:2234   */\n      tag_445\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":2186:2234   */\n      swap2\n      pop\n        /* \"#utility.yul\":2281:2283   */\n      0x40\n        /* \"#utility.yul\":2270:2279   */\n      dup5\n        /* \"#utility.yul\":2266:2284   */\n      add\n        /* \"#utility.yul\":2253:2285   */\n      calldataload\n        /* \"#utility.yul\":2243:2285   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2291   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2660:2908   */\n    tag_80:\n        /* \"#utility.yul\":2728:2734   */\n      0x00\n        /* \"#utility.yul\":2736:2742   */\n      dup1\n        /* \"#utility.yul\":2789:2791   */\n      0x40\n        /* \"#utility.yul\":2777:2786   */\n      dup4\n        /* \"#utility.yul\":2768:2775   */\n      dup6\n        /* \"#utility.yul\":2764:2787   */\n      sub\n        /* \"#utility.yul\":2760:2792   */\n      slt\n        /* \"#utility.yul\":2757:2809   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":2805:2806   */\n      0x00\n        /* \"#utility.yul\":2802:2803   */\n      dup1\n        /* \"#utility.yul\":2795:2807   */\n      revert\n        /* \"#utility.yul\":2757:2809   */\n    tag_479:\n      pop\n      pop\n        /* \"#utility.yul\":2828:2851   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2898:2900   */\n      0x20\n        /* \"#utility.yul\":2883:2901   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2870:2902   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2660:2908   */\n      jump\t// out\n        /* \"#utility.yul\":2913:3099   */\n    tag_89:\n        /* \"#utility.yul\":2972:2978   */\n      0x00\n        /* \"#utility.yul\":3025:3027   */\n      0x20\n        /* \"#utility.yul\":3013:3022   */\n      dup3\n        /* \"#utility.yul\":3004:3011   */\n      dup5\n        /* \"#utility.yul\":3000:3023   */\n      sub\n        /* \"#utility.yul\":2996:3028   */\n      slt\n        /* \"#utility.yul\":2993:3045   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":3041:3042   */\n      0x00\n        /* \"#utility.yul\":3038:3039   */\n      dup1\n        /* \"#utility.yul\":3031:3043   */\n      revert\n        /* \"#utility.yul\":2993:3045   */\n    tag_481:\n        /* \"#utility.yul\":3064:3093   */\n      tag_247\n        /* \"#utility.yul\":3083:3092   */\n      dup3\n        /* \"#utility.yul\":3064:3093   */\n      tag_445\n      jump\t// in\n        /* \"#utility.yul\":3104:3231   */\n    tag_296:\n        /* \"#utility.yul\":3165:3175   */\n      0x4e487b71\n        /* \"#utility.yul\":3160:3163   */\n      0xe0\n        /* \"#utility.yul\":3156:3176   */\n      shl\n        /* \"#utility.yul\":3153:3154   */\n      0x00\n        /* \"#utility.yul\":3146:3177   */\n      mstore\n        /* \"#utility.yul\":3196:3200   */\n      0x41\n        /* \"#utility.yul\":3193:3194   */\n      0x04\n        /* \"#utility.yul\":3186:3201   */\n      mstore\n        /* \"#utility.yul\":3220:3224   */\n      0x24\n        /* \"#utility.yul\":3217:3218   */\n      0x00\n        /* \"#utility.yul\":3210:3225   */\n      revert\n        /* \"#utility.yul\":3236:3868   */\n    tag_446:\n        /* \"#utility.yul\":3301:3306   */\n      0x00\n        /* \"#utility.yul\":3331:3349   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3372:3374   */\n      dup1\n        /* \"#utility.yul\":3364:3370   */\n      dup5\n        /* \"#utility.yul\":3361:3375   */\n      gt\n        /* \"#utility.yul\":3358:3398   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":3378:3396   */\n      tag_486\n      tag_296\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":3453:3455   */\n      0x40\n        /* \"#utility.yul\":3447:3456   */\n      mload\n        /* \"#utility.yul\":3421:3423   */\n      0x1f\n        /* \"#utility.yul\":3507:3522   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3503:3527   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3529:3531   */\n      0x3f\n        /* \"#utility.yul\":3499:3532   */\n      add\n        /* \"#utility.yul\":3495:3537   */\n      and\n        /* \"#utility.yul\":3483:3538   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3553:3571   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3573:3595   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3550:3596   */\n      or\n        /* \"#utility.yul\":3547:3619   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":3599:3617   */\n      tag_488\n      tag_296\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":3639:3649   */\n      dup2\n        /* \"#utility.yul\":3635:3637   */\n      0x40\n        /* \"#utility.yul\":3628:3650   */\n      mstore\n        /* \"#utility.yul\":3668:3674   */\n      dup1\n        /* \"#utility.yul\":3659:3674   */\n      swap4\n      pop\n        /* \"#utility.yul\":3698:3704   */\n      dup6\n        /* \"#utility.yul\":3690:3696   */\n      dup2\n        /* \"#utility.yul\":3683:3705   */\n      mstore\n        /* \"#utility.yul\":3738:3741   */\n      dup7\n        /* \"#utility.yul\":3729:3735   */\n      dup7\n        /* \"#utility.yul\":3724:3727   */\n      dup7\n        /* \"#utility.yul\":3720:3736   */\n      add\n        /* \"#utility.yul\":3717:3742   */\n      gt\n        /* \"#utility.yul\":3714:3759   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":3755:3756   */\n      0x00\n        /* \"#utility.yul\":3752:3753   */\n      dup1\n        /* \"#utility.yul\":3745:3757   */\n      revert\n        /* \"#utility.yul\":3714:3759   */\n    tag_489:\n        /* \"#utility.yul\":3805:3811   */\n      dup6\n        /* \"#utility.yul\":3800:3803   */\n      dup6\n        /* \"#utility.yul\":3793:3797   */\n      0x20\n        /* \"#utility.yul\":3785:3791   */\n      dup4\n        /* \"#utility.yul\":3781:3798   */\n      add\n        /* \"#utility.yul\":3768:3812   */\n      calldatacopy\n        /* \"#utility.yul\":3860:3861   */\n      0x00\n        /* \"#utility.yul\":3853:3857   */\n      0x20\n        /* \"#utility.yul\":3844:3850   */\n      dup8\n        /* \"#utility.yul\":3836:3842   */\n      dup4\n        /* \"#utility.yul\":3832:3851   */\n      add\n        /* \"#utility.yul\":3828:3858   */\n      add\n        /* \"#utility.yul\":3821:3862   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3236:3868   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3873:4324   */\n    tag_94:\n        /* \"#utility.yul\":3942:3948   */\n      0x00\n        /* \"#utility.yul\":3995:3997   */\n      0x20\n        /* \"#utility.yul\":3983:3992   */\n      dup3\n        /* \"#utility.yul\":3974:3981   */\n      dup5\n        /* \"#utility.yul\":3970:3993   */\n      sub\n        /* \"#utility.yul\":3966:3998   */\n      slt\n        /* \"#utility.yul\":3963:4015   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":4011:4012   */\n      0x00\n        /* \"#utility.yul\":4008:4009   */\n      dup1\n        /* \"#utility.yul\":4001:4013   */\n      revert\n        /* \"#utility.yul\":3963:4015   */\n    tag_491:\n        /* \"#utility.yul\":4051:4060   */\n      dup2\n        /* \"#utility.yul\":4038:4061   */\n      calldataload\n        /* \"#utility.yul\":4084:4102   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4076:4082   */\n      dup2\n        /* \"#utility.yul\":4073:4103   */\n      gt\n        /* \"#utility.yul\":4070:4120   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":4116:4117   */\n      0x00\n        /* \"#utility.yul\":4113:4114   */\n      dup1\n        /* \"#utility.yul\":4106:4118   */\n      revert\n        /* \"#utility.yul\":4070:4120   */\n    tag_492:\n        /* \"#utility.yul\":4139:4161   */\n      dup3\n      add\n        /* \"#utility.yul\":4192:4196   */\n      0x1f\n        /* \"#utility.yul\":4184:4197   */\n      dup2\n      add\n        /* \"#utility.yul\":4180:4207   */\n      dup5\n      sgt\n        /* \"#utility.yul\":4170:4225   */\n      tag_493\n      jumpi\n        /* \"#utility.yul\":4221:4222   */\n      0x00\n        /* \"#utility.yul\":4218:4219   */\n      dup1\n        /* \"#utility.yul\":4211:4223   */\n      revert\n        /* \"#utility.yul\":4170:4225   */\n    tag_493:\n        /* \"#utility.yul\":4244:4318   */\n      tag_290\n        /* \"#utility.yul\":4310:4317   */\n      dup5\n        /* \"#utility.yul\":4305:4307   */\n      dup3\n        /* \"#utility.yul\":4292:4308   */\n      calldataload\n        /* \"#utility.yul\":4287:4289   */\n      0x20\n        /* \"#utility.yul\":4283:4285   */\n      dup5\n        /* \"#utility.yul\":4279:4290   */\n      add\n        /* \"#utility.yul\":4244:4318   */\n      tag_446\n      jump\t// in\n        /* \"#utility.yul\":4582:4700   */\n    tag_447:\n        /* \"#utility.yul\":4668:4673   */\n      dup1\n        /* \"#utility.yul\":4661:4674   */\n      iszero\n        /* \"#utility.yul\":4654:4675   */\n      iszero\n        /* \"#utility.yul\":4647:4652   */\n      dup2\n        /* \"#utility.yul\":4644:4676   */\n      eq\n        /* \"#utility.yul\":4634:4694   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":4690:4691   */\n      0x00\n        /* \"#utility.yul\":4687:4688   */\n      dup1\n        /* \"#utility.yul\":4680:4692   */\n      revert\n        /* \"#utility.yul\":4705:5020   */\n    tag_108:\n        /* \"#utility.yul\":4770:4776   */\n      0x00\n        /* \"#utility.yul\":4778:4784   */\n      dup1\n        /* \"#utility.yul\":4831:4833   */\n      0x40\n        /* \"#utility.yul\":4819:4828   */\n      dup4\n        /* \"#utility.yul\":4810:4817   */\n      dup6\n        /* \"#utility.yul\":4806:4829   */\n      sub\n        /* \"#utility.yul\":4802:4834   */\n      slt\n        /* \"#utility.yul\":4799:4851   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":4847:4848   */\n      0x00\n        /* \"#utility.yul\":4844:4845   */\n      dup1\n        /* \"#utility.yul\":4837:4849   */\n      revert\n        /* \"#utility.yul\":4799:4851   */\n    tag_500:\n        /* \"#utility.yul\":4870:4899   */\n      tag_501\n        /* \"#utility.yul\":4889:4898   */\n      dup4\n        /* \"#utility.yul\":4870:4899   */\n      tag_445\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":4860:4899   */\n      swap2\n      pop\n        /* \"#utility.yul\":4949:4951   */\n      0x20\n        /* \"#utility.yul\":4938:4947   */\n      dup4\n        /* \"#utility.yul\":4934:4952   */\n      add\n        /* \"#utility.yul\":4921:4953   */\n      calldataload\n        /* \"#utility.yul\":4962:4990   */\n      tag_502\n        /* \"#utility.yul\":4984:4989   */\n      dup2\n        /* \"#utility.yul\":4962:4990   */\n      tag_447\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":5009:5014   */\n      dup1\n        /* \"#utility.yul\":4999:5014   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4705:5020   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5249:5858   */\n    tag_448:\n        /* \"#utility.yul\":5301:5304   */\n      0x00\n        /* \"#utility.yul\":5332:5335   */\n      dup3\n        /* \"#utility.yul\":5364:5369   */\n      dup3\n        /* \"#utility.yul\":5358:5370   */\n      mload\n        /* \"#utility.yul\":5391:5397   */\n      dup1\n        /* \"#utility.yul\":5386:5389   */\n      dup6\n        /* \"#utility.yul\":5379:5398   */\n      mstore\n        /* \"#utility.yul\":5417:5421   */\n      0x20\n        /* \"#utility.yul\":5446:5450   */\n      dup1\n        /* \"#utility.yul\":5441:5444   */\n      dup7\n        /* \"#utility.yul\":5437:5451   */\n      add\n        /* \"#utility.yul\":5430:5451   */\n      swap6\n      pop\n        /* \"#utility.yul\":5504:5508   */\n      0x20\n        /* \"#utility.yul\":5494:5500   */\n      dup3\n        /* \"#utility.yul\":5491:5492   */\n      0x05\n        /* \"#utility.yul\":5487:5501   */\n      shl\n        /* \"#utility.yul\":5480:5485   */\n      dup5\n        /* \"#utility.yul\":5476:5502   */\n      add\n        /* \"#utility.yul\":5472:5509   */\n      add\n        /* \"#utility.yul\":5543:5547   */\n      0x20\n        /* \"#utility.yul\":5536:5541   */\n      dup7\n        /* \"#utility.yul\":5532:5548   */\n      add\n        /* \"#utility.yul\":5566:5567   */\n      0x00\n        /* \"#utility.yul\":5576:5832   */\n    tag_505:\n        /* \"#utility.yul\":5590:5596   */\n      dup5\n        /* \"#utility.yul\":5587:5588   */\n      dup2\n        /* \"#utility.yul\":5584:5597   */\n      lt\n        /* \"#utility.yul\":5576:5832   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":5677:5679   */\n      0x1f\n        /* \"#utility.yul\":5673:5680   */\n      not\n        /* \"#utility.yul\":5665:5670   */\n      dup7\n        /* \"#utility.yul\":5659:5663   */\n      dup5\n        /* \"#utility.yul\":5655:5671   */\n      sub\n        /* \"#utility.yul\":5651:5681   */\n      add\n        /* \"#utility.yul\":5646:5649   */\n      dup10\n        /* \"#utility.yul\":5639:5682   */\n      mstore\n        /* \"#utility.yul\":5703:5752   */\n      tag_508\n        /* \"#utility.yul\":5747:5751   */\n      dup4\n        /* \"#utility.yul\":5738:5744   */\n      dup4\n        /* \"#utility.yul\":5732:5745   */\n      mload\n        /* \"#utility.yul\":5703:5752   */\n      tag_444\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":5810:5822   */\n      swap9\n      dup5\n      add\n      swap9\n        /* \"#utility.yul\":5695:5752   */\n      swap3\n      pop\n        /* \"#utility.yul\":5775:5790   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":5612:5613   */\n      0x01\n        /* \"#utility.yul\":5605:5614   */\n      add\n        /* \"#utility.yul\":5576:5832   */\n      jump(tag_505)\n    tag_507:\n      pop\n        /* \"#utility.yul\":5848:5852   */\n      swap1\n      swap8\n        /* \"#utility.yul\":5249:5858   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5863:6143   */\n    tag_118:\n        /* \"#utility.yul\":6062:6064   */\n      0x20\n        /* \"#utility.yul\":6051:6060   */\n      dup2\n        /* \"#utility.yul\":6044:6065   */\n      mstore\n        /* \"#utility.yul\":6025:6029   */\n      0x00\n        /* \"#utility.yul\":6082:6137   */\n      tag_247\n        /* \"#utility.yul\":6133:6135   */\n      0x20\n        /* \"#utility.yul\":6122:6131   */\n      dup4\n        /* \"#utility.yul\":6118:6136   */\n      add\n        /* \"#utility.yul\":6110:6116   */\n      dup5\n        /* \"#utility.yul\":6082:6137   */\n      tag_448\n      jump\t// in\n        /* \"#utility.yul\":6148:6815   */\n    tag_121:\n        /* \"#utility.yul\":6243:6249   */\n      0x00\n        /* \"#utility.yul\":6251:6257   */\n      dup1\n        /* \"#utility.yul\":6259:6265   */\n      0x00\n        /* \"#utility.yul\":6267:6273   */\n      dup1\n        /* \"#utility.yul\":6320:6323   */\n      0x80\n        /* \"#utility.yul\":6308:6317   */\n      dup6\n        /* \"#utility.yul\":6299:6306   */\n      dup8\n        /* \"#utility.yul\":6295:6318   */\n      sub\n        /* \"#utility.yul\":6291:6324   */\n      slt\n        /* \"#utility.yul\":6288:6341   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":6337:6338   */\n      0x00\n        /* \"#utility.yul\":6334:6335   */\n      dup1\n        /* \"#utility.yul\":6327:6339   */\n      revert\n        /* \"#utility.yul\":6288:6341   */\n    tag_512:\n        /* \"#utility.yul\":6360:6389   */\n      tag_513\n        /* \"#utility.yul\":6379:6388   */\n      dup6\n        /* \"#utility.yul\":6360:6389   */\n      tag_445\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":6350:6389   */\n      swap4\n      pop\n        /* \"#utility.yul\":6408:6446   */\n      tag_514\n        /* \"#utility.yul\":6442:6444   */\n      0x20\n        /* \"#utility.yul\":6431:6440   */\n      dup7\n        /* \"#utility.yul\":6427:6445   */\n      add\n        /* \"#utility.yul\":6408:6446   */\n      tag_445\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":6398:6446   */\n      swap3\n      pop\n        /* \"#utility.yul\":6493:6495   */\n      0x40\n        /* \"#utility.yul\":6482:6491   */\n      dup6\n        /* \"#utility.yul\":6478:6496   */\n      add\n        /* \"#utility.yul\":6465:6497   */\n      calldataload\n        /* \"#utility.yul\":6455:6497   */\n      swap2\n      pop\n        /* \"#utility.yul\":6548:6550   */\n      0x60\n        /* \"#utility.yul\":6537:6546   */\n      dup6\n        /* \"#utility.yul\":6533:6551   */\n      add\n        /* \"#utility.yul\":6520:6552   */\n      calldataload\n        /* \"#utility.yul\":6575:6593   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6567:6573   */\n      dup2\n        /* \"#utility.yul\":6564:6594   */\n      gt\n        /* \"#utility.yul\":6561:6611   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":6607:6608   */\n      0x00\n        /* \"#utility.yul\":6604:6605   */\n      dup1\n        /* \"#utility.yul\":6597:6609   */\n      revert\n        /* \"#utility.yul\":6561:6611   */\n    tag_515:\n        /* \"#utility.yul\":6630:6652   */\n      dup6\n      add\n        /* \"#utility.yul\":6683:6687   */\n      0x1f\n        /* \"#utility.yul\":6675:6688   */\n      dup2\n      add\n        /* \"#utility.yul\":6671:6698   */\n      dup8\n      sgt\n        /* \"#utility.yul\":6661:6716   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":6712:6713   */\n      0x00\n        /* \"#utility.yul\":6709:6710   */\n      dup1\n        /* \"#utility.yul\":6702:6714   */\n      revert\n        /* \"#utility.yul\":6661:6716   */\n    tag_516:\n        /* \"#utility.yul\":6735:6809   */\n      tag_517\n        /* \"#utility.yul\":6801:6808   */\n      dup8\n        /* \"#utility.yul\":6796:6798   */\n      dup3\n        /* \"#utility.yul\":6783:6799   */\n      calldataload\n        /* \"#utility.yul\":6778:6780   */\n      0x20\n        /* \"#utility.yul\":6774:6776   */\n      dup5\n        /* \"#utility.yul\":6770:6781   */\n      add\n        /* \"#utility.yul\":6735:6809   */\n      tag_446\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":6725:6809   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6148:6815   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6820:7080   */\n    tag_135:\n        /* \"#utility.yul\":6888:6894   */\n      0x00\n        /* \"#utility.yul\":6896:6902   */\n      dup1\n        /* \"#utility.yul\":6949:6951   */\n      0x40\n        /* \"#utility.yul\":6937:6946   */\n      dup4\n        /* \"#utility.yul\":6928:6935   */\n      dup6\n        /* \"#utility.yul\":6924:6947   */\n      sub\n        /* \"#utility.yul\":6920:6952   */\n      slt\n        /* \"#utility.yul\":6917:6969   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":6965:6966   */\n      0x00\n        /* \"#utility.yul\":6962:6963   */\n      dup1\n        /* \"#utility.yul\":6955:6967   */\n      revert\n        /* \"#utility.yul\":6917:6969   */\n    tag_519:\n        /* \"#utility.yul\":6988:7017   */\n      tag_520\n        /* \"#utility.yul\":7007:7016   */\n      dup4\n        /* \"#utility.yul\":6988:7017   */\n      tag_445\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":6978:7017   */\n      swap2\n      pop\n        /* \"#utility.yul\":7036:7074   */\n      tag_521\n        /* \"#utility.yul\":7070:7072   */\n      0x20\n        /* \"#utility.yul\":7059:7068   */\n      dup5\n        /* \"#utility.yul\":7055:7073   */\n      add\n        /* \"#utility.yul\":7036:7074   */\n      tag_445\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":7026:7074   */\n      swap1\n      pop\n        /* \"#utility.yul\":6820:7080   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7085:7465   */\n    tag_151:\n        /* \"#utility.yul\":7164:7165   */\n      0x01\n        /* \"#utility.yul\":7160:7172   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7207:7219   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7228:7289   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":7282:7286   */\n      0x7f\n        /* \"#utility.yul\":7274:7280   */\n      dup3\n        /* \"#utility.yul\":7270:7287   */\n      and\n        /* \"#utility.yul\":7260:7287   */\n      swap2\n      pop\n        /* \"#utility.yul\":7228:7289   */\n    tag_523:\n        /* \"#utility.yul\":7335:7337   */\n      0x20\n        /* \"#utility.yul\":7327:7333   */\n      dup3\n        /* \"#utility.yul\":7324:7338   */\n      lt\n        /* \"#utility.yul\":7304:7322   */\n      dup2\n        /* \"#utility.yul\":7301:7339   */\n      sub\n        /* \"#utility.yul\":7298:7459   */\n      tag_524\n      jumpi\n        /* \"#utility.yul\":7381:7391   */\n      0x4e487b71\n        /* \"#utility.yul\":7376:7379   */\n      0xe0\n        /* \"#utility.yul\":7372:7392   */\n      shl\n        /* \"#utility.yul\":7369:7370   */\n      0x00\n        /* \"#utility.yul\":7362:7393   */\n      mstore\n        /* \"#utility.yul\":7416:7420   */\n      0x22\n        /* \"#utility.yul\":7413:7414   */\n      0x04\n        /* \"#utility.yul\":7406:7421   */\n      mstore\n        /* \"#utility.yul\":7444:7448   */\n      0x24\n        /* \"#utility.yul\":7441:7442   */\n      0x00\n        /* \"#utility.yul\":7434:7449   */\n      revert\n        /* \"#utility.yul\":7298:7459   */\n    tag_524:\n      pop\n        /* \"#utility.yul\":7085:7465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7850:8034   */\n    tag_187:\n        /* \"#utility.yul\":7920:7926   */\n      0x00\n        /* \"#utility.yul\":7973:7975   */\n      0x20\n        /* \"#utility.yul\":7961:7970   */\n      dup3\n        /* \"#utility.yul\":7952:7959   */\n      dup5\n        /* \"#utility.yul\":7948:7971   */\n      sub\n        /* \"#utility.yul\":7944:7976   */\n      slt\n        /* \"#utility.yul\":7941:7993   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":7989:7990   */\n      0x00\n        /* \"#utility.yul\":7986:7987   */\n      dup1\n        /* \"#utility.yul\":7979:7991   */\n      revert\n        /* \"#utility.yul\":7941:7993   */\n    tag_527:\n      pop\n        /* \"#utility.yul\":8012:8028   */\n      mload\n      swap2\n        /* \"#utility.yul\":7850:8034   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8516:9034   */\n    tag_450:\n        /* \"#utility.yul\":8618:8620   */\n      0x1f\n        /* \"#utility.yul\":8613:8616   */\n      dup3\n        /* \"#utility.yul\":8610:8621   */\n      gt\n        /* \"#utility.yul\":8607:9028   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":8654:8659   */\n      dup1\n        /* \"#utility.yul\":8651:8652   */\n      0x00\n        /* \"#utility.yul\":8644:8660   */\n      mstore\n        /* \"#utility.yul\":8698:8702   */\n      0x20\n        /* \"#utility.yul\":8695:8696   */\n      0x00\n        /* \"#utility.yul\":8685:8703   */\n      keccak256\n        /* \"#utility.yul\":8768:8770   */\n      0x1f\n        /* \"#utility.yul\":8756:8766   */\n      dup5\n        /* \"#utility.yul\":8752:8771   */\n      add\n        /* \"#utility.yul\":8749:8750   */\n      0x05\n        /* \"#utility.yul\":8745:8772   */\n      shr\n        /* \"#utility.yul\":8739:8743   */\n      dup2\n        /* \"#utility.yul\":8735:8773   */\n      add\n        /* \"#utility.yul\":8804:8808   */\n      0x20\n        /* \"#utility.yul\":8792:8802   */\n      dup6\n        /* \"#utility.yul\":8789:8809   */\n      lt\n        /* \"#utility.yul\":8786:8833   */\n      iszero\n      tag_532\n      jumpi\n      pop\n        /* \"#utility.yul\":8827:8831   */\n      dup1\n        /* \"#utility.yul\":8786:8833   */\n    tag_532:\n        /* \"#utility.yul\":8882:8884   */\n      0x1f\n        /* \"#utility.yul\":8877:8880   */\n      dup5\n        /* \"#utility.yul\":8873:8885   */\n      add\n        /* \"#utility.yul\":8870:8871   */\n      0x05\n        /* \"#utility.yul\":8866:8886   */\n      shr\n        /* \"#utility.yul\":8860:8864   */\n      dup3\n        /* \"#utility.yul\":8856:8887   */\n      add\n        /* \"#utility.yul\":8846:8887   */\n      swap2\n      pop\n        /* \"#utility.yul\":8937:9018   */\n    tag_533:\n        /* \"#utility.yul\":8955:8957   */\n      dup2\n        /* \"#utility.yul\":8948:8953   */\n      dup2\n        /* \"#utility.yul\":8945:8958   */\n      lt\n        /* \"#utility.yul\":8937:9018   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":9014:9015   */\n      0x00\n        /* \"#utility.yul\":9000:9016   */\n      dup2\n      sstore\n        /* \"#utility.yul\":8981:8982   */\n      0x01\n        /* \"#utility.yul\":8970:8983   */\n      add\n        /* \"#utility.yul\":8937:9018   */\n      jump(tag_533)\n        /* \"#utility.yul\":9210:10555   */\n    tag_209:\n        /* \"#utility.yul\":9336:9339   */\n      dup2\n        /* \"#utility.yul\":9330:9340   */\n      mload\n        /* \"#utility.yul\":9363:9381   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9355:9361   */\n      dup2\n        /* \"#utility.yul\":9352:9382   */\n      gt\n        /* \"#utility.yul\":9349:9405   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":9385:9403   */\n      tag_539\n      tag_296\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":9414:9511   */\n      tag_540\n        /* \"#utility.yul\":9504:9510   */\n      dup2\n        /* \"#utility.yul\":9464:9502   */\n      tag_541\n        /* \"#utility.yul\":9496:9500   */\n      dup5\n        /* \"#utility.yul\":9490:9501   */\n      sload\n        /* \"#utility.yul\":9464:9502   */\n      tag_151\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":9458:9462   */\n      dup5\n        /* \"#utility.yul\":9414:9511   */\n      tag_450\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":9566:9570   */\n      0x20\n      dup1\n        /* \"#utility.yul\":9623:9625   */\n      0x1f\n        /* \"#utility.yul\":9612:9626   */\n      dup4\n      gt\n        /* \"#utility.yul\":9640:9641   */\n      0x01\n        /* \"#utility.yul\":9635:10298   */\n      dup2\n      eq\n      tag_543\n      jumpi\n        /* \"#utility.yul\":10342:10343   */\n      0x00\n        /* \"#utility.yul\":10359:10365   */\n      dup5\n        /* \"#utility.yul\":10356:10445   */\n      iszero\n      tag_544\n      jumpi\n      pop\n        /* \"#utility.yul\":10411:10430   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":10405:10431   */\n      mload\n        /* \"#utility.yul\":10356:10445   */\n    tag_544:\n      not(0x00)\n        /* \"#utility.yul\":9167:9168   */\n      0x03\n        /* \"#utility.yul\":9163:9174   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":9159:9183   */\n      shr\n        /* \"#utility.yul\":9155:9184   */\n      not\n        /* \"#utility.yul\":9145:9185   */\n      and\n        /* \"#utility.yul\":9191:9192   */\n      0x01\n        /* \"#utility.yul\":9187:9198   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":9142:9199   */\n      or\n        /* \"#utility.yul\":10458:10539   */\n      dup6\n      sstore\n        /* \"#utility.yul\":9605:10549   */\n      jump(tag_542)\n        /* \"#utility.yul\":9635:10298   */\n    tag_543:\n        /* \"#utility.yul\":8463:8464   */\n      0x00\n        /* \"#utility.yul\":8456:8470   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":8500:8504   */\n      0x20\n        /* \"#utility.yul\":8487:8505   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":9671:9691   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":9789:10025   */\n    tag_547:\n        /* \"#utility.yul\":9803:9810   */\n      dup3\n        /* \"#utility.yul\":9800:9801   */\n      dup2\n        /* \"#utility.yul\":9797:9811   */\n      lt\n        /* \"#utility.yul\":9789:10025   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":9892:9911   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":9886:9912   */\n      mload\n        /* \"#utility.yul\":9871:9913   */\n      dup3\n      sstore\n        /* \"#utility.yul\":9984:10011   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":9952:9953   */\n      0x01\n        /* \"#utility.yul\":9940:9954   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":9819:9838   */\n      dup5\n      add\n        /* \"#utility.yul\":9789:10025   */\n      jump(tag_547)\n    tag_549:\n        /* \"#utility.yul\":9793:9796   */\n      pop\n        /* \"#utility.yul\":10053:10059   */\n      dup6\n        /* \"#utility.yul\":10044:10051   */\n      dup3\n        /* \"#utility.yul\":10041:10060   */\n      lt\n        /* \"#utility.yul\":10038:10239   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":10114:10133   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":10108:10134   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":10197:10198   */\n      0x03\n        /* \"#utility.yul\":10193:10207   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":10209:10212   */\n      0xf8\n        /* \"#utility.yul\":10189:10213   */\n      and\n        /* \"#utility.yul\":10185:10222   */\n      shr\n        /* \"#utility.yul\":10181:10223   */\n      not\n        /* \"#utility.yul\":10166:10224   */\n      and\n        /* \"#utility.yul\":10151:10225   */\n      dup2\n      sstore\n        /* \"#utility.yul\":10038:10239   */\n    tag_550:\n      pop\n      pop\n        /* \"#utility.yul\":10285:10286   */\n      0x01\n        /* \"#utility.yul\":10276:10282   */\n      dup5\n        /* \"#utility.yul\":10273:10274   */\n      0x01\n        /* \"#utility.yul\":10269:10283   */\n      shl\n        /* \"#utility.yul\":10265:10287   */\n      add\n        /* \"#utility.yul\":10259:10263   */\n      dup6\n        /* \"#utility.yul\":10252:10288   */\n      sstore\n        /* \"#utility.yul\":9605:10549   */\n    tag_542:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9210:10555   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10920:11132   */\n    tag_452:\n        /* \"#utility.yul\":10962:10965   */\n      0x00\n        /* \"#utility.yul\":11000:11005   */\n      dup2\n        /* \"#utility.yul\":10994:11006   */\n      mload\n        /* \"#utility.yul\":11044:11050   */\n      dup1\n        /* \"#utility.yul\":11037:11041   */\n      0x20\n        /* \"#utility.yul\":11030:11035   */\n      dup5\n        /* \"#utility.yul\":11026:11042   */\n      add\n        /* \"#utility.yul\":11021:11024   */\n      dup6\n        /* \"#utility.yul\":11015:11051   */\n      mcopy\n        /* \"#utility.yul\":11106:11107   */\n      0x00\n        /* \"#utility.yul\":11070:11086   */\n      swap4\n      add\n        /* \"#utility.yul\":11095:11108   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":11070:11086   */\n      swap1\n      swap2\n        /* \"#utility.yul\":10920:11132   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11137:11404   */\n    tag_251:\n        /* \"#utility.yul\":11316:11319   */\n      0x00\n        /* \"#utility.yul\":11341:11398   */\n      tag_290\n        /* \"#utility.yul\":11367:11397   */\n      tag_555\n        /* \"#utility.yul\":11393:11396   */\n      dup4\n        /* \"#utility.yul\":11385:11391   */\n      dup7\n        /* \"#utility.yul\":11367:11397   */\n      tag_452\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":11359:11365   */\n      dup5\n        /* \"#utility.yul\":11341:11398   */\n      tag_452\n      jump\t// in\n        /* \"#utility.yul\":11662:12059   */\n    tag_281:\n        /* \"#utility.yul\":11894:11895   */\n      0x01\n        /* \"#utility.yul\":11890:11891   */\n      dup1\n        /* \"#utility.yul\":11885:11888   */\n      0xa0\n        /* \"#utility.yul\":11881:11892   */\n      shl\n        /* \"#utility.yul\":11877:11896   */\n      sub\n        /* \"#utility.yul\":11869:11875   */\n      dup5\n        /* \"#utility.yul\":11865:11897   */\n      and\n        /* \"#utility.yul\":11854:11863   */\n      dup2\n        /* \"#utility.yul\":11847:11898   */\n      mstore\n        /* \"#utility.yul\":11934:11940   */\n      dup3\n        /* \"#utility.yul\":11929:11931   */\n      0x20\n        /* \"#utility.yul\":11918:11927   */\n      dup3\n        /* \"#utility.yul\":11914:11932   */\n      add\n        /* \"#utility.yul\":11907:11941   */\n      mstore\n        /* \"#utility.yul\":11977:11979   */\n      0x60\n        /* \"#utility.yul\":11972:11974   */\n      0x40\n        /* \"#utility.yul\":11961:11970   */\n      dup3\n        /* \"#utility.yul\":11957:11975   */\n      add\n        /* \"#utility.yul\":11950:11980   */\n      mstore\n        /* \"#utility.yul\":11828:11832   */\n      0x00\n        /* \"#utility.yul\":11997:12053   */\n      tag_558\n        /* \"#utility.yul\":12049:12051   */\n      0x60\n        /* \"#utility.yul\":12038:12047   */\n      dup4\n        /* \"#utility.yul\":12034:12052   */\n      add\n        /* \"#utility.yul\":12026:12032   */\n      dup5\n        /* \"#utility.yul\":11997:12053   */\n      tag_444\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":11989:12053   */\n      swap6\n        /* \"#utility.yul\":11662:12059   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12064:12309   */\n    tag_285:\n        /* \"#utility.yul\":12131:12137   */\n      0x00\n        /* \"#utility.yul\":12184:12186   */\n      0x20\n        /* \"#utility.yul\":12172:12181   */\n      dup3\n        /* \"#utility.yul\":12163:12170   */\n      dup5\n        /* \"#utility.yul\":12159:12182   */\n      sub\n        /* \"#utility.yul\":12155:12187   */\n      slt\n        /* \"#utility.yul\":12152:12204   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":12200:12201   */\n      0x00\n        /* \"#utility.yul\":12197:12198   */\n      dup1\n        /* \"#utility.yul\":12190:12202   */\n      revert\n        /* \"#utility.yul\":12152:12204   */\n    tag_560:\n        /* \"#utility.yul\":12232:12241   */\n      dup2\n        /* \"#utility.yul\":12226:12242   */\n      mload\n        /* \"#utility.yul\":12251:12279   */\n      tag_247\n        /* \"#utility.yul\":12273:12278   */\n      dup2\n        /* \"#utility.yul\":12251:12279   */\n      tag_447\n      jump\t// in\n        /* \"#utility.yul\":12314:12441   */\n    tag_453:\n        /* \"#utility.yul\":12375:12385   */\n      0x4e487b71\n        /* \"#utility.yul\":12370:12373   */\n      0xe0\n        /* \"#utility.yul\":12366:12386   */\n      shl\n        /* \"#utility.yul\":12363:12364   */\n      0x00\n        /* \"#utility.yul\":12356:12387   */\n      mstore\n        /* \"#utility.yul\":12406:12410   */\n      0x11\n        /* \"#utility.yul\":12403:12404   */\n      0x04\n        /* \"#utility.yul\":12396:12411   */\n      mstore\n        /* \"#utility.yul\":12430:12434   */\n      0x24\n        /* \"#utility.yul\":12427:12428   */\n      0x00\n        /* \"#utility.yul\":12420:12435   */\n      revert\n        /* \"#utility.yul\":12446:12571   */\n    tag_289:\n        /* \"#utility.yul\":12511:12520   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12532:12542   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12529:12565   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":12545:12563   */\n      tag_147\n      tag_453\n      jump\t// in\n        /* \"#utility.yul\":12576:12703   */\n    tag_304:\n        /* \"#utility.yul\":12637:12647   */\n      0x4e487b71\n        /* \"#utility.yul\":12632:12635   */\n      0xe0\n        /* \"#utility.yul\":12628:12648   */\n      shl\n        /* \"#utility.yul\":12625:12626   */\n      0x00\n        /* \"#utility.yul\":12618:12649   */\n      mstore\n        /* \"#utility.yul\":12668:12672   */\n      0x32\n        /* \"#utility.yul\":12665:12666   */\n      0x04\n        /* \"#utility.yul\":12658:12673   */\n      mstore\n        /* \"#utility.yul\":12692:12696   */\n      0x24\n        /* \"#utility.yul\":12689:12690   */\n      0x00\n        /* \"#utility.yul\":12682:12697   */\n      revert\n        /* \"#utility.yul\":13092:13301   */\n    tag_313:\n        /* \"#utility.yul\":13124:13125   */\n      0x00\n        /* \"#utility.yul\":13150:13151   */\n      dup3\n        /* \"#utility.yul\":13140:13272   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":13194:13204   */\n      0x4e487b71\n        /* \"#utility.yul\":13189:13192   */\n      0xe0\n        /* \"#utility.yul\":13185:13205   */\n      shl\n        /* \"#utility.yul\":13182:13183   */\n      0x00\n        /* \"#utility.yul\":13175:13206   */\n      mstore\n        /* \"#utility.yul\":13229:13233   */\n      0x12\n        /* \"#utility.yul\":13226:13227   */\n      0x04\n        /* \"#utility.yul\":13219:13234   */\n      mstore\n        /* \"#utility.yul\":13257:13261   */\n      0x24\n        /* \"#utility.yul\":13254:13255   */\n      0x00\n        /* \"#utility.yul\":13247:13262   */\n      revert\n        /* \"#utility.yul\":13140:13272   */\n    tag_570:\n      pop\n        /* \"#utility.yul\":13286:13295   */\n      mod\n      swap1\n        /* \"#utility.yul\":13092:13301   */\n      jump\t// out\n        /* \"#utility.yul\":13306:13441   */\n    tag_329:\n        /* \"#utility.yul\":13345:13348   */\n      0x00\n        /* \"#utility.yul\":13366:13383   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":13363:13406   */\n      tag_573\n      jumpi\n        /* \"#utility.yul\":13386:13404   */\n      tag_573\n      tag_453\n      jump\t// in\n    tag_573:\n      pop\n        /* \"#utility.yul\":13433:13434   */\n      0x01\n        /* \"#utility.yul\":13422:13435   */\n      add\n      swap1\n        /* \"#utility.yul\":13306:13441   */\n      jump\t// out\n        /* \"#utility.yul\":13446:13797   */\n    tag_331:\n        /* \"#utility.yul\":13673:13679   */\n      dup3\n        /* \"#utility.yul\":13662:13671   */\n      dup2\n        /* \"#utility.yul\":13655:13680   */\n      mstore\n        /* \"#utility.yul\":13716:13718   */\n      0x40\n        /* \"#utility.yul\":13711:13713   */\n      0x20\n        /* \"#utility.yul\":13700:13709   */\n      dup3\n        /* \"#utility.yul\":13696:13714   */\n      add\n        /* \"#utility.yul\":13689:13719   */\n      mstore\n        /* \"#utility.yul\":13636:13640   */\n      0x00\n        /* \"#utility.yul\":13736:13791   */\n      tag_290\n        /* \"#utility.yul\":13787:13789   */\n      0x40\n        /* \"#utility.yul\":13776:13785   */\n      dup4\n        /* \"#utility.yul\":13772:13790   */\n      add\n        /* \"#utility.yul\":13764:13770   */\n      dup5\n        /* \"#utility.yul\":13736:13791   */\n      tag_448\n      jump\t// in\n        /* \"#utility.yul\":13802:14302   */\n    tag_340:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14071:14086   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":14053:14087   */\n      dup3\n      mstore\n        /* \"#utility.yul\":14123:14138   */\n      dup5\n      and\n        /* \"#utility.yul\":14118:14120   */\n      0x20\n        /* \"#utility.yul\":14103:14121   */\n      dup3\n      add\n        /* \"#utility.yul\":14096:14139   */\n      mstore\n        /* \"#utility.yul\":14170:14172   */\n      0x40\n        /* \"#utility.yul\":14155:14173   */\n      dup2\n      add\n        /* \"#utility.yul\":14148:14182   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14218:14221   */\n      0x80\n        /* \"#utility.yul\":14213:14215   */\n      0x60\n        /* \"#utility.yul\":14198:14216   */\n      dup3\n      add\n        /* \"#utility.yul\":14191:14222   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13996:14000   */\n      0x00\n      swap1\n        /* \"#utility.yul\":14239:14296   */\n      tag_577\n      swap1\n        /* \"#utility.yul\":14276:14295   */\n      dup4\n      add\n        /* \"#utility.yul\":14268:14274   */\n      dup5\n        /* \"#utility.yul\":14239:14296   */\n      tag_444\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":14231:14296   */\n      swap7\n        /* \"#utility.yul\":13802:14302   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14307:14556   */\n    tag_343:\n        /* \"#utility.yul\":14376:14382   */\n      0x00\n        /* \"#utility.yul\":14429:14431   */\n      0x20\n        /* \"#utility.yul\":14417:14426   */\n      dup3\n        /* \"#utility.yul\":14408:14415   */\n      dup5\n        /* \"#utility.yul\":14404:14427   */\n      sub\n        /* \"#utility.yul\":14400:14432   */\n      slt\n        /* \"#utility.yul\":14397:14449   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":14445:14446   */\n      0x00\n        /* \"#utility.yul\":14442:14443   */\n      dup1\n        /* \"#utility.yul\":14435:14447   */\n      revert\n        /* \"#utility.yul\":14397:14449   */\n    tag_579:\n        /* \"#utility.yul\":14477:14486   */\n      dup2\n        /* \"#utility.yul\":14471:14487   */\n      mload\n        /* \"#utility.yul\":14496:14526   */\n      tag_247\n        /* \"#utility.yul\":14520:14525   */\n      dup2\n        /* \"#utility.yul\":14496:14526   */\n      tag_443\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220f3b4d570f88033d3c446a12bfa7e5b0347b7e6630e0dea27bfaf00890c6a4db864736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3138": {
									"entryPoint": null,
									"id": 3138,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_472": {
									"entryPoint": null,
									"id": 472,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_payablet_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 320,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address_payable": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3379:15",
										"nodeType": "YulBlock",
										"src": "0:3379:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "67:86:15",
													"nodeType": "YulBlock",
													"src": "67:86:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "131:16:15",
																"nodeType": "YulBlock",
																"src": "131:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "140:1:15",
																					"nodeType": "YulLiteral",
																					"src": "140:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "143:1:15",
																					"nodeType": "YulLiteral",
																					"src": "143:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "133:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "133:6:15"
																			},
																			"nativeSrc": "133:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "133:12:15"
																		},
																		"nativeSrc": "133:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "133:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "90:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "90:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "101:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "101:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "116:3:15",
																										"nodeType": "YulLiteral",
																										"src": "116:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "121:1:15",
																										"nodeType": "YulLiteral",
																										"src": "121:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "112:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "112:3:15"
																								},
																								"nativeSrc": "112:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "112:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "125:1:15",
																								"nodeType": "YulLiteral",
																								"src": "125:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "108:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "108:3:15"
																						},
																						"nativeSrc": "108:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "108:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "97:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "97:3:15"
																				},
																				"nativeSrc": "97:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "97:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "87:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "87:2:15"
																		},
																		"nativeSrc": "87:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "87:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "80:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "80:6:15"
																},
																"nativeSrc": "80:50:15",
																"nodeType": "YulFunctionCall",
																"src": "80:50:15"
															},
															"nativeSrc": "77:70:15",
															"nodeType": "YulIf",
															"src": "77:70:15"
														}
													]
												},
												"name": "validator_revert_address_payable",
												"nativeSrc": "14:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "56:5:15",
														"nodeType": "YulTypedName",
														"src": "56:5:15",
														"type": ""
													}
												],
												"src": "14:139:15"
											},
											{
												"body": {
													"nativeSrc": "298:392:15",
													"nodeType": "YulBlock",
													"src": "298:392:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "345:16:15",
																"nodeType": "YulBlock",
																"src": "345:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "354:1:15",
																					"nodeType": "YulLiteral",
																					"src": "354:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "357:1:15",
																					"nodeType": "YulLiteral",
																					"src": "357:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "347:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "347:6:15"
																			},
																			"nativeSrc": "347:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "347:12:15"
																		},
																		"nativeSrc": "347:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "347:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "319:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "319:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "328:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "328:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "315:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "315:3:15"
																		},
																		"nativeSrc": "315:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "315:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "340:3:15",
																		"nodeType": "YulLiteral",
																		"src": "340:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "311:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "311:3:15"
																},
																"nativeSrc": "311:33:15",
																"nodeType": "YulFunctionCall",
																"src": "311:33:15"
															},
															"nativeSrc": "308:53:15",
															"nodeType": "YulIf",
															"src": "308:53:15"
														},
														{
															"nativeSrc": "370:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "370:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "389:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "383:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "383:5:15"
																},
																"nativeSrc": "383:16:15",
																"nodeType": "YulFunctionCall",
																"src": "383:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "374:5:15",
																	"nodeType": "YulTypedName",
																	"src": "374:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "441:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "441:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "408:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "408:32:15"
																},
																"nativeSrc": "408:39:15",
																"nodeType": "YulFunctionCall",
																"src": "408:39:15"
															},
															"nativeSrc": "408:39:15",
															"nodeType": "YulExpressionStatement",
															"src": "408:39:15"
														},
														{
															"nativeSrc": "456:15:15",
															"nodeType": "YulAssignment",
															"src": "456:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "466:5:15",
																"nodeType": "YulIdentifier",
																"src": "466:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "456:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:15"
																}
															]
														},
														{
															"nativeSrc": "480:40:15",
															"nodeType": "YulVariableDeclaration",
															"src": "480:40:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "505:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "505:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "516:2:15",
																				"nodeType": "YulLiteral",
																				"src": "516:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "501:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "501:3:15"
																		},
																		"nativeSrc": "501:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "501:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "495:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "495:5:15"
																},
																"nativeSrc": "495:25:15",
																"nodeType": "YulFunctionCall",
																"src": "495:25:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "484:7:15",
																	"nodeType": "YulTypedName",
																	"src": "484:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "562:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "562:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "529:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "529:32:15"
																},
																"nativeSrc": "529:41:15",
																"nodeType": "YulFunctionCall",
																"src": "529:41:15"
															},
															"nativeSrc": "529:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "529:41:15"
														},
														{
															"nativeSrc": "579:17:15",
															"nodeType": "YulAssignment",
															"src": "579:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "589:7:15",
																"nodeType": "YulIdentifier",
																"src": "589:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "579:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "579:6:15"
																}
															]
														},
														{
															"nativeSrc": "605:35:15",
															"nodeType": "YulAssignment",
															"src": "605:35:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "625:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "625:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "636:2:15",
																				"nodeType": "YulLiteral",
																				"src": "636:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "621:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "621:3:15"
																		},
																		"nativeSrc": "621:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "621:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "615:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "615:5:15"
																},
																"nativeSrc": "615:25:15",
																"nodeType": "YulFunctionCall",
																"src": "615:25:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "605:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "605:6:15"
																}
															]
														},
														{
															"nativeSrc": "649:35:15",
															"nodeType": "YulAssignment",
															"src": "649:35:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "669:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "669:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "680:2:15",
																				"nodeType": "YulLiteral",
																				"src": "680:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "665:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "665:3:15"
																		},
																		"nativeSrc": "665:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "665:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "659:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "659:5:15"
																},
																"nativeSrc": "659:25:15",
																"nodeType": "YulFunctionCall",
																"src": "659:25:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "649:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "649:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_addresst_uint256t_uint256_fromMemory",
												"nativeSrc": "158:532:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "240:9:15",
														"nodeType": "YulTypedName",
														"src": "240:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "251:7:15",
														"nodeType": "YulTypedName",
														"src": "251:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "263:6:15",
														"nodeType": "YulTypedName",
														"src": "263:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "271:6:15",
														"nodeType": "YulTypedName",
														"src": "271:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "279:6:15",
														"nodeType": "YulTypedName",
														"src": "279:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "287:6:15",
														"nodeType": "YulTypedName",
														"src": "287:6:15",
														"type": ""
													}
												],
												"src": "158:532:15"
											},
											{
												"body": {
													"nativeSrc": "727:95:15",
													"nodeType": "YulBlock",
													"src": "727:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "744:1:15",
																		"nodeType": "YulLiteral",
																		"src": "744:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "751:3:15",
																				"nodeType": "YulLiteral",
																				"src": "751:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:10:15",
																				"nodeType": "YulLiteral",
																				"src": "756:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "747:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "747:3:15"
																		},
																		"nativeSrc": "747:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "747:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "737:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "737:6:15"
																},
																"nativeSrc": "737:31:15",
																"nodeType": "YulFunctionCall",
																"src": "737:31:15"
															},
															"nativeSrc": "737:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "737:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "784:1:15",
																		"nodeType": "YulLiteral",
																		"src": "784:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "787:4:15",
																		"nodeType": "YulLiteral",
																		"src": "787:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "777:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "777:6:15"
																},
																"nativeSrc": "777:15:15",
																"nodeType": "YulFunctionCall",
																"src": "777:15:15"
															},
															"nativeSrc": "777:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "777:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "808:1:15",
																		"nodeType": "YulLiteral",
																		"src": "808:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "811:4:15",
																		"nodeType": "YulLiteral",
																		"src": "811:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "801:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "801:6:15"
																},
																"nativeSrc": "801:15:15",
																"nodeType": "YulFunctionCall",
																"src": "801:15:15"
															},
															"nativeSrc": "801:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "801:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "695:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "695:127:15"
											},
											{
												"body": {
													"nativeSrc": "882:325:15",
													"nodeType": "YulBlock",
													"src": "882:325:15",
													"statements": [
														{
															"nativeSrc": "892:22:15",
															"nodeType": "YulAssignment",
															"src": "892:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:15",
																		"nodeType": "YulLiteral",
																		"src": "906:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "909:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "909:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "902:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "902:3:15"
																},
																"nativeSrc": "902:12:15",
																"nodeType": "YulFunctionCall",
																"src": "902:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "892:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:15"
																}
															]
														},
														{
															"nativeSrc": "923:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "923:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "953:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "953:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "959:1:15",
																		"nodeType": "YulLiteral",
																		"src": "959:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "949:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "949:3:15"
																},
																"nativeSrc": "949:12:15",
																"nodeType": "YulFunctionCall",
																"src": "949:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "927:18:15",
																	"nodeType": "YulTypedName",
																	"src": "927:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1000:31:15",
																"nodeType": "YulBlock",
																"src": "1000:31:15",
																"statements": [
																	{
																		"nativeSrc": "1002:27:15",
																		"nodeType": "YulAssignment",
																		"src": "1002:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1016:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "1016:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1024:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1024:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1012:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1012:3:15"
																			},
																			"nativeSrc": "1012:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1012:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1002:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1002:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "980:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "980:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "973:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "973:6:15"
																},
																"nativeSrc": "973:26:15",
																"nodeType": "YulFunctionCall",
																"src": "973:26:15"
															},
															"nativeSrc": "970:61:15",
															"nodeType": "YulIf",
															"src": "970:61:15"
														},
														{
															"body": {
																"nativeSrc": "1090:111:15",
																"nodeType": "YulBlock",
																"src": "1090:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1111:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1111:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1118:3:15",
																							"nodeType": "YulLiteral",
																							"src": "1118:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1123:10:15",
																							"nodeType": "YulLiteral",
																							"src": "1123:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1114:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1114:3:15"
																					},
																					"nativeSrc": "1114:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1114:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1104:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1104:6:15"
																			},
																			"nativeSrc": "1104:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1104:31:15"
																		},
																		"nativeSrc": "1104:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1104:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1155:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1155:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1158:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1158:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1148:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1148:6:15"
																			},
																			"nativeSrc": "1148:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1148:15:15"
																		},
																		"nativeSrc": "1148:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1148:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1183:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1186:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1186:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1176:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:15"
																			},
																			"nativeSrc": "1176:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1176:15:15"
																		},
																		"nativeSrc": "1176:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1046:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "1046:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1069:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1069:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1077:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1077:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1066:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:15"
																		},
																		"nativeSrc": "1066:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1043:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1043:2:15"
																},
																"nativeSrc": "1043:38:15",
																"nodeType": "YulFunctionCall",
																"src": "1043:38:15"
															},
															"nativeSrc": "1040:161:15",
															"nodeType": "YulIf",
															"src": "1040:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "827:380:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "862:4:15",
														"nodeType": "YulTypedName",
														"src": "862:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "871:6:15",
														"nodeType": "YulTypedName",
														"src": "871:6:15",
														"type": ""
													}
												],
												"src": "827:380:15"
											},
											{
												"body": {
													"nativeSrc": "1268:65:15",
													"nodeType": "YulBlock",
													"src": "1268:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1285:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1285:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1288:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1288:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1278:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1278:6:15"
																},
																"nativeSrc": "1278:14:15",
																"nodeType": "YulFunctionCall",
																"src": "1278:14:15"
															},
															"nativeSrc": "1278:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "1278:14:15"
														},
														{
															"nativeSrc": "1301:26:15",
															"nodeType": "YulAssignment",
															"src": "1301:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1319:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1319:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1322:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1309:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1309:9:15"
																},
																"nativeSrc": "1309:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1309:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1301:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1301:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1212:121:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1251:3:15",
														"nodeType": "YulTypedName",
														"src": "1251:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1259:4:15",
														"nodeType": "YulTypedName",
														"src": "1259:4:15",
														"type": ""
													}
												],
												"src": "1212:121:15"
											},
											{
												"body": {
													"nativeSrc": "1419:437:15",
													"nodeType": "YulBlock",
													"src": "1419:437:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1452:398:15",
																"nodeType": "YulBlock",
																"src": "1452:398:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1476:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "1476:5:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1466:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:15"
																			},
																			"nativeSrc": "1466:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1466:16:15"
																		},
																		"nativeSrc": "1466:16:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:16:15"
																	},
																	{
																		"nativeSrc": "1495:30:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1495:30:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1517:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1517:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1520:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1520:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1507:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1507:9:15"
																			},
																			"nativeSrc": "1507:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1507:18:15"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1499:4:15",
																				"nodeType": "YulTypedName",
																				"src": "1499:4:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1538:57:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1538:57:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1561:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "1561:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1571:1:15",
																							"nodeType": "YulLiteral",
																							"src": "1571:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1578:10:15",
																									"nodeType": "YulIdentifier",
																									"src": "1578:10:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1590:2:15",
																									"nodeType": "YulLiteral",
																									"src": "1590:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1574:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1574:3:15"
																							},
																							"nativeSrc": "1574:19:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1574:19:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1567:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1567:3:15"
																					},
																					"nativeSrc": "1567:27:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1567:27:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1557:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1557:3:15"
																			},
																			"nativeSrc": "1557:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1557:38:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1542:11:15",
																				"nodeType": "YulTypedName",
																				"src": "1542:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1632:23:15",
																			"nodeType": "YulBlock",
																			"src": "1632:23:15",
																			"statements": [
																				{
																					"nativeSrc": "1634:19:15",
																					"nodeType": "YulAssignment",
																					"src": "1634:19:15",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1649:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "1649:4:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1634:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "1634:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1614:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "1614:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1626:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1626:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1611:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "1611:2:15"
																			},
																			"nativeSrc": "1611:20:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1611:20:15"
																		},
																		"nativeSrc": "1608:47:15",
																		"nodeType": "YulIf",
																		"src": "1608:47:15"
																	},
																	{
																		"nativeSrc": "1668:41:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1668:41:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1682:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "1682:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1692:1:15",
																							"nodeType": "YulLiteral",
																							"src": "1692:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1699:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1699:3:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1704:2:15",
																									"nodeType": "YulLiteral",
																									"src": "1704:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1695:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1695:3:15"
																							},
																							"nativeSrc": "1695:12:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1695:12:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1688:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1688:3:15"
																					},
																					"nativeSrc": "1688:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1688:20:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1678:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1678:3:15"
																			},
																			"nativeSrc": "1678:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1678:31:15"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1672:2:15",
																				"nodeType": "YulTypedName",
																				"src": "1672:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1722:24:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1722:24:15",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1735:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "1735:11:15"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1726:5:15",
																				"nodeType": "YulTypedName",
																				"src": "1726:5:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1820:20:15",
																			"nodeType": "YulBlock",
																			"src": "1820:20:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1829:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "1829:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1836:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1836:1:15",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1822:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "1822:6:15"
																						},
																						"nativeSrc": "1822:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1822:16:15"
																					},
																					"nativeSrc": "1822:16:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "1822:16:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1770:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "1770:5:15"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1777:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "1777:2:15"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1767:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "1767:2:15"
																			},
																			"nativeSrc": "1767:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1767:13:15"
																		},
																		"nativeSrc": "1759:81:15",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1781:26:15",
																			"nodeType": "YulBlock",
																			"src": "1781:26:15",
																			"statements": [
																				{
																					"nativeSrc": "1783:22:15",
																					"nodeType": "YulAssignment",
																					"src": "1783:22:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1796:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "1796:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1803:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1803:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1792:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1792:3:15"
																						},
																						"nativeSrc": "1792:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1792:13:15"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1783:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "1783:5:15"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1763:3:15",
																			"nodeType": "YulBlock",
																			"src": "1763:3:15",
																			"statements": []
																		},
																		"src": "1759:81:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1435:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1435:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1432:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:15"
																},
																"nativeSrc": "1432:11:15",
																"nodeType": "YulFunctionCall",
																"src": "1432:11:15"
															},
															"nativeSrc": "1429:421:15",
															"nodeType": "YulIf",
															"src": "1429:421:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1338:518:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1391:5:15",
														"nodeType": "YulTypedName",
														"src": "1391:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1398:3:15",
														"nodeType": "YulTypedName",
														"src": "1398:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1403:10:15",
														"nodeType": "YulTypedName",
														"src": "1403:10:15",
														"type": ""
													}
												],
												"src": "1338:518:15"
											},
											{
												"body": {
													"nativeSrc": "1946:81:15",
													"nodeType": "YulBlock",
													"src": "1946:81:15",
													"statements": [
														{
															"nativeSrc": "1956:65:15",
															"nodeType": "YulAssignment",
															"src": "1956:65:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1971:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1971:4:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1989:1:15",
																										"nodeType": "YulLiteral",
																										"src": "1989:1:15",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1992:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "1992:3:15"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1985:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1985:3:15"
																								},
																								"nativeSrc": "1985:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1985:11:15"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2002:1:15",
																										"nodeType": "YulLiteral",
																										"src": "2002:1:15",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1998:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1998:3:15"
																								},
																								"nativeSrc": "1998:6:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1998:6:15"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1981:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1981:3:15"
																						},
																						"nativeSrc": "1981:24:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1981:24:15"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1977:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1977:3:15"
																				},
																				"nativeSrc": "1977:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1977:29:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1967:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:15"
																		},
																		"nativeSrc": "1967:40:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:40:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:15",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2016:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2016:3:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2009:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2009:3:15"
																		},
																		"nativeSrc": "2009:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2009:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1964:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1964:2:15"
																},
																"nativeSrc": "1964:57:15",
																"nodeType": "YulFunctionCall",
																"src": "1964:57:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1956:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1956:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1861:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1923:4:15",
														"nodeType": "YulTypedName",
														"src": "1923:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1929:3:15",
														"nodeType": "YulTypedName",
														"src": "1929:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1937:4:15",
														"nodeType": "YulTypedName",
														"src": "1937:4:15",
														"type": ""
													}
												],
												"src": "1861:166:15"
											},
											{
												"body": {
													"nativeSrc": "2128:1249:15",
													"nodeType": "YulBlock",
													"src": "2128:1249:15",
													"statements": [
														{
															"nativeSrc": "2138:24:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2138:24:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2158:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2158:3:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2152:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2152:5:15"
																},
																"nativeSrc": "2152:10:15",
																"nodeType": "YulFunctionCall",
																"src": "2152:10:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2142:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2142:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2205:22:15",
																"nodeType": "YulBlock",
																"src": "2205:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2207:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "2207:16:15"
																			},
																			"nativeSrc": "2207:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2207:18:15"
																		},
																		"nativeSrc": "2207:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2207:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2177:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2177:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2193:2:15",
																						"nodeType": "YulLiteral",
																						"src": "2193:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2197:1:15",
																						"nodeType": "YulLiteral",
																						"src": "2197:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2189:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2189:3:15"
																				},
																				"nativeSrc": "2189:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2189:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2201:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2201:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2185:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2185:3:15"
																		},
																		"nativeSrc": "2185:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2185:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2174:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2174:2:15"
																},
																"nativeSrc": "2174:30:15",
																"nodeType": "YulFunctionCall",
																"src": "2174:30:15"
															},
															"nativeSrc": "2171:56:15",
															"nodeType": "YulIf",
															"src": "2171:56:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2280:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2280:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2318:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "2318:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2312:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2312:5:15"
																				},
																				"nativeSrc": "2312:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2312:11:15"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2286:25:15",
																			"nodeType": "YulIdentifier",
																			"src": "2286:25:15"
																		},
																		"nativeSrc": "2286:38:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2286:38:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2326:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2326:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2236:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "2236:43:15"
																},
																"nativeSrc": "2236:97:15",
																"nodeType": "YulFunctionCall",
																"src": "2236:97:15"
															},
															"nativeSrc": "2236:97:15",
															"nodeType": "YulExpressionStatement",
															"src": "2236:97:15"
														},
														{
															"nativeSrc": "2342:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2342:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2359:1:15",
																"nodeType": "YulLiteral",
																"src": "2359:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2346:9:15",
																	"nodeType": "YulTypedName",
																	"src": "2346:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2369:23:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2369:23:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2388:4:15",
																"nodeType": "YulLiteral",
																"src": "2388:4:15",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "2373:11:15",
																	"nodeType": "YulTypedName",
																	"src": "2373:11:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2401:17:15",
															"nodeType": "YulAssignment",
															"src": "2401:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2414:4:15",
																"nodeType": "YulLiteral",
																"src": "2414:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2401:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2401:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2464:656:15",
																		"nodeType": "YulBlock",
																		"src": "2464:656:15",
																		"statements": [
																			{
																				"nativeSrc": "2478:35:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2478:35:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2497:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "2497:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2509:2:15",
																									"nodeType": "YulLiteral",
																									"src": "2509:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2505:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "2505:3:15"
																							},
																							"nativeSrc": "2505:7:15",
																							"nodeType": "YulFunctionCall",
																							"src": "2505:7:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2493:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2493:3:15"
																					},
																					"nativeSrc": "2493:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2493:20:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2482:7:15",
																						"nodeType": "YulTypedName",
																						"src": "2482:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2526:49:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2526:49:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2570:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "2570:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2540:29:15",
																						"nodeType": "YulIdentifier",
																						"src": "2540:29:15"
																					},
																					"nativeSrc": "2540:35:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2540:35:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2530:6:15",
																						"nodeType": "YulTypedName",
																						"src": "2530:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2588:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2588:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2597:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2597:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2592:1:15",
																						"nodeType": "YulTypedName",
																						"src": "2592:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2675:172:15",
																					"nodeType": "YulBlock",
																					"src": "2675:172:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2700:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2700:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2718:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "2718:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2723:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "2723:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2714:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "2714:3:15"
																												},
																												"nativeSrc": "2714:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "2714:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2708:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "2708:5:15"
																										},
																										"nativeSrc": "2708:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2708:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2693:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2693:6:15"
																								},
																								"nativeSrc": "2693:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2693:42:15"
																							},
																							"nativeSrc": "2693:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "2693:42:15"
																						},
																						{
																							"nativeSrc": "2752:24:15",
																							"nodeType": "YulAssignment",
																							"src": "2752:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2766:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2766:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2774:1:15",
																										"nodeType": "YulLiteral",
																										"src": "2774:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2762:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2762:3:15"
																								},
																								"nativeSrc": "2762:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2762:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2752:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2752:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2793:40:15",
																							"nodeType": "YulAssignment",
																							"src": "2793:40:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2810:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "2810:9:15"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2821:11:15",
																										"nodeType": "YulIdentifier",
																										"src": "2821:11:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2806:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2806:3:15"
																								},
																								"nativeSrc": "2806:27:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2806:27:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2793:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "2793:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2622:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "2622:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2625:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "2625:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2619:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "2619:2:15"
																					},
																					"nativeSrc": "2619:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2619:14:15"
																				},
																				"nativeSrc": "2611:236:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2634:28:15",
																					"nodeType": "YulBlock",
																					"src": "2634:28:15",
																					"statements": [
																						{
																							"nativeSrc": "2636:24:15",
																							"nodeType": "YulAssignment",
																							"src": "2636:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2645:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "2645:1:15"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2648:11:15",
																										"nodeType": "YulIdentifier",
																										"src": "2648:11:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2641:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2641:3:15"
																								},
																								"nativeSrc": "2641:19:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2641:19:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2636:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "2636:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2615:3:15",
																					"nodeType": "YulBlock",
																					"src": "2615:3:15",
																					"statements": []
																				},
																				"src": "2611:236:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "2895:166:15",
																					"nodeType": "YulBlock",
																					"src": "2895:166:15",
																					"statements": [
																						{
																							"nativeSrc": "2913:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2913:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2940:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "2940:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2945:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2945:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2936:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2936:3:15"
																										},
																										"nativeSrc": "2936:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2936:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2930:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2930:5:15"
																								},
																								"nativeSrc": "2930:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2930:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2917:9:15",
																									"nodeType": "YulTypedName",
																									"src": "2917:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2980:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2980:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2992:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2992:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3019:1:15",
																																				"nodeType": "YulLiteral",
																																				"src": "3019:1:15",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3022:6:15",
																																				"nodeType": "YulIdentifier",
																																				"src": "3022:6:15"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3015:3:15",
																																			"nodeType": "YulIdentifier",
																																			"src": "3015:3:15"
																																		},
																																		"nativeSrc": "3015:14:15",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3015:14:15"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3031:3:15",
																																		"nodeType": "YulLiteral",
																																		"src": "3031:3:15",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3011:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "3011:3:15"
																																},
																																"nativeSrc": "3011:24:15",
																																"nodeType": "YulFunctionCall",
																																"src": "3011:24:15"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3041:1:15",
																																		"nodeType": "YulLiteral",
																																		"src": "3041:1:15",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3037:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "3037:3:15"
																																},
																																"nativeSrc": "3037:6:15",
																																"nodeType": "YulFunctionCall",
																																"src": "3037:6:15"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3007:3:15",
																															"nodeType": "YulIdentifier",
																															"src": "3007:3:15"
																														},
																														"nativeSrc": "3007:37:15",
																														"nodeType": "YulFunctionCall",
																														"src": "3007:37:15"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3003:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "3003:3:15"
																												},
																												"nativeSrc": "3003:42:15",
																												"nodeType": "YulFunctionCall",
																												"src": "3003:42:15"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2988:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2988:3:15"
																										},
																										"nativeSrc": "2988:58:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2988:58:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2973:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2973:6:15"
																								},
																								"nativeSrc": "2973:74:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2973:74:15"
																							},
																							"nativeSrc": "2973:74:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "2973:74:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2866:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "2866:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2875:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "2875:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2863:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "2863:2:15"
																					},
																					"nativeSrc": "2863:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2863:19:15"
																				},
																				"nativeSrc": "2860:201:15",
																				"nodeType": "YulIf",
																				"src": "2860:201:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3081:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "3081:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3095:1:15",
																											"nodeType": "YulLiteral",
																											"src": "3095:1:15",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3098:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "3098:6:15"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3091:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "3091:3:15"
																									},
																									"nativeSrc": "3091:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "3091:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3107:1:15",
																									"nodeType": "YulLiteral",
																									"src": "3107:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3087:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "3087:3:15"
																							},
																							"nativeSrc": "3087:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "3087:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3074:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3074:6:15"
																					},
																					"nativeSrc": "3074:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3074:36:15"
																				},
																				"nativeSrc": "3074:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "3074:36:15"
																			}
																		]
																	},
																	"nativeSrc": "2457:663:15",
																	"nodeType": "YulCase",
																	"src": "2457:663:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2462:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2462:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3137:234:15",
																		"nodeType": "YulBlock",
																		"src": "3137:234:15",
																		"statements": [
																			{
																				"nativeSrc": "3151:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3151:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3164:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3164:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3155:5:15",
																						"nodeType": "YulTypedName",
																						"src": "3155:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3200:67:15",
																					"nodeType": "YulBlock",
																					"src": "3200:67:15",
																					"statements": [
																						{
																							"nativeSrc": "3218:35:15",
																							"nodeType": "YulAssignment",
																							"src": "3218:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3237:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "3237:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3242:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "3242:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3233:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "3233:3:15"
																										},
																										"nativeSrc": "3233:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "3233:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3227:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "3227:5:15"
																								},
																								"nativeSrc": "3227:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "3227:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3218:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "3218:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3181:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "3181:6:15"
																				},
																				"nativeSrc": "3178:89:15",
																				"nodeType": "YulIf",
																				"src": "3178:89:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3287:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "3287:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3346:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "3346:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3353:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "3353:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3293:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "3293:52:15"
																							},
																							"nativeSrc": "3293:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "3293:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3280:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3280:6:15"
																					},
																					"nativeSrc": "3280:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3280:81:15"
																				},
																				"nativeSrc": "3280:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "3280:81:15"
																			}
																		]
																	},
																	"nativeSrc": "3129:242:15",
																	"nodeType": "YulCase",
																	"src": "3129:242:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2437:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2437:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2445:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2445:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2434:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2434:2:15"
																},
																"nativeSrc": "2434:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2434:14:15"
															},
															"nativeSrc": "2427:944:15",
															"nodeType": "YulSwitch",
															"src": "2427:944:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2032:1345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2113:4:15",
														"nodeType": "YulTypedName",
														"src": "2113:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2119:3:15",
														"nodeType": "YulTypedName",
														"src": "2119:3:15",
														"type": ""
													}
												],
												"src": "2032:1345:15"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address_payable(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_payablet_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address_payable(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b50604051611e3f380380611e3f83398101604081905261002e916100fb565b604080518082018252600d81526c111e5b985b5a58d05c9d139195609a1b602080830191909152825180840190935260048352631110549560e21b908301526001600160a01b0380871660a052851660805290600161008d83826101d8565b50600261009a82826101d8565b5050600780546001600160a01b039687166001600160a01b0319918216179091556008805495909616941693909317909355600a5550600b5567016345785d8a0000600955610297565b6001600160a01b03811681146100f8575f80fd5b50565b5f805f806080858703121561010e575f80fd5b8451610119816100e4565b602086015190945061012a816100e4565b6040860151606090960151949790965092505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061016857607f821691505b60208210810361018657634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101d357805f5260205f20601f840160051c810160208510156101b15750805b601f840160051c820191505b818110156101d0575f81556001016101bd565b50505b505050565b81516001600160401b038111156101f1576101f1610140565b610205816101ff8454610154565b8461018c565b602080601f831160018114610238575f84156102215750858301515b5f19600386901b1c1916600185901b17855561028f565b5f85815260208120601f198616915b8281101561026657888601518255948401946001909101908401610247565b508582101561028357878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b60805160a051611b796102c65f395f81816107b10152610b8d01525f81816106170152610b5e0152611b795ff3fe608060405234801561000f575f80fd5b50600436106101a1575f3560e01c80637ba19512116100f3578063b88d4fde11610093578063e84b3ad01161006e578063e84b3ad01461037c578063e985e9c514610384578063eb2e578b14610397578063f68016b7146103a0575f80fd5b8063b88d4fde1461034d578063c87b56dd14610360578063ddca3f4314610373575f80fd5b80639cc8c69b116100ce5780639cc8c69b146102f4578063a22cb46514610307578063a3e56fa81461031a578063a630fd971461032d575f80fd5b80637ba19512146102c657806394985ddd146102d957806395d89b41146102ec575f80fd5b80633ff6bc4e1161015e57806357970e931161013957806357970e931461027a5780635ed5b5af1461028d5780636352211e146102a057806370a08231146102b3575f80fd5b80633ff6bc4e1461024857806342842e0e1461025e5780634eb7e95f14610271575f80fd5b806301ffc9a7146101a557806306fdde03146101cd578063081812fc146101e2578063095ea7b31461020d57806323b872dd146102225780632d72225b14610235575b5f80fd5b6101b86101b3366004611553565b6103a9565b60405190151581526020015b60405180910390f35b6101d56103fa565b6040516101c4919061159c565b6101f56101f03660046115ae565b61048a565b6040516001600160a01b0390911681526020016101c4565b61022061021b3660046115e0565b6104b1565b005b610220610230366004611608565b6104c0565b6101d56102433660046115ae565b61054e565b6102506105f4565b6040519081526020016101c4565b61022061026c366004611608565b6106fa565b610250600c5481565b6008546101f5906001600160a01b031681565b6101d561029b366004611641565b610719565b6101f56102ae3660046115ae565b61074b565b6102506102c1366004611661565b610755565b6102206102d4366004611701565b61079a565b6102206102e7366004611641565b6107a6565b6101d5610828565b610220610302366004611701565b610837565b610220610315366004611753565b610872565b6007546101f5906001600160a01b031681565b61034061033b3660046115ae565b61087d565b6040516101c491906117e0565b61022061035b3660046117f2565b610962565b6101d561036e3660046115ae565b610979565b61025060095481565b6101d56109ea565b6101b8610392366004611869565b6109f7565b610250600b5481565b610250600a5481565b5f6001600160e01b031982166380ac58cd60e01b14806103d957506001600160e01b03198216635b5e139f60e01b145b806103f457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546104099061189a565b80601f01602080910402602001604051908101604052809291908181526020018280546104359061189a565b80156104805780601f1061045757610100808354040283529160200191610480565b820191905f5260205f20905b81548152906001019060200180831161046357829003601f168201915b5050505050905090565b5f61049482610a24565b505f828152600560205260409020546001600160a01b03166103f4565b6104bc828233610a5c565b5050565b6001600160a01b0382166104ee57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f6104fa838333610a69565b9050836001600160a01b0316816001600160a01b031614610548576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016104e5565b50505050565b600e818154811061055d575f80fd5b905f5260205f20015f9150905080546105759061189a565b80601f01602080910402602001604051908101604052809291908181526020018280546105a19061189a565b80156105ec5780601f106105c3576101008083540402835291602001916105ec565b820191905f5260205f20905b8154815290600101906020018083116105cf57829003601f168201915b505050505081565b600b546040516370a0823160e01b81523060048201525f91906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561065c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068091906118d2565b10156106c75760405162461bcd60e51b81526020600482015260166024820152754e6f7420656e6f756768204c494e4b20746f6b656e7360501b60448201526064016104e5565b6106f57f1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef5f1b600954610b5b565b905090565b61071483838360405180602001604052805f815250610962565b505050565b600f602052815f5260405f208181548110610732575f80fd5b905f5260205f20015f915091505080546105759061189a565b5f6103f482610a24565b5f6001600160a01b03821661077f576040516322718ad960e21b81525f60048201526024016104e5565b506001600160a01b03165f9081526004602052604090205490565b600d6104bc828261192d565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461081e5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016104e5565b6104bc8282610ccf565b6060600280546104099061189a565b600e80546001810182555f919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd016104bc828261192d565b6104bc338383610f2b565b6060600f5f8381526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015610957578382905f5260205f200180546108cc9061189a565b80601f01602080910402602001604051908101604052809291908181526020018280546108f89061189a565b80156109435780601f1061091a57610100808354040283529160200191610943565b820191905f5260205f20905b81548152906001019060200180831161092657829003601f168201915b5050505050815260200190600101906108af565b505050509050919050565b61096d8484846104c0565b61054884848484610fc9565b606061098482610a24565b505f61099a60408051602081019091525f815290565b90505f8151116109b85760405180602001604052805f8152506109e3565b806109c2846110ef565b6040516020016109d3929190611a04565b6040516020818303038152906040525b9392505050565b600d80546105759061189a565b6001600160a01b039182165f90815260066020908152604080832093909416825291909152205460ff1690565b5f818152600360205260408120546001600160a01b0316806103f457604051637e27328960e01b8152600481018490526024016104e5565b610714838383600161117f565b5f828152600360205260408120546001600160a01b0390811690831615610a9557610a95818486611283565b6001600160a01b03811615610acf57610ab05f855f8061117f565b6001600160a01b0381165f90815260046020526040902080545f190190555b6001600160a01b03851615610afd576001600160a01b0385165f908152600460205260409020805460010190555b5f8481526003602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084865f604051602001610bc9929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610bf693929190611a18565b6020604051808303815f875af1158015610c12573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c369190611a47565b505f8381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610c8f906001611a76565b5f8581526020818152604091829020929092558051808301879052808201849052815180820383018152606090910190915280519101205b949350505050565b5f600c546001610cdf9190611a76565b600e549091505f9067ffffffffffffffff811115610cff57610cff61167a565b604051908082528060200260200182016040528015610d3257816020015b6060815260200190600190039081610d1d5790505b506040805160018082528183019092529192505f919060208083019080368337019050509050835f1b815f81518110610d6d57610d6d611a89565b6020026020010181815250505f5b600e54811015610ead575f600e80549050835f81518110610d9e57610d9e611a89565b602002602001015183604051602001610dc1929190918252602082015260400190565b604051602081830303815290604052805190602001205f1c610de39190611a9d565b9050600e8181548110610df857610df8611a89565b905f5260205f20018054610e0b9061189a565b80601f0160208091040260200160405190810160405280929190818152602001828054610e379061189a565b8015610e825780601f10610e5957610100808354040283529160200191610e82565b820191905f5260205f20905b815481529060010190602001808311610e6557829003601f168201915b5050505050848381518110610e9957610e99611a89565b602090810291909101015250600101610d7b565b505f838152600f602090815260409091208351610ecc92850190611480565b50610ed733846112e7565b600c8054905f610ee683611abc565b91905055507f65f952dd632608f6d1db9e9311e0972e973f6e783ba47c13460083c575bf07f38383604051610f1c929190611ad4565b60405180910390a15050505050565b6001600160a01b038216610f5d57604051630b61174360e31b81526001600160a01b03831660048201526024016104e5565b6001600160a01b038381165f81815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561054857604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061100b903390889087908790600401611aec565b6020604051808303815f875af1925050508015611045575060408051601f3d908101601f1916820190925261104291810190611b28565b60015b6110ac573d808015611072576040519150601f19603f3d011682016040523d82523d5f602084013e611077565b606091505b5080515f036110a457604051633250574960e11b81526001600160a01b03851660048201526024016104e5565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146110e857604051633250574960e11b81526001600160a01b03851660048201526024016104e5565b5050505050565b60605f6110fb83611348565b60010190505f8167ffffffffffffffff81111561111a5761111a61167a565b6040519080825280601f01601f191660200182016040528015611144576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461114e57509392505050565b808061119357506001600160a01b03821615155b15611254575f6111a284610a24565b90506001600160a01b038316158015906111ce5750826001600160a01b0316816001600160a01b031614155b80156111e157506111df81846109f7565b155b1561120a5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016104e5565b81156112525783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260056020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b61128e83838361141f565b610714576001600160a01b0383166112bc57604051637e27328960e01b8152600481018290526024016104e5565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016104e5565b6001600160a01b03821661131057604051633250574960e11b81525f60048201526024016104e5565b5f61131c83835f610a69565b90506001600160a01b03811615610714576040516339e3563760e11b81525f60048201526024016104e5565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106113865772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106113b2576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106113d057662386f26fc10000830492506010015b6305f5e10083106113e8576305f5e100830492506008015b61271083106113fc57612710830492506004015b6064831061140e576064830492506002015b600a83106103f45760010192915050565b5f6001600160a01b03831615801590610cc75750826001600160a01b0316846001600160a01b03161480611458575061145884846109f7565b80610cc75750505f908152600560205260409020546001600160a01b03908116911614919050565b828054828255905f5260205f209081019282156114c4579160200282015b828111156114c457825182906114b4908261192d565b509160200191906001019061149e565b506114d09291506114d4565b5090565b808211156114d0575f6114e782826114f0565b506001016114d4565b5080546114fc9061189a565b5f825580601f1061150b575050565b601f0160209004905f5260205f2090810190611527919061152a565b50565b5b808211156114d0575f815560010161152b565b6001600160e01b031981168114611527575f80fd5b5f60208284031215611563575f80fd5b81356109e38161153e565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6109e3602083018461156e565b5f602082840312156115be575f80fd5b5035919050565b80356001600160a01b03811681146115db575f80fd5b919050565b5f80604083850312156115f1575f80fd5b6115fa836115c5565b946020939093013593505050565b5f805f6060848603121561161a575f80fd5b611623846115c5565b9250611631602085016115c5565b9150604084013590509250925092565b5f8060408385031215611652575f80fd5b50508035926020909101359150565b5f60208284031215611671575f80fd5b6109e3826115c5565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff808411156116a8576116a861167a565b604051601f8501601f19908116603f011681019082821181831017156116d0576116d061167a565b816040528093508581528686860111156116e8575f80fd5b858560208301375f602087830101525050509392505050565b5f60208284031215611711575f80fd5b813567ffffffffffffffff811115611727575f80fd5b8201601f81018413611737575f80fd5b610cc78482356020840161168e565b8015158114611527575f80fd5b5f8060408385031215611764575f80fd5b61176d836115c5565b9150602083013561177d81611746565b809150509250929050565b5f8282518085526020808601955060208260051b840101602086015f5b848110156117d357601f198684030189526117c183835161156e565b988401989250908301906001016117a5565b5090979650505050505050565b602081525f6109e36020830184611788565b5f805f8060808587031215611805575f80fd5b61180e856115c5565b935061181c602086016115c5565b925060408501359150606085013567ffffffffffffffff81111561183e575f80fd5b8501601f8101871361184e575f80fd5b61185d8782356020840161168e565b91505092959194509250565b5f806040838503121561187a575f80fd5b611883836115c5565b9150611891602084016115c5565b90509250929050565b600181811c908216806118ae57607f821691505b6020821081036118cc57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f602082840312156118e2575f80fd5b5051919050565b601f82111561071457805f5260205f20601f840160051c8101602085101561190e5750805b601f840160051c820191505b818110156110e8575f815560010161191a565b815167ffffffffffffffff8111156119475761194761167a565b61195b81611955845461189a565b846118e9565b602080601f83116001811461198e575f84156119775750858301515b5f19600386901b1c1916600185901b1785556119e5565b5f85815260208120601f198616915b828110156119bc5788860151825594840194600190910190840161199d565b50858210156119d957878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f81518060208401855e5f93019283525090919050565b5f610cc7611a1283866119ed565b846119ed565b60018060a01b0384168152826020820152606060408201525f611a3e606083018461156e565b95945050505050565b5f60208284031215611a57575f80fd5b81516109e381611746565b634e487b7160e01b5f52601160045260245ffd5b808201808211156103f4576103f4611a62565b634e487b7160e01b5f52603260045260245ffd5b5f82611ab757634e487b7160e01b5f52601260045260245ffd5b500690565b5f60018201611acd57611acd611a62565b5060010190565b828152604060208201525f610cc76040830184611788565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f90611b1e9083018461156e565b9695505050505050565b5f60208284031215611b38575f80fd5b81516109e38161153e56fea2646970667358221220f3b4d570f88033d3c446a12bfa7e5b0347b7e6630e0dea27bfaf00890c6a4db864736f6c63430008190033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1E3F CODESIZE SUB DUP1 PUSH2 0x1E3F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH13 0x111E5B985B5A58D05C9D139195 PUSH1 0x9A SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH4 0x11105495 PUSH1 0xE2 SHL SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0xA0 MSTORE DUP6 AND PUSH1 0x80 MSTORE SWAP1 PUSH1 0x1 PUSH2 0x8D DUP4 DUP3 PUSH2 0x1D8 JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0x9A DUP3 DUP3 PUSH2 0x1D8 JUMP JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP6 SWAP1 SWAP7 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE PUSH1 0xA SSTORE POP PUSH1 0xB SSTORE PUSH8 0x16345785D8A0000 PUSH1 0x9 SSTORE PUSH2 0x297 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH2 0x119 DUP2 PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH2 0x12A DUP2 PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x168 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x186 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D3 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1BD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1F1 JUMPI PUSH2 0x1F1 PUSH2 0x140 JUMP JUMPDEST PUSH2 0x205 DUP2 PUSH2 0x1FF DUP5 SLOAD PUSH2 0x154 JUMP JUMPDEST DUP5 PUSH2 0x18C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x238 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x221 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x28F JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x266 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x247 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x283 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1B79 PUSH2 0x2C6 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x7B1 ADD MSTORE PUSH2 0xB8D ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x617 ADD MSTORE PUSH2 0xB5E ADD MSTORE PUSH2 0x1B79 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BA19512 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xE84B3AD0 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE84B3AD0 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xEB2E578B EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xF68016B7 EQ PUSH2 0x3A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x373 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9CC8C69B GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x9CC8C69B EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xA3E56FA8 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xA630FD97 EQ PUSH2 0x32D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7BA19512 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FF6BC4E GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x57970E93 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x57970E93 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x5ED5B5AF EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FF6BC4E EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x4EB7E95F EQ PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x2D72225B EQ PUSH2 0x235 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1553 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH2 0x250 PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x250 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1F5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST PUSH2 0x250 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH2 0x220 PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1F5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x340 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH2 0x250 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x250 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x250 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3D9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3F4 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x409 SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x435 SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x480 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x457 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x480 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x463 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x494 DUP3 PUSH2 0xA24 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x4BC DUP3 DUP3 CALLER PUSH2 0xA5C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4FA DUP4 DUP4 CALLER PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x55D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x575 SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5A1 SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x65C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x680 SWAP2 SWAP1 PUSH2 0x18D2 JUMP JUMPDEST LT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F7420656E6F756768204C494E4B20746F6B656E73 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x6F5 PUSH32 0x1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF PUSH0 SHL PUSH1 0x9 SLOAD PUSH2 0xB5B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x714 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x962 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x732 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 SLOAD PUSH2 0x575 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH0 PUSH2 0x3F4 DUP3 PUSH2 0xA24 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH2 0x4BC DUP3 DUP3 PUSH2 0x192D JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x4BC DUP3 DUP3 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x409 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD ADD PUSH2 0x4BC DUP3 DUP3 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x4BC CALLER DUP4 DUP4 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x957 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x8CC SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F8 SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x943 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x91A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x943 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x926 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x8AF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x96D DUP5 DUP5 DUP5 PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x548 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x984 DUP3 PUSH2 0xA24 JUMP JUMPDEST POP PUSH0 PUSH2 0x99A PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9E3 JUMP JUMPDEST DUP1 PUSH2 0x9C2 DUP5 PUSH2 0x10EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9D3 SWAP3 SWAP2 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH2 0x575 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x714 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xA95 JUMPI PUSH2 0xA95 DUP2 DUP5 DUP7 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xACF JUMPI PUSH2 0xAB0 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xAFD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBC9 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC12 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP9 SWAP1 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP7 DUP5 MSTORE SWAP3 SWAP1 SWAP2 MSTORE PUSH2 0xC8F SWAP1 PUSH1 0x1 PUSH2 0x1A76 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD PUSH1 0x1 PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCFF JUMPI PUSH2 0xCFF PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD32 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD1D JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 PUSH0 SHL DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xD6D JUMPI PUSH2 0xD6D PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 JUMPDEST PUSH1 0xE SLOAD DUP2 LT ISZERO PUSH2 0xEAD JUMPI PUSH0 PUSH1 0xE DUP1 SLOAD SWAP1 POP DUP4 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xD9E JUMPI PUSH2 0xD9E PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDC1 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x1A9D JUMP JUMPDEST SWAP1 POP PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDF8 JUMPI PUSH2 0xDF8 PUSH2 0x1A89 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xE0B SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE37 SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE82 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE59 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE82 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE65 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE99 JUMPI PUSH2 0xE99 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0xD7B JUMP JUMPDEST POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xECC SWAP3 DUP6 ADD SWAP1 PUSH2 0x1480 JUMP JUMPDEST POP PUSH2 0xED7 CALLER DUP5 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP1 PUSH0 PUSH2 0xEE6 DUP4 PUSH2 0x1ABC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x65F952DD632608F6D1DB9E9311E0972E973F6E783BA47C13460083C575BF07F3 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF1C SWAP3 SWAP2 SWAP1 PUSH2 0x1AD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF5D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x100B SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1045 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1042 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10AC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1072 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x10E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x10FB DUP4 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x111A JUMPI PUSH2 0x111A PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1144 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x114E JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1193 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1254 JUMPI PUSH0 PUSH2 0x11A2 DUP5 PUSH2 0xA24 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11CE JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x11E1 JUMPI POP PUSH2 0x11DF DUP2 DUP5 PUSH2 0x9F7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x120A JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1252 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x128E DUP4 DUP4 DUP4 PUSH2 0x141F JUMP JUMPDEST PUSH2 0x714 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1310 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH0 PUSH2 0x131C DUP4 DUP4 PUSH0 PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x714 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1386 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13B2 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13D0 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x13E8 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x13FC JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x140E JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3F4 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xCC7 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1458 JUMPI POP PUSH2 0x1458 DUP5 DUP5 PUSH2 0x9F7 JUMP JUMPDEST DUP1 PUSH2 0xCC7 JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x14C4 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x14C4 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH2 0x14B4 SWAP1 DUP3 PUSH2 0x192D JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x149E JUMP JUMPDEST POP PUSH2 0x14D0 SWAP3 SWAP2 POP PUSH2 0x14D4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x14D0 JUMPI PUSH0 PUSH2 0x14E7 DUP3 DUP3 PUSH2 0x14F0 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x14D4 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x14FC SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x150B JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1527 SWAP2 SWAP1 PUSH2 0x152A JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x14D0 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x152B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1527 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1563 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9E3 DUP2 PUSH2 0x153E JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x9E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x156E JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15DB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15FA DUP4 PUSH2 0x15C5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x161A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1623 DUP5 PUSH2 0x15C5 JUMP JUMPDEST SWAP3 POP PUSH2 0x1631 PUSH1 0x20 DUP6 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1652 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1671 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9E3 DUP3 PUSH2 0x15C5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x16A8 JUMPI PUSH2 0x16A8 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x16D0 JUMPI PUSH2 0x16D0 PUSH2 0x167A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x16E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1711 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1727 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1737 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCC7 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x168E JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1527 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1764 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x176D DUP4 PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x177D DUP2 PUSH2 0x1746 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD PUSH1 0x20 DUP7 ADD PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x17D3 JUMPI PUSH1 0x1F NOT DUP7 DUP5 SUB ADD DUP10 MSTORE PUSH2 0x17C1 DUP4 DUP4 MLOAD PUSH2 0x156E JUMP JUMPDEST SWAP9 DUP5 ADD SWAP9 SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17A5 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x9E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1788 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1805 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x180E DUP6 PUSH2 0x15C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x181C PUSH1 0x20 DUP7 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x183E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x184E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x185D DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x168E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x187A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1883 DUP4 PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1891 PUSH1 0x20 DUP5 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x18AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x714 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x190E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10E8 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x191A JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1947 JUMPI PUSH2 0x1947 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x195B DUP2 PUSH2 0x1955 DUP5 SLOAD PUSH2 0x189A JUMP JUMPDEST DUP5 PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x198E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1977 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x19E5 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19BC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x199D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x19D9 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC7 PUSH2 0x1A12 DUP4 DUP7 PUSH2 0x19ED JUMP JUMPDEST DUP5 PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x1A3E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x156E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9E3 DUP2 PUSH2 0x1746 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3F4 JUMPI PUSH2 0x3F4 PUSH2 0x1A62 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1AB7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1ACD JUMPI PUSH2 0x1ACD PUSH2 0x1A62 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xCC7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1B1E SWAP1 DUP4 ADD DUP5 PUSH2 0x156E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B38 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9E3 DUP2 PUSH2 0x153E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB4 0xD5 PUSH17 0xF88033D3C446A12BFA7E5B0347B7E6630E 0xD 0xEA 0x27 0xBF 0xAF STOP DUP10 0xC PUSH11 0x4DB864736F6C6343000819 STOP CALLER ",
							"sourceMap": "178:2173:14:-:0;;;700:395;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1381:113:4;;;;;;;;;;;-1:-1:-1;;;1381:113:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:4;;;;-1:-1:-1;;;;;9306:32:0;;;;;9344;;;;1381:113:4;1447:5;:13;1381:113;1447:5;:13;:::i;:::-;-1:-1:-1;1470:7:4;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;;930:14:14::2;:32:::0;;-1:-1:-1;;;;;930:32:14;;::::2;-1:-1:-1::0;;;;;;930:32:14;;::::2;;::::0;;;972:9:::2;:22:::0;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;1004:8:::2;:20:::0;-1:-1:-1;1034:10:14::2;:24:::0;1074:14:::2;1068:3;:20:::0;178:2173;;14:139:15;-1:-1:-1;;;;;97:31:15;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:532::-;263:6;271;279;287;340:3;328:9;319:7;315:23;311:33;308:53;;;357:1;354;347:12;308:53;389:9;383:16;408:39;441:5;408:39;:::i;:::-;516:2;501:18;;495:25;466:5;;-1:-1:-1;529:41:15;495:25;529:41;:::i;:::-;636:2;621:18;;615:25;680:2;665:18;;;659:25;158:532;;589:7;;-1:-1:-1;158:532:15;-1:-1:-1;;;158:532:15:o;695:127::-;756:10;751:3;747:20;744:1;737:31;787:4;784:1;777:15;811:4;808:1;801:15;827:380;906:1;902:12;;;;949;;;970:61;;1024:4;1016:6;1012:17;1002:27;;970:61;1077:2;1069:6;1066:14;1046:18;1043:38;1040:161;;1123:10;1118:3;1114:20;1111:1;1104:31;1158:4;1155:1;1148:15;1186:4;1183:1;1176:15;1040:161;;827:380;;;:::o;1338:518::-;1440:2;1435:3;1432:11;1429:421;;;1476:5;1473:1;1466:16;1520:4;1517:1;1507:18;1590:2;1578:10;1574:19;1571:1;1567:27;1561:4;1557:38;1626:4;1614:10;1611:20;1608:47;;;-1:-1:-1;1649:4:15;1608:47;1704:2;1699:3;1695:12;1692:1;1688:20;1682:4;1678:31;1668:41;;1759:81;1777:2;1770:5;1767:13;1759:81;;;1836:1;1822:16;;1803:1;1792:13;1759:81;;;1763:3;;1429:421;1338:518;;;:::o;2032:1345::-;2152:10;;-1:-1:-1;;;;;2174:30:15;;2171:56;;;2207:18;;:::i;:::-;2236:97;2326:6;2286:38;2318:4;2312:11;2286:38;:::i;:::-;2280:4;2236:97;:::i;:::-;2388:4;;2445:2;2434:14;;2462:1;2457:663;;;;3164:1;3181:6;3178:89;;;-1:-1:-1;3233:19:15;;;3227:26;3178:89;-1:-1:-1;;1989:1:15;1985:11;;;1981:24;1977:29;1967:40;2013:1;2009:11;;;1964:57;3280:81;;2427:944;;2457:663;1285:1;1278:14;;;1322:4;1309:18;;-1:-1:-1;;2493:20:15;;;2611:236;2625:7;2622:1;2619:14;2611:236;;;2714:19;;;2708:26;2693:42;;2806:27;;;;2774:1;2762:14;;;;2641:19;;2611:236;;;2615:3;2875:6;2866:7;2863:19;2860:201;;;2936:19;;;2930:26;-1:-1:-1;;3019:1:15;3015:14;;;3031:3;3011:24;3007:37;3003:42;2988:58;2973:74;;2860:201;;;3107:1;3098:6;3095:1;3091:14;3087:22;3081:4;3074:36;2427:944;;;;;2032:1345;;:::o;:::-;178:2173:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1214": {
									"entryPoint": 2652,
									"id": 1214,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1280": {
									"entryPoint": 4479,
									"id": 1280,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_607": {
									"entryPoint": null,
									"id": 607,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_862": {
									"entryPoint": 4739,
									"id": 862,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1410": {
									"entryPoint": 4041,
									"id": 1410,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_789": {
									"entryPoint": null,
									"id": 789,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_825": {
									"entryPoint": 5151,
									"id": 825,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1018": {
									"entryPoint": 4839,
									"id": 1018,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1586": {
									"entryPoint": null,
									"id": 1586,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_776": {
									"entryPoint": null,
									"id": 776,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1346": {
									"entryPoint": 2596,
									"id": 1346,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1317": {
									"entryPoint": 3883,
									"id": 1317,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_968": {
									"entryPoint": 2665,
									"id": 968,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@addTrait_3160": {
									"entryPoint": 2103,
									"id": 3160,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_623": {
									"entryPoint": 1201,
									"id": 623,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_531": {
									"entryPoint": 1877,
									"id": 531,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@baseArtwork_3079": {
									"entryPoint": 2538,
									"id": 3079,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fee_3071": {
									"entryPoint": null,
									"id": 3071,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fulfillRandomness_3290": {
									"entryPoint": 3279,
									"id": 3290,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@gasLimit_3073": {
									"entryPoint": null,
									"id": 3073,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getApproved_640": {
									"entryPoint": 1162,
									"id": 640,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getNFTTraits_3303": {
									"entryPoint": 2173,
									"id": 3303,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_673": {
									"entryPoint": 2551,
									"id": 673,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@linkToken_3066": {
									"entryPoint": null,
									"id": 3066,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log10_2769": {
									"entryPoint": 4936,
									"id": 2769,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@makeRequestId_169": {
									"entryPoint": null,
									"id": 169,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@makeVRFInputSeed_150": {
									"entryPoint": null,
									"id": 150,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@name_553": {
									"entryPoint": 1018,
									"id": 553,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nftTraits_3087": {
									"entryPoint": 1817,
									"id": 3087,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_544": {
									"entryPoint": 1867,
									"id": 544,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rawFulfillRandomness_119": {
									"entryPoint": 1958,
									"id": 119,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@requestFee_3075": {
									"entryPoint": null,
									"id": 3075,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestRandomTraits_3184": {
									"entryPoint": 1524,
									"id": 3184,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@requestRandomness_70": {
									"entryPoint": 2907,
									"id": 70,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeTransferFrom_737": {
									"entryPoint": 1786,
									"id": 737,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_763": {
									"entryPoint": 2402,
									"id": 763,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_656": {
									"entryPoint": 2162,
									"id": 656,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseArtwork_3148": {
									"entryPoint": 1946,
									"id": 3148,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1882": {
									"entryPoint": null,
									"id": 1882,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_503": {
									"entryPoint": 937,
									"id": 503,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_562": {
									"entryPoint": 2088,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1672": {
									"entryPoint": 4335,
									"id": 1672,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_598": {
									"entryPoint": 2425,
									"id": 598,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalNFTsMinted_3077": {
									"entryPoint": null,
									"id": 3077,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@traits_3082": {
									"entryPoint": 1358,
									"id": 3082,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_719": {
									"entryPoint": 1216,
									"id": 719,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@vrfCoordinator_3064": {
									"entryPoint": null,
									"id": 3064,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 5774,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_array_string_dyn": {
									"entryPoint": 6024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 6637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6892,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6680,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256_t_address_t_uint256__to_t_bytes32_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e6b1fab5e2902145d60af20d931dd202525df1dcee37251d6d34ca7cc4f7014__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6868,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 6377,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 6813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6793,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 5958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 5438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15259:15",
										"nodeType": "YulBlock",
										"src": "0:15259:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:15",
													"nodeType": "YulBlock",
													"src": "58:87:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:15",
																"nodeType": "YulBlock",
																"src": "123:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:15",
																					"nodeType": "YulLiteral",
																					"src": "132:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:15",
																					"nodeType": "YulLiteral",
																					"src": "135:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:15"
																			},
																			"nativeSrc": "125:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:15"
																		},
																		"nativeSrc": "125:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:15",
																								"nodeType": "YulLiteral",
																								"src": "103:3:15",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:15",
																								"nodeType": "YulLiteral",
																								"src": "108:10:15",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:15"
																						},
																						"nativeSrc": "99:20:15",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:15"
																				},
																				"nativeSrc": "88:32:15",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:15"
																		},
																		"nativeSrc": "78:43:15",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:15"
																},
																"nativeSrc": "71:51:15",
																"nodeType": "YulFunctionCall",
																"src": "71:51:15"
															},
															"nativeSrc": "68:71:15",
															"nodeType": "YulIf",
															"src": "68:71:15"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:15",
														"nodeType": "YulTypedName",
														"src": "47:5:15",
														"type": ""
													}
												],
												"src": "14:131:15"
											},
											{
												"body": {
													"nativeSrc": "219:176:15",
													"nodeType": "YulBlock",
													"src": "219:176:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:15",
																"nodeType": "YulBlock",
																"src": "265:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:15",
																					"nodeType": "YulLiteral",
																					"src": "274:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:15",
																					"nodeType": "YulLiteral",
																					"src": "277:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:15"
																			},
																			"nativeSrc": "267:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:15"
																		},
																		"nativeSrc": "267:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:15"
																		},
																		"nativeSrc": "236:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:15",
																		"nodeType": "YulLiteral",
																		"src": "261:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:15"
																},
																"nativeSrc": "232:32:15",
																"nodeType": "YulFunctionCall",
																"src": "232:32:15"
															},
															"nativeSrc": "229:52:15",
															"nodeType": "YulIf",
															"src": "229:52:15"
														},
														{
															"nativeSrc": "290:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:15"
																},
																"nativeSrc": "303:23:15",
																"nodeType": "YulFunctionCall",
																"src": "303:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:15",
																	"nodeType": "YulTypedName",
																	"src": "294:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:15"
																},
																"nativeSrc": "335:30:15",
																"nodeType": "YulFunctionCall",
																"src": "335:30:15"
															},
															"nativeSrc": "335:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:15"
														},
														{
															"nativeSrc": "374:15:15",
															"nodeType": "YulAssignment",
															"src": "374:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:15",
																"nodeType": "YulIdentifier",
																"src": "384:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:15",
														"nodeType": "YulTypedName",
														"src": "185:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:15",
														"nodeType": "YulTypedName",
														"src": "196:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:15",
														"nodeType": "YulTypedName",
														"src": "208:6:15",
														"type": ""
													}
												],
												"src": "150:245:15"
											},
											{
												"body": {
													"nativeSrc": "495:92:15",
													"nodeType": "YulBlock",
													"src": "495:92:15",
													"statements": [
														{
															"nativeSrc": "505:26:15",
															"nodeType": "YulAssignment",
															"src": "505:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:15",
																		"nodeType": "YulLiteral",
																		"src": "528:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:15"
																},
																"nativeSrc": "513:18:15",
																"nodeType": "YulFunctionCall",
																"src": "513:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:15"
																				},
																				"nativeSrc": "565:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:15"
																		},
																		"nativeSrc": "558:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:15"
																},
																"nativeSrc": "540:41:15",
																"nodeType": "YulFunctionCall",
																"src": "540:41:15"
															},
															"nativeSrc": "540:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:15",
														"nodeType": "YulTypedName",
														"src": "464:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:15",
														"nodeType": "YulTypedName",
														"src": "475:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:15",
														"nodeType": "YulTypedName",
														"src": "486:4:15",
														"type": ""
													}
												],
												"src": "400:187:15"
											},
											{
												"body": {
													"nativeSrc": "653:239:15",
													"nodeType": "YulBlock",
													"src": "653:239:15",
													"statements": [
														{
															"nativeSrc": "663:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "663:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "683:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "683:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "677:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "677:5:15"
																},
																"nativeSrc": "677:12:15",
																"nodeType": "YulFunctionCall",
																"src": "677:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "667:6:15",
																	"nodeType": "YulTypedName",
																	"src": "667:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "705:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "705:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "710:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "710:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "698:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:15"
																},
																"nativeSrc": "698:19:15",
																"nodeType": "YulFunctionCall",
																"src": "698:19:15"
															},
															"nativeSrc": "698:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "698:19:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "736:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "736:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "741:4:15",
																				"nodeType": "YulLiteral",
																				"src": "741:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "732:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:15"
																		},
																		"nativeSrc": "732:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "732:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "752:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "752:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "759:4:15",
																				"nodeType": "YulLiteral",
																				"src": "759:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "748:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:15"
																		},
																		"nativeSrc": "748:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "748:16:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "766:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "766:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "726:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "726:5:15"
																},
																"nativeSrc": "726:47:15",
																"nodeType": "YulFunctionCall",
																"src": "726:47:15"
															},
															"nativeSrc": "726:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "726:47:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "797:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "797:3:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "802:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "802:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "793:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "793:3:15"
																				},
																				"nativeSrc": "793:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "793:16:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "811:4:15",
																				"nodeType": "YulLiteral",
																				"src": "811:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "789:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:15"
																		},
																		"nativeSrc": "789:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "789:27:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "818:1:15",
																		"nodeType": "YulLiteral",
																		"src": "818:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "782:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:15"
																},
																"nativeSrc": "782:38:15",
																"nodeType": "YulFunctionCall",
																"src": "782:38:15"
															},
															"nativeSrc": "782:38:15",
															"nodeType": "YulExpressionStatement",
															"src": "782:38:15"
														},
														{
															"nativeSrc": "829:57:15",
															"nodeType": "YulAssignment",
															"src": "829:57:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "844:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "844:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "857:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "857:6:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "865:2:15",
																								"nodeType": "YulLiteral",
																								"src": "865:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "853:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "853:3:15"
																						},
																						"nativeSrc": "853:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "853:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "874:2:15",
																								"nodeType": "YulLiteral",
																								"src": "874:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "870:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "870:3:15"
																						},
																						"nativeSrc": "870:7:15",
																						"nodeType": "YulFunctionCall",
																						"src": "870:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "849:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "849:3:15"
																				},
																				"nativeSrc": "849:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "849:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "840:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:15"
																		},
																		"nativeSrc": "840:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "840:39:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "881:4:15",
																		"nodeType": "YulLiteral",
																		"src": "881:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "836:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:15"
																},
																"nativeSrc": "836:50:15",
																"nodeType": "YulFunctionCall",
																"src": "836:50:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "829:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "592:300:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "630:5:15",
														"nodeType": "YulTypedName",
														"src": "630:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "637:3:15",
														"nodeType": "YulTypedName",
														"src": "637:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "645:3:15",
														"nodeType": "YulTypedName",
														"src": "645:3:15",
														"type": ""
													}
												],
												"src": "592:300:15"
											},
											{
												"body": {
													"nativeSrc": "1018:110:15",
													"nodeType": "YulBlock",
													"src": "1018:110:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1035:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1035:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1046:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1046:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1028:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:15"
																},
																"nativeSrc": "1028:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1028:21:15"
															},
															"nativeSrc": "1028:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "1028:21:15"
														},
														{
															"nativeSrc": "1058:64:15",
															"nodeType": "YulAssignment",
															"src": "1058:64:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1095:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1095:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1107:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1107:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1118:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1118:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1103:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1103:3:15"
																		},
																		"nativeSrc": "1103:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1103:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "1066:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "1066:28:15"
																},
																"nativeSrc": "1066:56:15",
																"nodeType": "YulFunctionCall",
																"src": "1066:56:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1058:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1058:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "897:231:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "987:9:15",
														"nodeType": "YulTypedName",
														"src": "987:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "998:6:15",
														"nodeType": "YulTypedName",
														"src": "998:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1009:4:15",
														"nodeType": "YulTypedName",
														"src": "1009:4:15",
														"type": ""
													}
												],
												"src": "897:231:15"
											},
											{
												"body": {
													"nativeSrc": "1203:110:15",
													"nodeType": "YulBlock",
													"src": "1203:110:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1249:16:15",
																"nodeType": "YulBlock",
																"src": "1249:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1258:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1258:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1261:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1261:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1251:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1251:6:15"
																			},
																			"nativeSrc": "1251:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1251:12:15"
																		},
																		"nativeSrc": "1251:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1251:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1224:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1224:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1233:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1233:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:15"
																		},
																		"nativeSrc": "1220:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1216:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:15"
																},
																"nativeSrc": "1216:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1216:32:15"
															},
															"nativeSrc": "1213:52:15",
															"nodeType": "YulIf",
															"src": "1213:52:15"
														},
														{
															"nativeSrc": "1274:33:15",
															"nodeType": "YulAssignment",
															"src": "1274:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1297:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1297:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1284:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1284:12:15"
																},
																"nativeSrc": "1284:23:15",
																"nodeType": "YulFunctionCall",
																"src": "1284:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1274:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1274:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1133:180:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1169:9:15",
														"nodeType": "YulTypedName",
														"src": "1169:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1180:7:15",
														"nodeType": "YulTypedName",
														"src": "1180:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1192:6:15",
														"nodeType": "YulTypedName",
														"src": "1192:6:15",
														"type": ""
													}
												],
												"src": "1133:180:15"
											},
											{
												"body": {
													"nativeSrc": "1419:102:15",
													"nodeType": "YulBlock",
													"src": "1419:102:15",
													"statements": [
														{
															"nativeSrc": "1429:26:15",
															"nodeType": "YulAssignment",
															"src": "1429:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1441:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1441:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1452:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1437:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1437:3:15"
																},
																"nativeSrc": "1437:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1437:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1429:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1429:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1471:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1471:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1486:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1486:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1502:3:15",
																								"nodeType": "YulLiteral",
																								"src": "1502:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1507:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1507:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1498:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1498:3:15"
																						},
																						"nativeSrc": "1498:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1498:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1511:1:15",
																						"nodeType": "YulLiteral",
																						"src": "1511:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1494:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:15"
																				},
																				"nativeSrc": "1494:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1482:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1482:3:15"
																		},
																		"nativeSrc": "1482:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1464:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1464:6:15"
																},
																"nativeSrc": "1464:51:15",
																"nodeType": "YulFunctionCall",
																"src": "1464:51:15"
															},
															"nativeSrc": "1464:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "1464:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1318:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1388:9:15",
														"nodeType": "YulTypedName",
														"src": "1388:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1399:6:15",
														"nodeType": "YulTypedName",
														"src": "1399:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1410:4:15",
														"nodeType": "YulTypedName",
														"src": "1410:4:15",
														"type": ""
													}
												],
												"src": "1318:203:15"
											},
											{
												"body": {
													"nativeSrc": "1575:124:15",
													"nodeType": "YulBlock",
													"src": "1575:124:15",
													"statements": [
														{
															"nativeSrc": "1585:29:15",
															"nodeType": "YulAssignment",
															"src": "1585:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1607:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1607:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1594:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1594:12:15"
																},
																"nativeSrc": "1594:20:15",
																"nodeType": "YulFunctionCall",
																"src": "1594:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1585:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1585:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1677:16:15",
																"nodeType": "YulBlock",
																"src": "1677:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1686:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1686:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1689:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1689:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1679:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1679:6:15"
																			},
																			"nativeSrc": "1679:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1679:12:15"
																		},
																		"nativeSrc": "1679:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1679:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1636:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1636:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1647:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1647:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1662:3:15",
																										"nodeType": "YulLiteral",
																										"src": "1662:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1667:1:15",
																										"nodeType": "YulLiteral",
																										"src": "1667:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1658:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1658:3:15"
																								},
																								"nativeSrc": "1658:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1658:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1671:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1671:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1654:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1654:3:15"
																						},
																						"nativeSrc": "1654:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1654:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1643:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1643:3:15"
																				},
																				"nativeSrc": "1643:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1643:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1633:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1633:2:15"
																		},
																		"nativeSrc": "1633:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1633:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1626:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:15"
																},
																"nativeSrc": "1626:50:15",
																"nodeType": "YulFunctionCall",
																"src": "1626:50:15"
															},
															"nativeSrc": "1623:70:15",
															"nodeType": "YulIf",
															"src": "1623:70:15"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1526:173:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1554:6:15",
														"nodeType": "YulTypedName",
														"src": "1554:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1565:5:15",
														"nodeType": "YulTypedName",
														"src": "1565:5:15",
														"type": ""
													}
												],
												"src": "1526:173:15"
											},
											{
												"body": {
													"nativeSrc": "1791:167:15",
													"nodeType": "YulBlock",
													"src": "1791:167:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1837:16:15",
																"nodeType": "YulBlock",
																"src": "1837:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1849:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1849:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1839:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:15"
																			},
																			"nativeSrc": "1839:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1839:12:15"
																		},
																		"nativeSrc": "1839:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1839:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1812:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1812:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1821:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1821:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1808:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:15"
																		},
																		"nativeSrc": "1808:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1833:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1833:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1804:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1804:3:15"
																},
																"nativeSrc": "1804:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1804:32:15"
															},
															"nativeSrc": "1801:52:15",
															"nodeType": "YulIf",
															"src": "1801:52:15"
														},
														{
															"nativeSrc": "1862:39:15",
															"nodeType": "YulAssignment",
															"src": "1862:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1891:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1891:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1872:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1872:18:15"
																},
																"nativeSrc": "1872:29:15",
																"nodeType": "YulFunctionCall",
																"src": "1872:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1862:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1862:6:15"
																}
															]
														},
														{
															"nativeSrc": "1910:42:15",
															"nodeType": "YulAssignment",
															"src": "1910:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1937:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1937:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1948:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1948:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1933:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1933:3:15"
																		},
																		"nativeSrc": "1933:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1933:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1920:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1920:12:15"
																},
																"nativeSrc": "1920:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1920:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1910:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1910:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1704:254:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1749:9:15",
														"nodeType": "YulTypedName",
														"src": "1749:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1760:7:15",
														"nodeType": "YulTypedName",
														"src": "1760:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1772:6:15",
														"nodeType": "YulTypedName",
														"src": "1772:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1780:6:15",
														"nodeType": "YulTypedName",
														"src": "1780:6:15",
														"type": ""
													}
												],
												"src": "1704:254:15"
											},
											{
												"body": {
													"nativeSrc": "2067:224:15",
													"nodeType": "YulBlock",
													"src": "2067:224:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2113:16:15",
																"nodeType": "YulBlock",
																"src": "2113:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2122:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2122:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2125:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2125:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2115:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2115:6:15"
																			},
																			"nativeSrc": "2115:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2115:12:15"
																		},
																		"nativeSrc": "2115:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2115:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2088:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2088:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2097:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2097:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2084:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2084:3:15"
																		},
																		"nativeSrc": "2084:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2084:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2109:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2109:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2080:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2080:3:15"
																},
																"nativeSrc": "2080:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2080:32:15"
															},
															"nativeSrc": "2077:52:15",
															"nodeType": "YulIf",
															"src": "2077:52:15"
														},
														{
															"nativeSrc": "2138:39:15",
															"nodeType": "YulAssignment",
															"src": "2138:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2167:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2167:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2148:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2148:18:15"
																},
																"nativeSrc": "2148:29:15",
																"nodeType": "YulFunctionCall",
																"src": "2148:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2138:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:15"
																}
															]
														},
														{
															"nativeSrc": "2186:48:15",
															"nodeType": "YulAssignment",
															"src": "2186:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2219:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2219:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2230:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2230:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2215:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2215:3:15"
																		},
																		"nativeSrc": "2215:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2215:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2196:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2196:18:15"
																},
																"nativeSrc": "2196:38:15",
																"nodeType": "YulFunctionCall",
																"src": "2196:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2186:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2186:6:15"
																}
															]
														},
														{
															"nativeSrc": "2243:42:15",
															"nodeType": "YulAssignment",
															"src": "2243:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2270:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2270:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2281:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2281:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2266:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2266:3:15"
																		},
																		"nativeSrc": "2266:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2266:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2253:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2253:12:15"
																},
																"nativeSrc": "2253:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2253:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2243:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1963:328:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2017:9:15",
														"nodeType": "YulTypedName",
														"src": "2017:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2028:7:15",
														"nodeType": "YulTypedName",
														"src": "2028:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2040:6:15",
														"nodeType": "YulTypedName",
														"src": "2040:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2048:6:15",
														"nodeType": "YulTypedName",
														"src": "2048:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2056:6:15",
														"nodeType": "YulTypedName",
														"src": "2056:6:15",
														"type": ""
													}
												],
												"src": "1963:328:15"
											},
											{
												"body": {
													"nativeSrc": "2397:76:15",
													"nodeType": "YulBlock",
													"src": "2397:76:15",
													"statements": [
														{
															"nativeSrc": "2407:26:15",
															"nodeType": "YulAssignment",
															"src": "2407:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2419:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2419:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2430:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2430:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2415:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2415:3:15"
																},
																"nativeSrc": "2415:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2415:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2407:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2407:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2449:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2449:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2460:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2460:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2442:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:15"
																},
																"nativeSrc": "2442:25:15",
																"nodeType": "YulFunctionCall",
																"src": "2442:25:15"
															},
															"nativeSrc": "2442:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "2442:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2296:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2366:9:15",
														"nodeType": "YulTypedName",
														"src": "2366:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2377:6:15",
														"nodeType": "YulTypedName",
														"src": "2377:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2388:4:15",
														"nodeType": "YulTypedName",
														"src": "2388:4:15",
														"type": ""
													}
												],
												"src": "2296:177:15"
											},
											{
												"body": {
													"nativeSrc": "2579:76:15",
													"nodeType": "YulBlock",
													"src": "2579:76:15",
													"statements": [
														{
															"nativeSrc": "2589:26:15",
															"nodeType": "YulAssignment",
															"src": "2589:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2601:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2601:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2612:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2612:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2597:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2597:3:15"
																},
																"nativeSrc": "2597:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2597:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2589:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2589:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2631:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2631:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2642:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2642:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2624:6:15"
																},
																"nativeSrc": "2624:25:15",
																"nodeType": "YulFunctionCall",
																"src": "2624:25:15"
															},
															"nativeSrc": "2624:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "2624:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2478:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2548:9:15",
														"nodeType": "YulTypedName",
														"src": "2548:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2559:6:15",
														"nodeType": "YulTypedName",
														"src": "2559:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2570:4:15",
														"nodeType": "YulTypedName",
														"src": "2570:4:15",
														"type": ""
													}
												],
												"src": "2478:177:15"
											},
											{
												"body": {
													"nativeSrc": "2747:161:15",
													"nodeType": "YulBlock",
													"src": "2747:161:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2793:16:15",
																"nodeType": "YulBlock",
																"src": "2793:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2802:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2802:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2805:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2805:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2795:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2795:6:15"
																			},
																			"nativeSrc": "2795:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2795:12:15"
																		},
																		"nativeSrc": "2795:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2795:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2768:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2768:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2777:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2777:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2764:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:15"
																		},
																		"nativeSrc": "2764:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2789:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2789:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2760:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2760:3:15"
																},
																"nativeSrc": "2760:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2760:32:15"
															},
															"nativeSrc": "2757:52:15",
															"nodeType": "YulIf",
															"src": "2757:52:15"
														},
														{
															"nativeSrc": "2818:33:15",
															"nodeType": "YulAssignment",
															"src": "2818:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2841:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2841:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2828:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2828:12:15"
																},
																"nativeSrc": "2828:23:15",
																"nodeType": "YulFunctionCall",
																"src": "2828:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2818:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2818:6:15"
																}
															]
														},
														{
															"nativeSrc": "2860:42:15",
															"nodeType": "YulAssignment",
															"src": "2860:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2887:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2887:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2898:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2898:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2883:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2883:3:15"
																		},
																		"nativeSrc": "2883:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2883:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2870:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2870:12:15"
																},
																"nativeSrc": "2870:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2870:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2860:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2660:248:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2705:9:15",
														"nodeType": "YulTypedName",
														"src": "2705:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2716:7:15",
														"nodeType": "YulTypedName",
														"src": "2716:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2728:6:15",
														"nodeType": "YulTypedName",
														"src": "2728:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2736:6:15",
														"nodeType": "YulTypedName",
														"src": "2736:6:15",
														"type": ""
													}
												],
												"src": "2660:248:15"
											},
											{
												"body": {
													"nativeSrc": "2983:116:15",
													"nodeType": "YulBlock",
													"src": "2983:116:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3029:16:15",
																"nodeType": "YulBlock",
																"src": "3029:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3038:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3038:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3041:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3041:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3031:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3031:6:15"
																			},
																			"nativeSrc": "3031:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3031:12:15"
																		},
																		"nativeSrc": "3031:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3031:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3004:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3004:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3013:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3013:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3000:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3000:3:15"
																		},
																		"nativeSrc": "3000:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3000:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3025:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3025:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2996:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2996:3:15"
																},
																"nativeSrc": "2996:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2996:32:15"
															},
															"nativeSrc": "2993:52:15",
															"nodeType": "YulIf",
															"src": "2993:52:15"
														},
														{
															"nativeSrc": "3054:39:15",
															"nodeType": "YulAssignment",
															"src": "3054:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3083:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3083:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3064:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "3064:18:15"
																},
																"nativeSrc": "3064:29:15",
																"nodeType": "YulFunctionCall",
																"src": "3064:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3054:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3054:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2913:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2949:9:15",
														"nodeType": "YulTypedName",
														"src": "2949:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2960:7:15",
														"nodeType": "YulTypedName",
														"src": "2960:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2972:6:15",
														"nodeType": "YulTypedName",
														"src": "2972:6:15",
														"type": ""
													}
												],
												"src": "2913:186:15"
											},
											{
												"body": {
													"nativeSrc": "3136:95:15",
													"nodeType": "YulBlock",
													"src": "3136:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3153:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3153:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3160:3:15",
																				"nodeType": "YulLiteral",
																				"src": "3160:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3165:10:15",
																				"nodeType": "YulLiteral",
																				"src": "3165:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3156:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3156:3:15"
																		},
																		"nativeSrc": "3156:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3156:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3146:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3146:6:15"
																},
																"nativeSrc": "3146:31:15",
																"nodeType": "YulFunctionCall",
																"src": "3146:31:15"
															},
															"nativeSrc": "3146:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "3146:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3193:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3193:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3196:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3196:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3186:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:15"
																},
																"nativeSrc": "3186:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3186:15:15"
															},
															"nativeSrc": "3186:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3186:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3217:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3217:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3220:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3220:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3210:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:15"
																},
																"nativeSrc": "3210:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3210:15:15"
															},
															"nativeSrc": "3210:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3210:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3104:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3104:127:15"
											},
											{
												"body": {
													"nativeSrc": "3311:557:15",
													"nodeType": "YulBlock",
													"src": "3311:557:15",
													"statements": [
														{
															"nativeSrc": "3321:28:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3321:28:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3331:18:15",
																"nodeType": "YulLiteral",
																"src": "3331:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3325:2:15",
																	"nodeType": "YulTypedName",
																	"src": "3325:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3376:22:15",
																"nodeType": "YulBlock",
																"src": "3376:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3378:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "3378:16:15"
																			},
																			"nativeSrc": "3378:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3378:18:15"
																		},
																		"nativeSrc": "3378:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3378:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3364:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3364:6:15"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3372:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "3372:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3361:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3361:2:15"
																},
																"nativeSrc": "3361:14:15",
																"nodeType": "YulFunctionCall",
																"src": "3361:14:15"
															},
															"nativeSrc": "3358:40:15",
															"nodeType": "YulIf",
															"src": "3358:40:15"
														},
														{
															"nativeSrc": "3407:17:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3407:17:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3421:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3421:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3417:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3417:3:15"
																},
																"nativeSrc": "3417:7:15",
																"nodeType": "YulFunctionCall",
																"src": "3417:7:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3411:2:15",
																	"nodeType": "YulTypedName",
																	"src": "3411:2:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3433:23:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3433:23:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3453:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3453:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3447:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3447:5:15"
																},
																"nativeSrc": "3447:9:15",
																"nodeType": "YulFunctionCall",
																"src": "3447:9:15"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3437:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3437:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3465:73:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3465:73:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3487:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3487:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "3511:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "3511:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3519:2:15",
																										"nodeType": "YulLiteral",
																										"src": "3519:2:15",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3507:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "3507:3:15"
																								},
																								"nativeSrc": "3507:15:15",
																								"nodeType": "YulFunctionCall",
																								"src": "3507:15:15"
																							},
																							{
																								"name": "_2",
																								"nativeSrc": "3524:2:15",
																								"nodeType": "YulIdentifier",
																								"src": "3524:2:15"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "3503:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3503:3:15"
																						},
																						"nativeSrc": "3503:24:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3503:24:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3529:2:15",
																						"nodeType": "YulLiteral",
																						"src": "3529:2:15",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3499:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3499:3:15"
																				},
																				"nativeSrc": "3499:33:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3499:33:15"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "3534:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "3534:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3495:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3495:3:15"
																		},
																		"nativeSrc": "3495:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3495:42:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3483:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3483:3:15"
																},
																"nativeSrc": "3483:55:15",
																"nodeType": "YulFunctionCall",
																"src": "3483:55:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3469:10:15",
																	"nodeType": "YulTypedName",
																	"src": "3469:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3597:22:15",
																"nodeType": "YulBlock",
																"src": "3597:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3599:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "3599:16:15"
																			},
																			"nativeSrc": "3599:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3599:18:15"
																		},
																		"nativeSrc": "3599:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3599:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3556:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "3556:10:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3568:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "3568:2:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3553:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3553:2:15"
																		},
																		"nativeSrc": "3553:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3553:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3576:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "3576:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3588:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3588:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3573:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3573:2:15"
																		},
																		"nativeSrc": "3573:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3573:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3550:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3550:2:15"
																},
																"nativeSrc": "3550:46:15",
																"nodeType": "YulFunctionCall",
																"src": "3550:46:15"
															},
															"nativeSrc": "3547:72:15",
															"nodeType": "YulIf",
															"src": "3547:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3635:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3635:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3639:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "3639:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3628:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3628:6:15"
																},
																"nativeSrc": "3628:22:15",
																"nodeType": "YulFunctionCall",
																"src": "3628:22:15"
															},
															"nativeSrc": "3628:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "3628:22:15"
														},
														{
															"nativeSrc": "3659:15:15",
															"nodeType": "YulAssignment",
															"src": "3659:15:15",
															"value": {
																"name": "memPtr",
																"nativeSrc": "3668:6:15",
																"nodeType": "YulIdentifier",
																"src": "3668:6:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3659:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3659:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3690:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3690:6:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3698:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3698:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3683:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3683:6:15"
																},
																"nativeSrc": "3683:22:15",
																"nodeType": "YulFunctionCall",
																"src": "3683:22:15"
															},
															"nativeSrc": "3683:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "3683:22:15"
														},
														{
															"body": {
																"nativeSrc": "3743:16:15",
																"nodeType": "YulBlock",
																"src": "3743:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3752:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3752:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3755:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3755:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3745:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3745:6:15"
																			},
																			"nativeSrc": "3745:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3745:12:15"
																		},
																		"nativeSrc": "3745:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3745:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3724:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3724:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3729:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3729:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3720:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3720:3:15"
																		},
																		"nativeSrc": "3720:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3720:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3738:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3738:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3717:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3717:2:15"
																},
																"nativeSrc": "3717:25:15",
																"nodeType": "YulFunctionCall",
																"src": "3717:25:15"
															},
															"nativeSrc": "3714:45:15",
															"nodeType": "YulIf",
															"src": "3714:45:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3785:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3785:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3793:4:15",
																				"nodeType": "YulLiteral",
																				"src": "3793:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3781:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:15"
																		},
																		"nativeSrc": "3781:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3781:17:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3800:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3800:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3805:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3805:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3768:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3768:12:15"
																},
																"nativeSrc": "3768:44:15",
																"nodeType": "YulFunctionCall",
																"src": "3768:44:15"
															},
															"nativeSrc": "3768:44:15",
															"nodeType": "YulExpressionStatement",
															"src": "3768:44:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "3836:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3836:6:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3844:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3844:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3832:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3832:3:15"
																				},
																				"nativeSrc": "3832:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3832:19:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3853:4:15",
																				"nodeType": "YulLiteral",
																				"src": "3853:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3828:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3828:3:15"
																		},
																		"nativeSrc": "3828:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3828:30:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3860:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3860:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3821:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3821:6:15"
																},
																"nativeSrc": "3821:41:15",
																"nodeType": "YulFunctionCall",
																"src": "3821:41:15"
															},
															"nativeSrc": "3821:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "3821:41:15"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nativeSrc": "3236:632:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3280:3:15",
														"nodeType": "YulTypedName",
														"src": "3280:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3285:6:15",
														"nodeType": "YulTypedName",
														"src": "3285:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3293:3:15",
														"nodeType": "YulTypedName",
														"src": "3293:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3301:5:15",
														"nodeType": "YulTypedName",
														"src": "3301:5:15",
														"type": ""
													}
												],
												"src": "3236:632:15"
											},
											{
												"body": {
													"nativeSrc": "3953:371:15",
													"nodeType": "YulBlock",
													"src": "3953:371:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3999:16:15",
																"nodeType": "YulBlock",
																"src": "3999:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4008:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4008:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4011:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4011:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4001:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4001:6:15"
																			},
																			"nativeSrc": "4001:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4001:12:15"
																		},
																		"nativeSrc": "4001:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4001:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3974:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3974:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3983:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3983:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3970:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3970:3:15"
																		},
																		"nativeSrc": "3970:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3970:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3995:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3995:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3966:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3966:3:15"
																},
																"nativeSrc": "3966:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3966:32:15"
															},
															"nativeSrc": "3963:52:15",
															"nodeType": "YulIf",
															"src": "3963:52:15"
														},
														{
															"nativeSrc": "4024:37:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4024:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4051:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4051:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4038:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4038:12:15"
																},
																"nativeSrc": "4038:23:15",
																"nodeType": "YulFunctionCall",
																"src": "4038:23:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4028:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4028:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4104:16:15",
																"nodeType": "YulBlock",
																"src": "4104:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4113:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4113:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4116:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4116:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4106:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4106:6:15"
																			},
																			"nativeSrc": "4106:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4106:12:15"
																		},
																		"nativeSrc": "4106:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4106:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4076:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4076:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4084:18:15",
																		"nodeType": "YulLiteral",
																		"src": "4084:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4073:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4073:2:15"
																},
																"nativeSrc": "4073:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4073:30:15"
															},
															"nativeSrc": "4070:50:15",
															"nodeType": "YulIf",
															"src": "4070:50:15"
														},
														{
															"nativeSrc": "4129:32:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4129:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4143:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4143:9:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4154:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4154:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4139:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:15"
																},
																"nativeSrc": "4139:22:15",
																"nodeType": "YulFunctionCall",
																"src": "4139:22:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4133:2:15",
																	"nodeType": "YulTypedName",
																	"src": "4133:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4209:16:15",
																"nodeType": "YulBlock",
																"src": "4209:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4218:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4218:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4221:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4221:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4211:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4211:6:15"
																			},
																			"nativeSrc": "4211:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4211:12:15"
																		},
																		"nativeSrc": "4211:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4211:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4188:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4188:2:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4192:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4192:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4184:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4184:3:15"
																				},
																				"nativeSrc": "4184:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4184:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4199:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4199:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4180:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4180:3:15"
																		},
																		"nativeSrc": "4180:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4180:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4173:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4173:6:15"
																},
																"nativeSrc": "4173:35:15",
																"nodeType": "YulFunctionCall",
																"src": "4173:35:15"
															},
															"nativeSrc": "4170:55:15",
															"nodeType": "YulIf",
															"src": "4170:55:15"
														},
														{
															"nativeSrc": "4234:84:15",
															"nodeType": "YulAssignment",
															"src": "4234:84:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4283:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "4283:2:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4287:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4287:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4279:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4279:3:15"
																		},
																		"nativeSrc": "4279:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4279:11:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4305:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "4305:2:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4292:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "4292:12:15"
																		},
																		"nativeSrc": "4292:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4292:16:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4310:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "4310:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "4244:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "4244:34:15"
																},
																"nativeSrc": "4244:74:15",
																"nodeType": "YulFunctionCall",
																"src": "4244:74:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4234:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4234:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "3873:451:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3919:9:15",
														"nodeType": "YulTypedName",
														"src": "3919:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3930:7:15",
														"nodeType": "YulTypedName",
														"src": "3930:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3942:6:15",
														"nodeType": "YulTypedName",
														"src": "3942:6:15",
														"type": ""
													}
												],
												"src": "3873:451:15"
											},
											{
												"body": {
													"nativeSrc": "4416:161:15",
													"nodeType": "YulBlock",
													"src": "4416:161:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4462:16:15",
																"nodeType": "YulBlock",
																"src": "4462:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4471:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4471:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4474:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4474:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4464:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4464:6:15"
																			},
																			"nativeSrc": "4464:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4464:12:15"
																		},
																		"nativeSrc": "4464:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4464:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4437:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4437:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4446:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4433:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4433:3:15"
																		},
																		"nativeSrc": "4433:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4433:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4458:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4458:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4429:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4429:3:15"
																},
																"nativeSrc": "4429:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4429:32:15"
															},
															"nativeSrc": "4426:52:15",
															"nodeType": "YulIf",
															"src": "4426:52:15"
														},
														{
															"nativeSrc": "4487:33:15",
															"nodeType": "YulAssignment",
															"src": "4487:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4510:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4510:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4497:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4497:12:15"
																},
																"nativeSrc": "4497:23:15",
																"nodeType": "YulFunctionCall",
																"src": "4497:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4487:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:15"
																}
															]
														},
														{
															"nativeSrc": "4529:42:15",
															"nodeType": "YulAssignment",
															"src": "4529:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4556:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4556:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4567:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4567:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4552:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4552:3:15"
																		},
																		"nativeSrc": "4552:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4552:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4539:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4539:12:15"
																},
																"nativeSrc": "4539:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4539:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4529:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nativeSrc": "4329:248:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4374:9:15",
														"nodeType": "YulTypedName",
														"src": "4374:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4385:7:15",
														"nodeType": "YulTypedName",
														"src": "4385:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4397:6:15",
														"nodeType": "YulTypedName",
														"src": "4397:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4405:6:15",
														"nodeType": "YulTypedName",
														"src": "4405:6:15",
														"type": ""
													}
												],
												"src": "4329:248:15"
											},
											{
												"body": {
													"nativeSrc": "4624:76:15",
													"nodeType": "YulBlock",
													"src": "4624:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4678:16:15",
																"nodeType": "YulBlock",
																"src": "4678:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4687:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4687:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4690:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4690:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4680:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4680:6:15"
																			},
																			"nativeSrc": "4680:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4680:12:15"
																		},
																		"nativeSrc": "4680:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4680:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4647:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4647:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4668:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "4668:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4661:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "4661:6:15"
																						},
																						"nativeSrc": "4661:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4661:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4654:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "4654:6:15"
																				},
																				"nativeSrc": "4654:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4654:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4644:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4644:2:15"
																		},
																		"nativeSrc": "4644:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4644:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4637:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4637:6:15"
																},
																"nativeSrc": "4637:40:15",
																"nodeType": "YulFunctionCall",
																"src": "4637:40:15"
															},
															"nativeSrc": "4634:60:15",
															"nodeType": "YulIf",
															"src": "4634:60:15"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "4582:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4613:5:15",
														"nodeType": "YulTypedName",
														"src": "4613:5:15",
														"type": ""
													}
												],
												"src": "4582:118:15"
											},
											{
												"body": {
													"nativeSrc": "4789:231:15",
													"nodeType": "YulBlock",
													"src": "4789:231:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4835:16:15",
																"nodeType": "YulBlock",
																"src": "4835:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4844:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4844:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4847:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4847:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4837:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4837:6:15"
																			},
																			"nativeSrc": "4837:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4837:12:15"
																		},
																		"nativeSrc": "4837:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4837:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4810:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4810:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4819:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4819:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4806:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4806:3:15"
																		},
																		"nativeSrc": "4806:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4806:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4831:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4831:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4802:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4802:3:15"
																},
																"nativeSrc": "4802:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4802:32:15"
															},
															"nativeSrc": "4799:52:15",
															"nodeType": "YulIf",
															"src": "4799:52:15"
														},
														{
															"nativeSrc": "4860:39:15",
															"nodeType": "YulAssignment",
															"src": "4860:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4889:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4889:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4870:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4870:18:15"
																},
																"nativeSrc": "4870:29:15",
																"nodeType": "YulFunctionCall",
																"src": "4870:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4860:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4860:6:15"
																}
															]
														},
														{
															"nativeSrc": "4908:45:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4908:45:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4938:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4938:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4949:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4949:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4934:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4934:3:15"
																		},
																		"nativeSrc": "4934:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4934:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4921:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4921:12:15"
																},
																"nativeSrc": "4921:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4921:32:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4912:5:15",
																	"nodeType": "YulTypedName",
																	"src": "4912:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4984:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4984:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "4962:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "4962:21:15"
																},
																"nativeSrc": "4962:28:15",
																"nodeType": "YulFunctionCall",
																"src": "4962:28:15"
															},
															"nativeSrc": "4962:28:15",
															"nodeType": "YulExpressionStatement",
															"src": "4962:28:15"
														},
														{
															"nativeSrc": "4999:15:15",
															"nodeType": "YulAssignment",
															"src": "4999:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "5009:5:15",
																"nodeType": "YulIdentifier",
																"src": "5009:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4999:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4999:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4705:315:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4747:9:15",
														"nodeType": "YulTypedName",
														"src": "4747:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4758:7:15",
														"nodeType": "YulTypedName",
														"src": "4758:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4770:6:15",
														"nodeType": "YulTypedName",
														"src": "4770:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4778:6:15",
														"nodeType": "YulTypedName",
														"src": "4778:6:15",
														"type": ""
													}
												],
												"src": "4705:315:15"
											},
											{
												"body": {
													"nativeSrc": "5142:102:15",
													"nodeType": "YulBlock",
													"src": "5142:102:15",
													"statements": [
														{
															"nativeSrc": "5152:26:15",
															"nodeType": "YulAssignment",
															"src": "5152:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5164:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5164:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5175:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5175:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5160:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:15"
																},
																"nativeSrc": "5160:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5160:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5152:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5152:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5194:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5194:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5209:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5209:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5225:3:15",
																								"nodeType": "YulLiteral",
																								"src": "5225:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5230:1:15",
																								"nodeType": "YulLiteral",
																								"src": "5230:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5221:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "5221:3:15"
																						},
																						"nativeSrc": "5221:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "5221:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5234:1:15",
																						"nodeType": "YulLiteral",
																						"src": "5234:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5217:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5217:3:15"
																				},
																				"nativeSrc": "5217:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5217:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5205:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5205:3:15"
																		},
																		"nativeSrc": "5205:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5205:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5187:6:15"
																},
																"nativeSrc": "5187:51:15",
																"nodeType": "YulFunctionCall",
																"src": "5187:51:15"
															},
															"nativeSrc": "5187:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "5187:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "5025:219:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5111:9:15",
														"nodeType": "YulTypedName",
														"src": "5111:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5122:6:15",
														"nodeType": "YulTypedName",
														"src": "5122:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5133:4:15",
														"nodeType": "YulTypedName",
														"src": "5133:4:15",
														"type": ""
													}
												],
												"src": "5025:219:15"
											},
											{
												"body": {
													"nativeSrc": "5309:549:15",
													"nodeType": "YulBlock",
													"src": "5309:549:15",
													"statements": [
														{
															"nativeSrc": "5319:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5319:16:15",
															"value": {
																"name": "pos",
																"nativeSrc": "5332:3:15",
																"nodeType": "YulIdentifier",
																"src": "5332:3:15"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nativeSrc": "5323:5:15",
																	"nodeType": "YulTypedName",
																	"src": "5323:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5344:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5344:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5364:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5364:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5358:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5358:5:15"
																},
																"nativeSrc": "5358:12:15",
																"nodeType": "YulFunctionCall",
																"src": "5358:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5348:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5348:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5386:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5386:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5391:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5391:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5379:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:15"
																},
																"nativeSrc": "5379:19:15",
																"nodeType": "YulFunctionCall",
																"src": "5379:19:15"
															},
															"nativeSrc": "5379:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "5379:19:15"
														},
														{
															"nativeSrc": "5407:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5407:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "5417:4:15",
																"nodeType": "YulLiteral",
																"src": "5417:4:15",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5411:2:15",
																	"nodeType": "YulTypedName",
																	"src": "5411:2:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5430:21:15",
															"nodeType": "YulAssignment",
															"src": "5430:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5441:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5441:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5446:4:15",
																		"nodeType": "YulLiteral",
																		"src": "5446:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5437:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5437:3:15"
																},
																"nativeSrc": "5437:14:15",
																"nodeType": "YulFunctionCall",
																"src": "5437:14:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5430:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5430:3:15"
																}
															]
														},
														{
															"nativeSrc": "5460:49:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5460:49:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos_1",
																				"nativeSrc": "5480:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5480:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5491:1:15",
																						"nodeType": "YulLiteral",
																						"src": "5491:1:15",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5494:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5494:6:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "5487:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5487:3:15"
																				},
																				"nativeSrc": "5487:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5487:14:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5476:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5476:3:15"
																		},
																		"nativeSrc": "5476:26:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5476:26:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5504:4:15",
																		"nodeType": "YulLiteral",
																		"src": "5504:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5472:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5472:3:15"
																},
																"nativeSrc": "5472:37:15",
																"nodeType": "YulFunctionCall",
																"src": "5472:37:15"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "5464:4:15",
																	"nodeType": "YulTypedName",
																	"src": "5464:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5518:30:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5518:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5536:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5536:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5543:4:15",
																		"nodeType": "YulLiteral",
																		"src": "5543:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5532:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5532:3:15"
																},
																"nativeSrc": "5532:16:15",
																"nodeType": "YulFunctionCall",
																"src": "5532:16:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "5522:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5522:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5557:10:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5557:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "5566:1:15",
																"nodeType": "YulLiteral",
																"src": "5566:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "5561:1:15",
																	"nodeType": "YulTypedName",
																	"src": "5561:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5625:207:15",
																"nodeType": "YulBlock",
																"src": "5625:207:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "5646:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5646:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail",
																									"nativeSrc": "5659:4:15",
																									"nodeType": "YulIdentifier",
																									"src": "5659:4:15"
																								},
																								{
																									"name": "pos_1",
																									"nativeSrc": "5665:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "5665:5:15"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "5655:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "5655:3:15"
																							},
																							"nativeSrc": "5655:16:15",
																							"nodeType": "YulFunctionCall",
																							"src": "5655:16:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5677:2:15",
																									"nodeType": "YulLiteral",
																									"src": "5677:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5673:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "5673:3:15"
																							},
																							"nativeSrc": "5673:7:15",
																							"nodeType": "YulFunctionCall",
																							"src": "5673:7:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5651:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "5651:3:15"
																					},
																					"nativeSrc": "5651:30:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5651:30:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5639:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5639:6:15"
																			},
																			"nativeSrc": "5639:43:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5639:43:15"
																		},
																		"nativeSrc": "5639:43:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5639:43:15"
																	},
																	{
																		"nativeSrc": "5695:57:15",
																		"nodeType": "YulAssignment",
																		"src": "5695:57:15",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "5738:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "5738:6:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5732:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5732:5:15"
																					},
																					"nativeSrc": "5732:13:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5732:13:15"
																				},
																				{
																					"name": "tail",
																					"nativeSrc": "5747:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "5747:4:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_string_memory_ptr",
																				"nativeSrc": "5703:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "5703:28:15"
																			},
																			"nativeSrc": "5703:49:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5703:49:15"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nativeSrc": "5695:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "5695:4:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5765:25:15",
																		"nodeType": "YulAssignment",
																		"src": "5765:25:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5779:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "5779:6:15"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "5787:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "5787:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5775:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5775:3:15"
																			},
																			"nativeSrc": "5775:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5775:15:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "5765:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5765:6:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5803:19:15",
																		"nodeType": "YulAssignment",
																		"src": "5803:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "5814:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5814:3:15"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "5819:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "5819:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5810:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5810:3:15"
																			},
																			"nativeSrc": "5810:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5810:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "5803:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5803:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "5587:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "5587:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5590:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5590:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5584:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5584:2:15"
																},
																"nativeSrc": "5584:13:15",
																"nodeType": "YulFunctionCall",
																"src": "5584:13:15"
															},
															"nativeSrc": "5576:256:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5598:18:15",
																"nodeType": "YulBlock",
																"src": "5598:18:15",
																"statements": [
																	{
																		"nativeSrc": "5600:14:15",
																		"nodeType": "YulAssignment",
																		"src": "5600:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5609:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "5609:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5612:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5612:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5605:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5605:3:15"
																			},
																			"nativeSrc": "5605:9:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5605:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5600:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "5600:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5580:3:15",
																"nodeType": "YulBlock",
																"src": "5580:3:15",
																"statements": []
															},
															"src": "5576:256:15"
														},
														{
															"nativeSrc": "5841:11:15",
															"nodeType": "YulAssignment",
															"src": "5841:11:15",
															"value": {
																"name": "tail",
																"nativeSrc": "5848:4:15",
																"nodeType": "YulIdentifier",
																"src": "5848:4:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5841:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5841:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_string_dyn",
												"nativeSrc": "5249:609:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5286:5:15",
														"nodeType": "YulTypedName",
														"src": "5286:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5293:3:15",
														"nodeType": "YulTypedName",
														"src": "5293:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5301:3:15",
														"nodeType": "YulTypedName",
														"src": "5301:3:15",
														"type": ""
													}
												],
												"src": "5249:609:15"
											},
											{
												"body": {
													"nativeSrc": "6034:109:15",
													"nodeType": "YulBlock",
													"src": "6034:109:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6051:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6051:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6062:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6062:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6044:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6044:6:15"
																},
																"nativeSrc": "6044:21:15",
																"nodeType": "YulFunctionCall",
																"src": "6044:21:15"
															},
															"nativeSrc": "6044:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "6044:21:15"
														},
														{
															"nativeSrc": "6074:63:15",
															"nodeType": "YulAssignment",
															"src": "6074:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6110:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6110:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6122:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6122:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6133:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6133:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6118:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6118:3:15"
																		},
																		"nativeSrc": "6118:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6118:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_string_dyn",
																	"nativeSrc": "6082:27:15",
																	"nodeType": "YulIdentifier",
																	"src": "6082:27:15"
																},
																"nativeSrc": "6082:55:15",
																"nodeType": "YulFunctionCall",
																"src": "6082:55:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6074:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6074:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "5863:280:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6003:9:15",
														"nodeType": "YulTypedName",
														"src": "6003:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6014:6:15",
														"nodeType": "YulTypedName",
														"src": "6014:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6025:4:15",
														"nodeType": "YulTypedName",
														"src": "6025:4:15",
														"type": ""
													}
												],
												"src": "5863:280:15"
											},
											{
												"body": {
													"nativeSrc": "6278:537:15",
													"nodeType": "YulBlock",
													"src": "6278:537:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6325:16:15",
																"nodeType": "YulBlock",
																"src": "6325:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6334:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6334:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6337:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6337:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6327:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6327:6:15"
																			},
																			"nativeSrc": "6327:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6327:12:15"
																		},
																		"nativeSrc": "6327:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6327:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6299:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6299:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6308:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6308:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6295:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6295:3:15"
																		},
																		"nativeSrc": "6295:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6295:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6320:3:15",
																		"nodeType": "YulLiteral",
																		"src": "6320:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6291:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6291:3:15"
																},
																"nativeSrc": "6291:33:15",
																"nodeType": "YulFunctionCall",
																"src": "6291:33:15"
															},
															"nativeSrc": "6288:53:15",
															"nodeType": "YulIf",
															"src": "6288:53:15"
														},
														{
															"nativeSrc": "6350:39:15",
															"nodeType": "YulAssignment",
															"src": "6350:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6379:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6379:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6360:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "6360:18:15"
																},
																"nativeSrc": "6360:29:15",
																"nodeType": "YulFunctionCall",
																"src": "6360:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6350:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6350:6:15"
																}
															]
														},
														{
															"nativeSrc": "6398:48:15",
															"nodeType": "YulAssignment",
															"src": "6398:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6431:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6431:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6442:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6442:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6427:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6427:3:15"
																		},
																		"nativeSrc": "6427:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6427:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6408:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "6408:18:15"
																},
																"nativeSrc": "6408:38:15",
																"nodeType": "YulFunctionCall",
																"src": "6408:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6398:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6398:6:15"
																}
															]
														},
														{
															"nativeSrc": "6455:42:15",
															"nodeType": "YulAssignment",
															"src": "6455:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6482:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6482:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6493:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6493:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6478:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6478:3:15"
																		},
																		"nativeSrc": "6478:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6478:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6465:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6465:12:15"
																},
																"nativeSrc": "6465:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6465:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6455:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6455:6:15"
																}
															]
														},
														{
															"nativeSrc": "6506:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6506:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6537:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6537:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6548:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6548:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6533:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6533:3:15"
																		},
																		"nativeSrc": "6533:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6533:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6520:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6520:12:15"
																},
																"nativeSrc": "6520:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6520:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6510:6:15",
																	"nodeType": "YulTypedName",
																	"src": "6510:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6595:16:15",
																"nodeType": "YulBlock",
																"src": "6595:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6604:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6604:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6607:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6607:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6597:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6597:6:15"
																			},
																			"nativeSrc": "6597:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6597:12:15"
																		},
																		"nativeSrc": "6597:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6597:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6567:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6567:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6575:18:15",
																		"nodeType": "YulLiteral",
																		"src": "6575:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6564:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6564:2:15"
																},
																"nativeSrc": "6564:30:15",
																"nodeType": "YulFunctionCall",
																"src": "6564:30:15"
															},
															"nativeSrc": "6561:50:15",
															"nodeType": "YulIf",
															"src": "6561:50:15"
														},
														{
															"nativeSrc": "6620:32:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6620:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6634:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6634:9:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6645:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6645:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6630:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6630:3:15"
																},
																"nativeSrc": "6630:22:15",
																"nodeType": "YulFunctionCall",
																"src": "6630:22:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6624:2:15",
																	"nodeType": "YulTypedName",
																	"src": "6624:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6700:16:15",
																"nodeType": "YulBlock",
																"src": "6700:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6709:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6709:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6712:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6712:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6702:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6702:6:15"
																			},
																			"nativeSrc": "6702:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6702:12:15"
																		},
																		"nativeSrc": "6702:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6702:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "6679:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "6679:2:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6683:4:15",
																						"nodeType": "YulLiteral",
																						"src": "6683:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6675:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6675:3:15"
																				},
																				"nativeSrc": "6675:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6675:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6690:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6690:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6671:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6671:3:15"
																		},
																		"nativeSrc": "6671:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6671:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6664:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6664:6:15"
																},
																"nativeSrc": "6664:35:15",
																"nodeType": "YulFunctionCall",
																"src": "6664:35:15"
															},
															"nativeSrc": "6661:55:15",
															"nodeType": "YulIf",
															"src": "6661:55:15"
														},
														{
															"nativeSrc": "6725:84:15",
															"nodeType": "YulAssignment",
															"src": "6725:84:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "6774:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "6774:2:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6778:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6778:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6770:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6770:3:15"
																		},
																		"nativeSrc": "6770:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6770:11:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "6796:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "6796:2:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6783:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "6783:12:15"
																		},
																		"nativeSrc": "6783:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6783:16:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6801:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "6801:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "6735:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "6735:34:15"
																},
																"nativeSrc": "6735:74:15",
																"nodeType": "YulFunctionCall",
																"src": "6735:74:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "6725:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6725:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "6148:667:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6220:9:15",
														"nodeType": "YulTypedName",
														"src": "6220:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6231:7:15",
														"nodeType": "YulTypedName",
														"src": "6231:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6243:6:15",
														"nodeType": "YulTypedName",
														"src": "6243:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6251:6:15",
														"nodeType": "YulTypedName",
														"src": "6251:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6259:6:15",
														"nodeType": "YulTypedName",
														"src": "6259:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6267:6:15",
														"nodeType": "YulTypedName",
														"src": "6267:6:15",
														"type": ""
													}
												],
												"src": "6148:667:15"
											},
											{
												"body": {
													"nativeSrc": "6907:173:15",
													"nodeType": "YulBlock",
													"src": "6907:173:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6953:16:15",
																"nodeType": "YulBlock",
																"src": "6953:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6962:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6962:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6965:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6965:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6955:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6955:6:15"
																			},
																			"nativeSrc": "6955:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6955:12:15"
																		},
																		"nativeSrc": "6955:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6955:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6928:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6928:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6937:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6937:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6924:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6924:3:15"
																		},
																		"nativeSrc": "6924:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6924:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6949:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6949:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6920:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6920:3:15"
																},
																"nativeSrc": "6920:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6920:32:15"
															},
															"nativeSrc": "6917:52:15",
															"nodeType": "YulIf",
															"src": "6917:52:15"
														},
														{
															"nativeSrc": "6978:39:15",
															"nodeType": "YulAssignment",
															"src": "6978:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7007:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7007:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6988:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "6988:18:15"
																},
																"nativeSrc": "6988:29:15",
																"nodeType": "YulFunctionCall",
																"src": "6988:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6978:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6978:6:15"
																}
															]
														},
														{
															"nativeSrc": "7026:48:15",
															"nodeType": "YulAssignment",
															"src": "7026:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7059:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7059:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7070:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7070:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7055:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7055:3:15"
																		},
																		"nativeSrc": "7055:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7055:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7036:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "7036:18:15"
																},
																"nativeSrc": "7036:38:15",
																"nodeType": "YulFunctionCall",
																"src": "7036:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7026:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7026:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6820:260:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6865:9:15",
														"nodeType": "YulTypedName",
														"src": "6865:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6876:7:15",
														"nodeType": "YulTypedName",
														"src": "6876:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6888:6:15",
														"nodeType": "YulTypedName",
														"src": "6888:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6896:6:15",
														"nodeType": "YulTypedName",
														"src": "6896:6:15",
														"type": ""
													}
												],
												"src": "6820:260:15"
											},
											{
												"body": {
													"nativeSrc": "7140:325:15",
													"nodeType": "YulBlock",
													"src": "7140:325:15",
													"statements": [
														{
															"nativeSrc": "7150:22:15",
															"nodeType": "YulAssignment",
															"src": "7150:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7164:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7164:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "7167:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7167:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7160:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7160:3:15"
																},
																"nativeSrc": "7160:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7160:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7150:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7150:6:15"
																}
															]
														},
														{
															"nativeSrc": "7181:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7181:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7211:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7211:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7217:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7217:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7207:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7207:3:15"
																},
																"nativeSrc": "7207:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7207:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7185:18:15",
																	"nodeType": "YulTypedName",
																	"src": "7185:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7258:31:15",
																"nodeType": "YulBlock",
																"src": "7258:31:15",
																"statements": [
																	{
																		"nativeSrc": "7260:27:15",
																		"nodeType": "YulAssignment",
																		"src": "7260:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7274:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "7274:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7282:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7282:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7270:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7270:3:15"
																			},
																			"nativeSrc": "7270:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7270:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7260:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7260:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7238:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "7238:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7231:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7231:6:15"
																},
																"nativeSrc": "7231:26:15",
																"nodeType": "YulFunctionCall",
																"src": "7231:26:15"
															},
															"nativeSrc": "7228:61:15",
															"nodeType": "YulIf",
															"src": "7228:61:15"
														},
														{
															"body": {
																"nativeSrc": "7348:111:15",
																"nodeType": "YulBlock",
																"src": "7348:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7369:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7369:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7376:3:15",
																							"nodeType": "YulLiteral",
																							"src": "7376:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7381:10:15",
																							"nodeType": "YulLiteral",
																							"src": "7381:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7372:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "7372:3:15"
																					},
																					"nativeSrc": "7372:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7372:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7362:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7362:6:15"
																			},
																			"nativeSrc": "7362:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7362:31:15"
																		},
																		"nativeSrc": "7362:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7362:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7413:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7413:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7416:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7416:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7406:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7406:6:15"
																			},
																			"nativeSrc": "7406:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7406:15:15"
																		},
																		"nativeSrc": "7406:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7406:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7441:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7441:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7444:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7444:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7434:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7434:6:15"
																			},
																			"nativeSrc": "7434:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7434:15:15"
																		},
																		"nativeSrc": "7434:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7434:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7304:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "7304:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7327:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7327:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7335:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7335:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7324:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7324:2:15"
																		},
																		"nativeSrc": "7324:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7324:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7301:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7301:2:15"
																},
																"nativeSrc": "7301:38:15",
																"nodeType": "YulFunctionCall",
																"src": "7301:38:15"
															},
															"nativeSrc": "7298:161:15",
															"nodeType": "YulIf",
															"src": "7298:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7085:380:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7120:4:15",
														"nodeType": "YulTypedName",
														"src": "7120:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7129:6:15",
														"nodeType": "YulTypedName",
														"src": "7129:6:15",
														"type": ""
													}
												],
												"src": "7085:380:15"
											},
											{
												"body": {
													"nativeSrc": "7627:218:15",
													"nodeType": "YulBlock",
													"src": "7627:218:15",
													"statements": [
														{
															"nativeSrc": "7637:26:15",
															"nodeType": "YulAssignment",
															"src": "7637:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7649:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7649:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7660:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7660:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7645:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7645:3:15"
																},
																"nativeSrc": "7645:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7645:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7637:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7637:4:15"
																}
															]
														},
														{
															"nativeSrc": "7672:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7672:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7690:3:15",
																				"nodeType": "YulLiteral",
																				"src": "7690:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7695:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7695:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7686:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7686:3:15"
																		},
																		"nativeSrc": "7686:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7686:11:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7699:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7699:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7682:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7682:3:15"
																},
																"nativeSrc": "7682:19:15",
																"nodeType": "YulFunctionCall",
																"src": "7682:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7676:2:15",
																	"nodeType": "YulTypedName",
																	"src": "7676:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7717:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7717:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7732:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7732:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7740:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "7740:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7728:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7728:3:15"
																		},
																		"nativeSrc": "7728:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7728:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7710:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7710:6:15"
																},
																"nativeSrc": "7710:34:15",
																"nodeType": "YulFunctionCall",
																"src": "7710:34:15"
															},
															"nativeSrc": "7710:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "7710:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7764:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7764:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7775:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7775:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7760:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7760:3:15"
																		},
																		"nativeSrc": "7760:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7760:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7780:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7780:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7753:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7753:6:15"
																},
																"nativeSrc": "7753:34:15",
																"nodeType": "YulFunctionCall",
																"src": "7753:34:15"
															},
															"nativeSrc": "7753:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "7753:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7807:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7807:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7818:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7818:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7803:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7803:3:15"
																		},
																		"nativeSrc": "7803:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7803:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "7827:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7827:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7835:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "7835:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7823:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7823:3:15"
																		},
																		"nativeSrc": "7823:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7823:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7796:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7796:6:15"
																},
																"nativeSrc": "7796:43:15",
																"nodeType": "YulFunctionCall",
																"src": "7796:43:15"
															},
															"nativeSrc": "7796:43:15",
															"nodeType": "YulExpressionStatement",
															"src": "7796:43:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "7470:375:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7580:9:15",
														"nodeType": "YulTypedName",
														"src": "7580:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7591:6:15",
														"nodeType": "YulTypedName",
														"src": "7591:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7599:6:15",
														"nodeType": "YulTypedName",
														"src": "7599:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7607:6:15",
														"nodeType": "YulTypedName",
														"src": "7607:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7618:4:15",
														"nodeType": "YulTypedName",
														"src": "7618:4:15",
														"type": ""
													}
												],
												"src": "7470:375:15"
											},
											{
												"body": {
													"nativeSrc": "7931:103:15",
													"nodeType": "YulBlock",
													"src": "7931:103:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7977:16:15",
																"nodeType": "YulBlock",
																"src": "7977:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7986:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7986:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7989:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7989:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7979:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7979:6:15"
																			},
																			"nativeSrc": "7979:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7979:12:15"
																		},
																		"nativeSrc": "7979:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7979:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7952:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7952:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7961:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7961:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7948:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7948:3:15"
																		},
																		"nativeSrc": "7948:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7948:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7973:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7973:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7944:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7944:3:15"
																},
																"nativeSrc": "7944:32:15",
																"nodeType": "YulFunctionCall",
																"src": "7944:32:15"
															},
															"nativeSrc": "7941:52:15",
															"nodeType": "YulIf",
															"src": "7941:52:15"
														},
														{
															"nativeSrc": "8002:26:15",
															"nodeType": "YulAssignment",
															"src": "8002:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8018:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8018:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8012:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8012:5:15"
																},
																"nativeSrc": "8012:16:15",
																"nodeType": "YulFunctionCall",
																"src": "8012:16:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8002:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8002:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7850:184:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7897:9:15",
														"nodeType": "YulTypedName",
														"src": "7897:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7908:7:15",
														"nodeType": "YulTypedName",
														"src": "7908:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7920:6:15",
														"nodeType": "YulTypedName",
														"src": "7920:6:15",
														"type": ""
													}
												],
												"src": "7850:184:15"
											},
											{
												"body": {
													"nativeSrc": "8213:172:15",
													"nodeType": "YulBlock",
													"src": "8213:172:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8230:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8230:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8241:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8241:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8223:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8223:6:15"
																},
																"nativeSrc": "8223:21:15",
																"nodeType": "YulFunctionCall",
																"src": "8223:21:15"
															},
															"nativeSrc": "8223:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "8223:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8264:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8264:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8275:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8275:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8260:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8260:3:15"
																		},
																		"nativeSrc": "8260:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8260:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8280:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8280:2:15",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8253:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8253:6:15"
																},
																"nativeSrc": "8253:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8253:30:15"
															},
															"nativeSrc": "8253:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8253:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8303:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8303:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8314:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8314:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8299:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8299:3:15"
																		},
																		"nativeSrc": "8299:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8299:18:15"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768204c494e4b20746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "8319:24:15",
																		"nodeType": "YulLiteral",
																		"src": "8319:24:15",
																		"type": "",
																		"value": "Not enough LINK tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8292:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8292:6:15"
																},
																"nativeSrc": "8292:52:15",
																"nodeType": "YulFunctionCall",
																"src": "8292:52:15"
															},
															"nativeSrc": "8292:52:15",
															"nodeType": "YulExpressionStatement",
															"src": "8292:52:15"
														},
														{
															"nativeSrc": "8353:26:15",
															"nodeType": "YulAssignment",
															"src": "8353:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8365:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8365:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8376:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8376:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8361:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8361:3:15"
																},
																"nativeSrc": "8361:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8361:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8353:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8353:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e6b1fab5e2902145d60af20d931dd202525df1dcee37251d6d34ca7cc4f7014__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8039:346:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8190:9:15",
														"nodeType": "YulTypedName",
														"src": "8190:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8204:4:15",
														"nodeType": "YulTypedName",
														"src": "8204:4:15",
														"type": ""
													}
												],
												"src": "8039:346:15"
											},
											{
												"body": {
													"nativeSrc": "8446:65:15",
													"nodeType": "YulBlock",
													"src": "8446:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8463:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8463:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "8466:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8466:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8456:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8456:6:15"
																},
																"nativeSrc": "8456:14:15",
																"nodeType": "YulFunctionCall",
																"src": "8456:14:15"
															},
															"nativeSrc": "8456:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "8456:14:15"
														},
														{
															"nativeSrc": "8479:26:15",
															"nodeType": "YulAssignment",
															"src": "8479:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8497:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8497:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8500:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8500:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "8487:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "8487:9:15"
																},
																"nativeSrc": "8487:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8487:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8479:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8479:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "8390:121:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8429:3:15",
														"nodeType": "YulTypedName",
														"src": "8429:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "8437:4:15",
														"nodeType": "YulTypedName",
														"src": "8437:4:15",
														"type": ""
													}
												],
												"src": "8390:121:15"
											},
											{
												"body": {
													"nativeSrc": "8597:437:15",
													"nodeType": "YulBlock",
													"src": "8597:437:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8630:398:15",
																"nodeType": "YulBlock",
																"src": "8630:398:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8651:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8651:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "8654:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "8654:5:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8644:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8644:6:15"
																			},
																			"nativeSrc": "8644:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8644:16:15"
																		},
																		"nativeSrc": "8644:16:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8644:16:15"
																	},
																	{
																		"nativeSrc": "8673:30:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8673:30:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8695:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8695:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8698:4:15",
																					"nodeType": "YulLiteral",
																					"src": "8698:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "8685:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8685:9:15"
																			},
																			"nativeSrc": "8685:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8685:18:15"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "8677:4:15",
																				"nodeType": "YulTypedName",
																				"src": "8677:4:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8716:57:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8716:57:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "8739:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "8739:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8749:1:15",
																							"nodeType": "YulLiteral",
																							"src": "8749:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "8756:10:15",
																									"nodeType": "YulIdentifier",
																									"src": "8756:10:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8768:2:15",
																									"nodeType": "YulLiteral",
																									"src": "8768:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8752:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "8752:3:15"
																							},
																							"nativeSrc": "8752:19:15",
																							"nodeType": "YulFunctionCall",
																							"src": "8752:19:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "8745:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "8745:3:15"
																					},
																					"nativeSrc": "8745:27:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8745:27:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8735:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8735:3:15"
																			},
																			"nativeSrc": "8735:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8735:38:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "8720:11:15",
																				"nodeType": "YulTypedName",
																				"src": "8720:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8810:23:15",
																			"nodeType": "YulBlock",
																			"src": "8810:23:15",
																			"statements": [
																				{
																					"nativeSrc": "8812:19:15",
																					"nodeType": "YulAssignment",
																					"src": "8812:19:15",
																					"value": {
																						"name": "data",
																						"nativeSrc": "8827:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "8827:4:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "8812:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "8812:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "8792:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "8792:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8804:4:15",
																					"nodeType": "YulLiteral",
																					"src": "8804:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "8789:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "8789:2:15"
																			},
																			"nativeSrc": "8789:20:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8789:20:15"
																		},
																		"nativeSrc": "8786:47:15",
																		"nodeType": "YulIf",
																		"src": "8786:47:15"
																	},
																	{
																		"nativeSrc": "8846:41:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8846:41:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "8860:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "8860:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8870:1:15",
																							"nodeType": "YulLiteral",
																							"src": "8870:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "8877:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "8877:3:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8882:2:15",
																									"nodeType": "YulLiteral",
																									"src": "8882:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8873:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "8873:3:15"
																							},
																							"nativeSrc": "8873:12:15",
																							"nodeType": "YulFunctionCall",
																							"src": "8873:12:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "8866:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "8866:3:15"
																					},
																					"nativeSrc": "8866:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8866:20:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8856:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8856:3:15"
																			},
																			"nativeSrc": "8856:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8856:31:15"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "8850:2:15",
																				"nodeType": "YulTypedName",
																				"src": "8850:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8900:24:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8900:24:15",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "8913:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "8913:11:15"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "8904:5:15",
																				"nodeType": "YulTypedName",
																				"src": "8904:5:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8998:20:15",
																			"nodeType": "YulBlock",
																			"src": "8998:20:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "9007:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "9007:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9014:1:15",
																								"nodeType": "YulLiteral",
																								"src": "9014:1:15",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "9000:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "9000:6:15"
																						},
																						"nativeSrc": "9000:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "9000:16:15"
																					},
																					"nativeSrc": "9000:16:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "9000:16:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "8948:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "8948:5:15"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "8955:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "8955:2:15"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "8945:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "8945:2:15"
																			},
																			"nativeSrc": "8945:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8945:13:15"
																		},
																		"nativeSrc": "8937:81:15",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "8959:26:15",
																			"nodeType": "YulBlock",
																			"src": "8959:26:15",
																			"statements": [
																				{
																					"nativeSrc": "8961:22:15",
																					"nodeType": "YulAssignment",
																					"src": "8961:22:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "8974:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "8974:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8981:1:15",
																								"nodeType": "YulLiteral",
																								"src": "8981:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "8970:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8970:3:15"
																						},
																						"nativeSrc": "8970:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8970:13:15"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "8961:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "8961:5:15"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "8941:3:15",
																			"nodeType": "YulBlock",
																			"src": "8941:3:15",
																			"statements": []
																		},
																		"src": "8937:81:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "8613:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8613:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8618:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8618:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8610:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8610:2:15"
																},
																"nativeSrc": "8610:11:15",
																"nodeType": "YulFunctionCall",
																"src": "8610:11:15"
															},
															"nativeSrc": "8607:421:15",
															"nodeType": "YulIf",
															"src": "8607:421:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "8516:518:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "8569:5:15",
														"nodeType": "YulTypedName",
														"src": "8569:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8576:3:15",
														"nodeType": "YulTypedName",
														"src": "8576:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "8581:10:15",
														"nodeType": "YulTypedName",
														"src": "8581:10:15",
														"type": ""
													}
												],
												"src": "8516:518:15"
											},
											{
												"body": {
													"nativeSrc": "9124:81:15",
													"nodeType": "YulBlock",
													"src": "9124:81:15",
													"statements": [
														{
															"nativeSrc": "9134:65:15",
															"nodeType": "YulAssignment",
															"src": "9134:65:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9149:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "9149:4:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9167:1:15",
																										"nodeType": "YulLiteral",
																										"src": "9167:1:15",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "9170:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "9170:3:15"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "9163:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "9163:3:15"
																								},
																								"nativeSrc": "9163:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "9163:11:15"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9180:1:15",
																										"nodeType": "YulLiteral",
																										"src": "9180:1:15",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "9176:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "9176:3:15"
																								},
																								"nativeSrc": "9176:6:15",
																								"nodeType": "YulFunctionCall",
																								"src": "9176:6:15"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "9159:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "9159:3:15"
																						},
																						"nativeSrc": "9159:24:15",
																						"nodeType": "YulFunctionCall",
																						"src": "9159:24:15"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "9155:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9155:3:15"
																				},
																				"nativeSrc": "9155:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9155:29:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9145:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9145:3:15"
																		},
																		"nativeSrc": "9145:40:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9145:40:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9191:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9191:1:15",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "9194:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "9194:3:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9187:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9187:3:15"
																		},
																		"nativeSrc": "9187:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9187:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9142:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9142:2:15"
																},
																"nativeSrc": "9142:57:15",
																"nodeType": "YulFunctionCall",
																"src": "9142:57:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "9134:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9134:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "9039:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9101:4:15",
														"nodeType": "YulTypedName",
														"src": "9101:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9107:3:15",
														"nodeType": "YulTypedName",
														"src": "9107:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "9115:4:15",
														"nodeType": "YulTypedName",
														"src": "9115:4:15",
														"type": ""
													}
												],
												"src": "9039:166:15"
											},
											{
												"body": {
													"nativeSrc": "9306:1249:15",
													"nodeType": "YulBlock",
													"src": "9306:1249:15",
													"statements": [
														{
															"nativeSrc": "9316:24:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9316:24:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9336:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9336:3:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9330:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9330:5:15"
																},
																"nativeSrc": "9330:10:15",
																"nodeType": "YulFunctionCall",
																"src": "9330:10:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "9320:6:15",
																	"nodeType": "YulTypedName",
																	"src": "9320:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9383:22:15",
																"nodeType": "YulBlock",
																"src": "9383:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9385:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "9385:16:15"
																			},
																			"nativeSrc": "9385:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9385:18:15"
																		},
																		"nativeSrc": "9385:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9385:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9355:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9355:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9363:18:15",
																		"nodeType": "YulLiteral",
																		"src": "9363:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9352:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9352:2:15"
																},
																"nativeSrc": "9352:30:15",
																"nodeType": "YulFunctionCall",
																"src": "9352:30:15"
															},
															"nativeSrc": "9349:56:15",
															"nodeType": "YulIf",
															"src": "9349:56:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9458:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9458:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "9496:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "9496:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "9490:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "9490:5:15"
																				},
																				"nativeSrc": "9490:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9490:11:15"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "9464:25:15",
																			"nodeType": "YulIdentifier",
																			"src": "9464:25:15"
																		},
																		"nativeSrc": "9464:38:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9464:38:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "9504:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9504:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "9414:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9414:43:15"
																},
																"nativeSrc": "9414:97:15",
																"nodeType": "YulFunctionCall",
																"src": "9414:97:15"
															},
															"nativeSrc": "9414:97:15",
															"nodeType": "YulExpressionStatement",
															"src": "9414:97:15"
														},
														{
															"nativeSrc": "9520:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9520:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "9537:1:15",
																"nodeType": "YulLiteral",
																"src": "9537:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9524:9:15",
																	"nodeType": "YulTypedName",
																	"src": "9524:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9547:23:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9547:23:15",
															"value": {
																"kind": "number",
																"nativeSrc": "9566:4:15",
																"nodeType": "YulLiteral",
																"src": "9566:4:15",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "9551:11:15",
																	"nodeType": "YulTypedName",
																	"src": "9551:11:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9579:17:15",
															"nodeType": "YulAssignment",
															"src": "9579:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "9592:4:15",
																"nodeType": "YulLiteral",
																"src": "9592:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9579:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "9579:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9642:656:15",
																		"nodeType": "YulBlock",
																		"src": "9642:656:15",
																		"statements": [
																			{
																				"nativeSrc": "9656:35:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9656:35:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9675:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "9675:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9687:2:15",
																									"nodeType": "YulLiteral",
																									"src": "9687:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9683:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "9683:3:15"
																							},
																							"nativeSrc": "9683:7:15",
																							"nodeType": "YulFunctionCall",
																							"src": "9683:7:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9671:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "9671:3:15"
																					},
																					"nativeSrc": "9671:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9671:20:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "9660:7:15",
																						"nodeType": "YulTypedName",
																						"src": "9660:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9704:49:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9704:49:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9748:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "9748:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "9718:29:15",
																						"nodeType": "YulIdentifier",
																						"src": "9718:29:15"
																					},
																					"nativeSrc": "9718:35:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9718:35:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9708:6:15",
																						"nodeType": "YulTypedName",
																						"src": "9708:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9766:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9766:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9775:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9775:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9770:1:15",
																						"nodeType": "YulTypedName",
																						"src": "9770:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9853:172:15",
																					"nodeType": "YulBlock",
																					"src": "9853:172:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9878:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "9878:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9896:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "9896:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9901:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "9901:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9892:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "9892:3:15"
																												},
																												"nativeSrc": "9892:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "9892:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9886:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "9886:5:15"
																										},
																										"nativeSrc": "9886:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "9886:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9871:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "9871:6:15"
																								},
																								"nativeSrc": "9871:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "9871:42:15"
																							},
																							"nativeSrc": "9871:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "9871:42:15"
																						},
																						{
																							"nativeSrc": "9930:24:15",
																							"nodeType": "YulAssignment",
																							"src": "9930:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9944:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "9944:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9952:1:15",
																										"nodeType": "YulLiteral",
																										"src": "9952:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9940:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "9940:3:15"
																								},
																								"nativeSrc": "9940:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "9940:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9930:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "9930:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9971:40:15",
																							"nodeType": "YulAssignment",
																							"src": "9971:40:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9988:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "9988:9:15"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "9999:11:15",
																										"nodeType": "YulIdentifier",
																										"src": "9999:11:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9984:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "9984:3:15"
																								},
																								"nativeSrc": "9984:27:15",
																								"nodeType": "YulFunctionCall",
																								"src": "9984:27:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9971:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "9971:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9800:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "9800:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9803:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "9803:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9797:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "9797:2:15"
																					},
																					"nativeSrc": "9797:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9797:14:15"
																				},
																				"nativeSrc": "9789:236:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9812:28:15",
																					"nodeType": "YulBlock",
																					"src": "9812:28:15",
																					"statements": [
																						{
																							"nativeSrc": "9814:24:15",
																							"nodeType": "YulAssignment",
																							"src": "9814:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9823:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "9823:1:15"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "9826:11:15",
																										"nodeType": "YulIdentifier",
																										"src": "9826:11:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9819:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "9819:3:15"
																								},
																								"nativeSrc": "9819:19:15",
																								"nodeType": "YulFunctionCall",
																								"src": "9819:19:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9814:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "9814:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9793:3:15",
																					"nodeType": "YulBlock",
																					"src": "9793:3:15",
																					"statements": []
																				},
																				"src": "9789:236:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "10073:166:15",
																					"nodeType": "YulBlock",
																					"src": "10073:166:15",
																					"statements": [
																						{
																							"nativeSrc": "10091:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "10091:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10118:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "10118:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10123:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "10123:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10114:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "10114:3:15"
																										},
																										"nativeSrc": "10114:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "10114:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10108:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "10108:5:15"
																								},
																								"nativeSrc": "10108:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "10108:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "10095:9:15",
																									"nodeType": "YulTypedName",
																									"src": "10095:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10158:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "10158:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "10170:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "10170:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "10197:1:15",
																																				"nodeType": "YulLiteral",
																																				"src": "10197:1:15",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "10200:6:15",
																																				"nodeType": "YulIdentifier",
																																				"src": "10200:6:15"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "10193:3:15",
																																			"nodeType": "YulIdentifier",
																																			"src": "10193:3:15"
																																		},
																																		"nativeSrc": "10193:14:15",
																																		"nodeType": "YulFunctionCall",
																																		"src": "10193:14:15"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10209:3:15",
																																		"nodeType": "YulLiteral",
																																		"src": "10209:3:15",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "10189:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "10189:3:15"
																																},
																																"nativeSrc": "10189:24:15",
																																"nodeType": "YulFunctionCall",
																																"src": "10189:24:15"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10219:1:15",
																																		"nodeType": "YulLiteral",
																																		"src": "10219:1:15",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "10215:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "10215:3:15"
																																},
																																"nativeSrc": "10215:6:15",
																																"nodeType": "YulFunctionCall",
																																"src": "10215:6:15"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "10185:3:15",
																															"nodeType": "YulIdentifier",
																															"src": "10185:3:15"
																														},
																														"nativeSrc": "10185:37:15",
																														"nodeType": "YulFunctionCall",
																														"src": "10185:37:15"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "10181:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "10181:3:15"
																												},
																												"nativeSrc": "10181:42:15",
																												"nodeType": "YulFunctionCall",
																												"src": "10181:42:15"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "10166:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "10166:3:15"
																										},
																										"nativeSrc": "10166:58:15",
																										"nodeType": "YulFunctionCall",
																										"src": "10166:58:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10151:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "10151:6:15"
																								},
																								"nativeSrc": "10151:74:15",
																								"nodeType": "YulFunctionCall",
																								"src": "10151:74:15"
																							},
																							"nativeSrc": "10151:74:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "10151:74:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10044:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "10044:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "10053:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "10053:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10041:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "10041:2:15"
																					},
																					"nativeSrc": "10041:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10041:19:15"
																				},
																				"nativeSrc": "10038:201:15",
																				"nodeType": "YulIf",
																				"src": "10038:201:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10259:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "10259:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "10273:1:15",
																											"nodeType": "YulLiteral",
																											"src": "10273:1:15",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "10276:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "10276:6:15"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "10269:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "10269:3:15"
																									},
																									"nativeSrc": "10269:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "10269:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10285:1:15",
																									"nodeType": "YulLiteral",
																									"src": "10285:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10265:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "10265:3:15"
																							},
																							"nativeSrc": "10265:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "10265:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10252:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10252:6:15"
																					},
																					"nativeSrc": "10252:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10252:36:15"
																				},
																				"nativeSrc": "10252:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "10252:36:15"
																			}
																		]
																	},
																	"nativeSrc": "9635:663:15",
																	"nodeType": "YulCase",
																	"src": "9635:663:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9640:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9640:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10315:234:15",
																		"nodeType": "YulBlock",
																		"src": "10315:234:15",
																		"statements": [
																			{
																				"nativeSrc": "10329:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10329:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10342:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10342:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "10333:5:15",
																						"nodeType": "YulTypedName",
																						"src": "10333:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10378:67:15",
																					"nodeType": "YulBlock",
																					"src": "10378:67:15",
																					"statements": [
																						{
																							"nativeSrc": "10396:35:15",
																							"nodeType": "YulAssignment",
																							"src": "10396:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10415:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "10415:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10420:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "10420:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10411:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "10411:3:15"
																										},
																										"nativeSrc": "10411:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "10411:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10405:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "10405:5:15"
																								},
																								"nativeSrc": "10405:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "10405:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "10396:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "10396:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "10359:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "10359:6:15"
																				},
																				"nativeSrc": "10356:89:15",
																				"nodeType": "YulIf",
																				"src": "10356:89:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10465:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "10465:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10524:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "10524:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "10531:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "10531:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "10471:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "10471:52:15"
																							},
																							"nativeSrc": "10471:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "10471:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10458:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10458:6:15"
																					},
																					"nativeSrc": "10458:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10458:81:15"
																				},
																				"nativeSrc": "10458:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "10458:81:15"
																			}
																		]
																	},
																	"nativeSrc": "10307:242:15",
																	"nodeType": "YulCase",
																	"src": "10307:242:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9615:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9615:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9623:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9623:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9612:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9612:2:15"
																},
																"nativeSrc": "9612:14:15",
																"nodeType": "YulFunctionCall",
																"src": "9612:14:15"
															},
															"nativeSrc": "9605:944:15",
															"nodeType": "YulSwitch",
															"src": "9605:944:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "9210:1345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "9291:4:15",
														"nodeType": "YulTypedName",
														"src": "9291:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "9297:3:15",
														"nodeType": "YulTypedName",
														"src": "9297:3:15",
														"type": ""
													}
												],
												"src": "9210:1345:15"
											},
											{
												"body": {
													"nativeSrc": "10734:181:15",
													"nodeType": "YulBlock",
													"src": "10734:181:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10751:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10751:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10762:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10762:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10744:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10744:6:15"
																},
																"nativeSrc": "10744:21:15",
																"nodeType": "YulFunctionCall",
																"src": "10744:21:15"
															},
															"nativeSrc": "10744:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "10744:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10785:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10785:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10796:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10796:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10781:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10781:3:15"
																		},
																		"nativeSrc": "10781:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10781:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10801:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10801:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10774:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10774:6:15"
																},
																"nativeSrc": "10774:30:15",
																"nodeType": "YulFunctionCall",
																"src": "10774:30:15"
															},
															"nativeSrc": "10774:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "10774:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10824:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10824:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10835:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10835:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10820:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10820:3:15"
																		},
																		"nativeSrc": "10820:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10820:18:15"
																	},
																	{
																		"hexValue": "4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c",
																		"kind": "string",
																		"nativeSrc": "10840:33:15",
																		"nodeType": "YulLiteral",
																		"src": "10840:33:15",
																		"type": "",
																		"value": "Only VRFCoordinator can fulfill"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10813:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10813:6:15"
																},
																"nativeSrc": "10813:61:15",
																"nodeType": "YulFunctionCall",
																"src": "10813:61:15"
															},
															"nativeSrc": "10813:61:15",
															"nodeType": "YulExpressionStatement",
															"src": "10813:61:15"
														},
														{
															"nativeSrc": "10883:26:15",
															"nodeType": "YulAssignment",
															"src": "10883:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10895:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10895:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10906:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10906:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10891:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10891:3:15"
																},
																"nativeSrc": "10891:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10891:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10883:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10883:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10560:355:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10711:9:15",
														"nodeType": "YulTypedName",
														"src": "10711:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10725:4:15",
														"nodeType": "YulTypedName",
														"src": "10725:4:15",
														"type": ""
													}
												],
												"src": "10560:355:15"
											},
											{
												"body": {
													"nativeSrc": "10970:162:15",
													"nodeType": "YulBlock",
													"src": "10970:162:15",
													"statements": [
														{
															"nativeSrc": "10980:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10980:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11000:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11000:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10994:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10994:5:15"
																},
																"nativeSrc": "10994:12:15",
																"nodeType": "YulFunctionCall",
																"src": "10994:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10984:6:15",
																	"nodeType": "YulTypedName",
																	"src": "10984:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11021:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11021:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11030:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11030:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11037:4:15",
																				"nodeType": "YulLiteral",
																				"src": "11037:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11026:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11026:3:15"
																		},
																		"nativeSrc": "11026:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11026:16:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11044:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11044:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "11015:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11015:5:15"
																},
																"nativeSrc": "11015:36:15",
																"nodeType": "YulFunctionCall",
																"src": "11015:36:15"
															},
															"nativeSrc": "11015:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "11015:36:15"
														},
														{
															"nativeSrc": "11060:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11060:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11074:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11074:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11079:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11079:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11070:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11070:3:15"
																},
																"nativeSrc": "11070:16:15",
																"nodeType": "YulFunctionCall",
																"src": "11070:16:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11064:2:15",
																	"nodeType": "YulTypedName",
																	"src": "11064:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "11102:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "11102:2:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11106:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11106:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11095:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11095:6:15"
																},
																"nativeSrc": "11095:13:15",
																"nodeType": "YulFunctionCall",
																"src": "11095:13:15"
															},
															"nativeSrc": "11095:13:15",
															"nodeType": "YulExpressionStatement",
															"src": "11095:13:15"
														},
														{
															"nativeSrc": "11117:9:15",
															"nodeType": "YulAssignment",
															"src": "11117:9:15",
															"value": {
																"name": "_1",
																"nativeSrc": "11124:2:15",
																"nodeType": "YulIdentifier",
																"src": "11124:2:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11117:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11117:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "10920:212:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10947:5:15",
														"nodeType": "YulTypedName",
														"src": "10947:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10954:3:15",
														"nodeType": "YulTypedName",
														"src": "10954:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10962:3:15",
														"nodeType": "YulTypedName",
														"src": "10962:3:15",
														"type": ""
													}
												],
												"src": "10920:212:15"
											},
											{
												"body": {
													"nativeSrc": "11324:80:15",
													"nodeType": "YulBlock",
													"src": "11324:80:15",
													"statements": [
														{
															"nativeSrc": "11334:64:15",
															"nodeType": "YulAssignment",
															"src": "11334:64:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11359:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11359:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11385:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11385:6:15"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "11393:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "11393:3:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "11367:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "11367:17:15"
																		},
																		"nativeSrc": "11367:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11367:30:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "11341:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "11341:17:15"
																},
																"nativeSrc": "11341:57:15",
																"nodeType": "YulFunctionCall",
																"src": "11341:57:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11334:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11334:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11137:267:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11292:3:15",
														"nodeType": "YulTypedName",
														"src": "11292:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11297:6:15",
														"nodeType": "YulTypedName",
														"src": "11297:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11305:6:15",
														"nodeType": "YulTypedName",
														"src": "11305:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11316:3:15",
														"nodeType": "YulTypedName",
														"src": "11316:3:15",
														"type": ""
													}
												],
												"src": "11137:267:15"
											},
											{
												"body": {
													"nativeSrc": "11538:119:15",
													"nodeType": "YulBlock",
													"src": "11538:119:15",
													"statements": [
														{
															"nativeSrc": "11548:26:15",
															"nodeType": "YulAssignment",
															"src": "11548:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11560:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11560:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11571:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11571:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11556:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11556:3:15"
																},
																"nativeSrc": "11556:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11556:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11548:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11548:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11590:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11590:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11601:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11601:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11583:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11583:6:15"
																},
																"nativeSrc": "11583:25:15",
																"nodeType": "YulFunctionCall",
																"src": "11583:25:15"
															},
															"nativeSrc": "11583:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "11583:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11628:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11628:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11639:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11639:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11624:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11624:3:15"
																		},
																		"nativeSrc": "11624:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11624:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11644:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11644:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11617:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11617:6:15"
																},
																"nativeSrc": "11617:34:15",
																"nodeType": "YulFunctionCall",
																"src": "11617:34:15"
															},
															"nativeSrc": "11617:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "11617:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
												"nativeSrc": "11409:248:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11499:9:15",
														"nodeType": "YulTypedName",
														"src": "11499:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11510:6:15",
														"nodeType": "YulTypedName",
														"src": "11510:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11518:6:15",
														"nodeType": "YulTypedName",
														"src": "11518:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11529:4:15",
														"nodeType": "YulTypedName",
														"src": "11529:4:15",
														"type": ""
													}
												],
												"src": "11409:248:15"
											},
											{
												"body": {
													"nativeSrc": "11837:222:15",
													"nodeType": "YulBlock",
													"src": "11837:222:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11854:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11854:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11869:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11869:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11885:3:15",
																								"nodeType": "YulLiteral",
																								"src": "11885:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11890:1:15",
																								"nodeType": "YulLiteral",
																								"src": "11890:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11881:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "11881:3:15"
																						},
																						"nativeSrc": "11881:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "11881:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11894:1:15",
																						"nodeType": "YulLiteral",
																						"src": "11894:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11877:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11877:3:15"
																				},
																				"nativeSrc": "11877:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11877:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11865:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11865:3:15"
																		},
																		"nativeSrc": "11865:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11865:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11847:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11847:6:15"
																},
																"nativeSrc": "11847:51:15",
																"nodeType": "YulFunctionCall",
																"src": "11847:51:15"
															},
															"nativeSrc": "11847:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "11847:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11918:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11918:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11929:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11929:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11914:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11914:3:15"
																		},
																		"nativeSrc": "11914:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11914:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11934:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11934:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11907:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11907:6:15"
																},
																"nativeSrc": "11907:34:15",
																"nodeType": "YulFunctionCall",
																"src": "11907:34:15"
															},
															"nativeSrc": "11907:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "11907:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11961:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11961:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11972:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11972:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11957:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11957:3:15"
																		},
																		"nativeSrc": "11957:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11957:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11977:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11977:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11950:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11950:6:15"
																},
																"nativeSrc": "11950:30:15",
																"nodeType": "YulFunctionCall",
																"src": "11950:30:15"
															},
															"nativeSrc": "11950:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "11950:30:15"
														},
														{
															"nativeSrc": "11989:64:15",
															"nodeType": "YulAssignment",
															"src": "11989:64:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12026:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12026:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12038:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12038:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12049:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12049:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12034:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12034:3:15"
																		},
																		"nativeSrc": "12034:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12034:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "11997:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "11997:28:15"
																},
																"nativeSrc": "11997:56:15",
																"nodeType": "YulFunctionCall",
																"src": "11997:56:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11989:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11989:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "11662:397:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11790:9:15",
														"nodeType": "YulTypedName",
														"src": "11790:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11801:6:15",
														"nodeType": "YulTypedName",
														"src": "11801:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11809:6:15",
														"nodeType": "YulTypedName",
														"src": "11809:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11817:6:15",
														"nodeType": "YulTypedName",
														"src": "11817:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11828:4:15",
														"nodeType": "YulTypedName",
														"src": "11828:4:15",
														"type": ""
													}
												],
												"src": "11662:397:15"
											},
											{
												"body": {
													"nativeSrc": "12142:167:15",
													"nodeType": "YulBlock",
													"src": "12142:167:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12188:16:15",
																"nodeType": "YulBlock",
																"src": "12188:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12197:1:15",
																					"nodeType": "YulLiteral",
																					"src": "12197:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12200:1:15",
																					"nodeType": "YulLiteral",
																					"src": "12200:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12190:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12190:6:15"
																			},
																			"nativeSrc": "12190:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12190:12:15"
																		},
																		"nativeSrc": "12190:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12190:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12163:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12163:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12172:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12172:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12159:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12159:3:15"
																		},
																		"nativeSrc": "12159:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12159:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12184:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12184:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12155:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12155:3:15"
																},
																"nativeSrc": "12155:32:15",
																"nodeType": "YulFunctionCall",
																"src": "12155:32:15"
															},
															"nativeSrc": "12152:52:15",
															"nodeType": "YulIf",
															"src": "12152:52:15"
														},
														{
															"nativeSrc": "12213:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "12213:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12232:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12232:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12226:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12226:5:15"
																},
																"nativeSrc": "12226:16:15",
																"nodeType": "YulFunctionCall",
																"src": "12226:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "12217:5:15",
																	"nodeType": "YulTypedName",
																	"src": "12217:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12273:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12273:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "12251:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "12251:21:15"
																},
																"nativeSrc": "12251:28:15",
																"nodeType": "YulFunctionCall",
																"src": "12251:28:15"
															},
															"nativeSrc": "12251:28:15",
															"nodeType": "YulExpressionStatement",
															"src": "12251:28:15"
														},
														{
															"nativeSrc": "12288:15:15",
															"nodeType": "YulAssignment",
															"src": "12288:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "12298:5:15",
																"nodeType": "YulIdentifier",
																"src": "12298:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12288:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12288:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12064:245:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12108:9:15",
														"nodeType": "YulTypedName",
														"src": "12108:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12119:7:15",
														"nodeType": "YulTypedName",
														"src": "12119:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12131:6:15",
														"nodeType": "YulTypedName",
														"src": "12131:6:15",
														"type": ""
													}
												],
												"src": "12064:245:15"
											},
											{
												"body": {
													"nativeSrc": "12346:95:15",
													"nodeType": "YulBlock",
													"src": "12346:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12363:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12363:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12370:3:15",
																				"nodeType": "YulLiteral",
																				"src": "12370:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12375:10:15",
																				"nodeType": "YulLiteral",
																				"src": "12375:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12366:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12366:3:15"
																		},
																		"nativeSrc": "12366:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12366:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12356:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12356:6:15"
																},
																"nativeSrc": "12356:31:15",
																"nodeType": "YulFunctionCall",
																"src": "12356:31:15"
															},
															"nativeSrc": "12356:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "12356:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12403:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12403:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12406:4:15",
																		"nodeType": "YulLiteral",
																		"src": "12406:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12396:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12396:6:15"
																},
																"nativeSrc": "12396:15:15",
																"nodeType": "YulFunctionCall",
																"src": "12396:15:15"
															},
															"nativeSrc": "12396:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "12396:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12427:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12427:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12430:4:15",
																		"nodeType": "YulLiteral",
																		"src": "12430:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12420:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12420:6:15"
																},
																"nativeSrc": "12420:15:15",
																"nodeType": "YulFunctionCall",
																"src": "12420:15:15"
															},
															"nativeSrc": "12420:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "12420:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12314:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "12314:127:15"
											},
											{
												"body": {
													"nativeSrc": "12494:77:15",
													"nodeType": "YulBlock",
													"src": "12494:77:15",
													"statements": [
														{
															"nativeSrc": "12504:16:15",
															"nodeType": "YulAssignment",
															"src": "12504:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12515:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "12515:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12518:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "12518:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12511:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12511:3:15"
																},
																"nativeSrc": "12511:9:15",
																"nodeType": "YulFunctionCall",
																"src": "12511:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12504:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12504:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12543:22:15",
																"nodeType": "YulBlock",
																"src": "12543:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12545:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "12545:16:15"
																			},
																			"nativeSrc": "12545:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12545:18:15"
																		},
																		"nativeSrc": "12545:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12545:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12535:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "12535:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12538:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12538:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12532:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "12532:2:15"
																},
																"nativeSrc": "12532:10:15",
																"nodeType": "YulFunctionCall",
																"src": "12532:10:15"
															},
															"nativeSrc": "12529:36:15",
															"nodeType": "YulIf",
															"src": "12529:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12446:125:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12477:1:15",
														"nodeType": "YulTypedName",
														"src": "12477:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12480:1:15",
														"nodeType": "YulTypedName",
														"src": "12480:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12486:3:15",
														"nodeType": "YulTypedName",
														"src": "12486:3:15",
														"type": ""
													}
												],
												"src": "12446:125:15"
											},
											{
												"body": {
													"nativeSrc": "12608:95:15",
													"nodeType": "YulBlock",
													"src": "12608:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12625:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12625:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12632:3:15",
																				"nodeType": "YulLiteral",
																				"src": "12632:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12637:10:15",
																				"nodeType": "YulLiteral",
																				"src": "12637:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12628:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12628:3:15"
																		},
																		"nativeSrc": "12628:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12628:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12618:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12618:6:15"
																},
																"nativeSrc": "12618:31:15",
																"nodeType": "YulFunctionCall",
																"src": "12618:31:15"
															},
															"nativeSrc": "12618:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "12618:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12665:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12665:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12668:4:15",
																		"nodeType": "YulLiteral",
																		"src": "12668:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12658:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12658:6:15"
																},
																"nativeSrc": "12658:15:15",
																"nodeType": "YulFunctionCall",
																"src": "12658:15:15"
															},
															"nativeSrc": "12658:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "12658:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12689:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12689:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12692:4:15",
																		"nodeType": "YulLiteral",
																		"src": "12692:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12682:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12682:6:15"
																},
																"nativeSrc": "12682:15:15",
																"nodeType": "YulFunctionCall",
																"src": "12682:15:15"
															},
															"nativeSrc": "12682:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "12682:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12576:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "12576:127:15"
											},
											{
												"body": {
													"nativeSrc": "12855:100:15",
													"nodeType": "YulBlock",
													"src": "12855:100:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12872:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12872:3:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "12877:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12877:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12865:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12865:6:15"
																},
																"nativeSrc": "12865:19:15",
																"nodeType": "YulFunctionCall",
																"src": "12865:19:15"
															},
															"nativeSrc": "12865:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "12865:19:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "12904:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "12904:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12909:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12909:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12900:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12900:3:15"
																		},
																		"nativeSrc": "12900:12:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12900:12:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12914:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12914:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12893:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12893:6:15"
																},
																"nativeSrc": "12893:28:15",
																"nodeType": "YulFunctionCall",
																"src": "12893:28:15"
															},
															"nativeSrc": "12893:28:15",
															"nodeType": "YulExpressionStatement",
															"src": "12893:28:15"
														},
														{
															"nativeSrc": "12930:19:15",
															"nodeType": "YulAssignment",
															"src": "12930:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12941:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12941:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12946:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12946:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12937:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12937:3:15"
																},
																"nativeSrc": "12937:12:15",
																"nodeType": "YulFunctionCall",
																"src": "12937:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12930:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12930:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12708:247:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12823:3:15",
														"nodeType": "YulTypedName",
														"src": "12823:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12828:6:15",
														"nodeType": "YulTypedName",
														"src": "12828:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12836:6:15",
														"nodeType": "YulTypedName",
														"src": "12836:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12847:3:15",
														"nodeType": "YulTypedName",
														"src": "12847:3:15",
														"type": ""
													}
												],
												"src": "12708:247:15"
											},
											{
												"body": {
													"nativeSrc": "12992:95:15",
													"nodeType": "YulBlock",
													"src": "12992:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13009:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13009:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13016:3:15",
																				"nodeType": "YulLiteral",
																				"src": "13016:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13021:10:15",
																				"nodeType": "YulLiteral",
																				"src": "13021:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13012:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13012:3:15"
																		},
																		"nativeSrc": "13012:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13012:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13002:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13002:6:15"
																},
																"nativeSrc": "13002:31:15",
																"nodeType": "YulFunctionCall",
																"src": "13002:31:15"
															},
															"nativeSrc": "13002:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "13002:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13049:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13049:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13052:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13052:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13042:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13042:6:15"
																},
																"nativeSrc": "13042:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13042:15:15"
															},
															"nativeSrc": "13042:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "13042:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13073:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13073:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13076:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13076:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13066:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13066:6:15"
																},
																"nativeSrc": "13066:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13066:15:15"
															},
															"nativeSrc": "13066:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "13066:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12960:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "12960:127:15"
											},
											{
												"body": {
													"nativeSrc": "13130:171:15",
													"nodeType": "YulBlock",
													"src": "13130:171:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "13161:111:15",
																"nodeType": "YulBlock",
																"src": "13161:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13182:1:15",
																					"nodeType": "YulLiteral",
																					"src": "13182:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13189:3:15",
																							"nodeType": "YulLiteral",
																							"src": "13189:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "13194:10:15",
																							"nodeType": "YulLiteral",
																							"src": "13194:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "13185:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "13185:3:15"
																					},
																					"nativeSrc": "13185:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "13185:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13175:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13175:6:15"
																			},
																			"nativeSrc": "13175:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13175:31:15"
																		},
																		"nativeSrc": "13175:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13175:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13226:1:15",
																					"nodeType": "YulLiteral",
																					"src": "13226:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13229:4:15",
																					"nodeType": "YulLiteral",
																					"src": "13229:4:15",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13219:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13219:6:15"
																			},
																			"nativeSrc": "13219:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13219:15:15"
																		},
																		"nativeSrc": "13219:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13219:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13254:1:15",
																					"nodeType": "YulLiteral",
																					"src": "13254:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13257:4:15",
																					"nodeType": "YulLiteral",
																					"src": "13257:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13247:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13247:6:15"
																			},
																			"nativeSrc": "13247:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13247:15:15"
																		},
																		"nativeSrc": "13247:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13247:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13150:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13150:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13143:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13143:6:15"
																},
																"nativeSrc": "13143:9:15",
																"nodeType": "YulFunctionCall",
																"src": "13143:9:15"
															},
															"nativeSrc": "13140:132:15",
															"nodeType": "YulIf",
															"src": "13140:132:15"
														},
														{
															"nativeSrc": "13281:14:15",
															"nodeType": "YulAssignment",
															"src": "13281:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13290:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13290:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13293:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13293:1:15"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "13286:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13286:3:15"
																},
																"nativeSrc": "13286:9:15",
																"nodeType": "YulFunctionCall",
																"src": "13286:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13281:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "13281:1:15"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "13092:209:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13115:1:15",
														"nodeType": "YulTypedName",
														"src": "13115:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13118:1:15",
														"nodeType": "YulTypedName",
														"src": "13118:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13124:1:15",
														"nodeType": "YulTypedName",
														"src": "13124:1:15",
														"type": ""
													}
												],
												"src": "13092:209:15"
											},
											{
												"body": {
													"nativeSrc": "13353:88:15",
													"nodeType": "YulBlock",
													"src": "13353:88:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "13384:22:15",
																"nodeType": "YulBlock",
																"src": "13384:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13386:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "13386:16:15"
																			},
																			"nativeSrc": "13386:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13386:18:15"
																		},
																		"nativeSrc": "13386:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13386:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13369:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "13369:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13380:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13380:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "13376:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13376:3:15"
																		},
																		"nativeSrc": "13376:6:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13376:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13366:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "13366:2:15"
																},
																"nativeSrc": "13366:17:15",
																"nodeType": "YulFunctionCall",
																"src": "13366:17:15"
															},
															"nativeSrc": "13363:43:15",
															"nodeType": "YulIf",
															"src": "13363:43:15"
														},
														{
															"nativeSrc": "13415:20:15",
															"nodeType": "YulAssignment",
															"src": "13415:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13426:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "13426:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13433:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13433:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13422:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13422:3:15"
																},
																"nativeSrc": "13422:13:15",
																"nodeType": "YulFunctionCall",
																"src": "13422:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13415:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13415:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "13306:135:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13335:5:15",
														"nodeType": "YulTypedName",
														"src": "13335:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13345:3:15",
														"nodeType": "YulTypedName",
														"src": "13345:3:15",
														"type": ""
													}
												],
												"src": "13306:135:15"
											},
											{
												"body": {
													"nativeSrc": "13645:152:15",
													"nodeType": "YulBlock",
													"src": "13645:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13662:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13662:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "13673:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13673:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13655:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13655:6:15"
																},
																"nativeSrc": "13655:25:15",
																"nodeType": "YulFunctionCall",
																"src": "13655:25:15"
															},
															"nativeSrc": "13655:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "13655:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13700:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13700:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13711:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13711:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13696:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13696:3:15"
																		},
																		"nativeSrc": "13696:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13696:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13716:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13716:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13689:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13689:6:15"
																},
																"nativeSrc": "13689:30:15",
																"nodeType": "YulFunctionCall",
																"src": "13689:30:15"
															},
															"nativeSrc": "13689:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "13689:30:15"
														},
														{
															"nativeSrc": "13728:63:15",
															"nodeType": "YulAssignment",
															"src": "13728:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13764:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13764:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13776:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13776:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13787:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13787:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13772:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13772:3:15"
																		},
																		"nativeSrc": "13772:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13772:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_string_dyn",
																	"nativeSrc": "13736:27:15",
																	"nodeType": "YulIdentifier",
																	"src": "13736:27:15"
																},
																"nativeSrc": "13736:55:15",
																"nodeType": "YulFunctionCall",
																"src": "13736:55:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13728:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13728:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "13446:351:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13606:9:15",
														"nodeType": "YulTypedName",
														"src": "13606:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13617:6:15",
														"nodeType": "YulTypedName",
														"src": "13617:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13625:6:15",
														"nodeType": "YulTypedName",
														"src": "13625:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13636:4:15",
														"nodeType": "YulTypedName",
														"src": "13636:4:15",
														"type": ""
													}
												],
												"src": "13446:351:15"
											},
											{
												"body": {
													"nativeSrc": "14005:297:15",
													"nodeType": "YulBlock",
													"src": "14005:297:15",
													"statements": [
														{
															"nativeSrc": "14015:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "14015:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14033:3:15",
																				"nodeType": "YulLiteral",
																				"src": "14033:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14038:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14038:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "14029:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14029:3:15"
																		},
																		"nativeSrc": "14029:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14029:11:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14042:1:15",
																		"nodeType": "YulLiteral",
																		"src": "14042:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14025:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14025:3:15"
																},
																"nativeSrc": "14025:19:15",
																"nodeType": "YulFunctionCall",
																"src": "14025:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "14019:2:15",
																	"nodeType": "YulTypedName",
																	"src": "14019:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14060:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14060:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14075:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14075:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "14083:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "14083:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14071:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14071:3:15"
																		},
																		"nativeSrc": "14071:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14071:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14053:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14053:6:15"
																},
																"nativeSrc": "14053:34:15",
																"nodeType": "YulFunctionCall",
																"src": "14053:34:15"
															},
															"nativeSrc": "14053:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "14053:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14107:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14107:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14118:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14118:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14103:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14103:3:15"
																		},
																		"nativeSrc": "14103:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14103:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "14127:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14127:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "14135:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "14135:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14123:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14123:3:15"
																		},
																		"nativeSrc": "14123:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14123:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14096:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14096:6:15"
																},
																"nativeSrc": "14096:43:15",
																"nodeType": "YulFunctionCall",
																"src": "14096:43:15"
															},
															"nativeSrc": "14096:43:15",
															"nodeType": "YulExpressionStatement",
															"src": "14096:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14159:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14159:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14170:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14170:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14155:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14155:3:15"
																		},
																		"nativeSrc": "14155:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14155:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "14175:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14175:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14148:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14148:6:15"
																},
																"nativeSrc": "14148:34:15",
																"nodeType": "YulFunctionCall",
																"src": "14148:34:15"
															},
															"nativeSrc": "14148:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "14148:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14202:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14202:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14213:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14213:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14198:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14198:3:15"
																		},
																		"nativeSrc": "14198:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14198:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14218:3:15",
																		"nodeType": "YulLiteral",
																		"src": "14218:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14191:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14191:6:15"
																},
																"nativeSrc": "14191:31:15",
																"nodeType": "YulFunctionCall",
																"src": "14191:31:15"
															},
															"nativeSrc": "14191:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "14191:31:15"
														},
														{
															"nativeSrc": "14231:65:15",
															"nodeType": "YulAssignment",
															"src": "14231:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14268:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14268:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14280:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14280:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14291:3:15",
																				"nodeType": "YulLiteral",
																				"src": "14291:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14276:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14276:3:15"
																		},
																		"nativeSrc": "14276:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14276:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "14239:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "14239:28:15"
																},
																"nativeSrc": "14239:57:15",
																"nodeType": "YulFunctionCall",
																"src": "14239:57:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14231:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14231:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "13802:500:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13950:9:15",
														"nodeType": "YulTypedName",
														"src": "13950:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13961:6:15",
														"nodeType": "YulTypedName",
														"src": "13961:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13969:6:15",
														"nodeType": "YulTypedName",
														"src": "13969:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13977:6:15",
														"nodeType": "YulTypedName",
														"src": "13977:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13985:6:15",
														"nodeType": "YulTypedName",
														"src": "13985:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13996:4:15",
														"nodeType": "YulTypedName",
														"src": "13996:4:15",
														"type": ""
													}
												],
												"src": "13802:500:15"
											},
											{
												"body": {
													"nativeSrc": "14387:169:15",
													"nodeType": "YulBlock",
													"src": "14387:169:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "14433:16:15",
																"nodeType": "YulBlock",
																"src": "14433:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14442:1:15",
																					"nodeType": "YulLiteral",
																					"src": "14442:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14445:1:15",
																					"nodeType": "YulLiteral",
																					"src": "14445:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14435:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14435:6:15"
																			},
																			"nativeSrc": "14435:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14435:12:15"
																		},
																		"nativeSrc": "14435:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "14435:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14408:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "14408:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14417:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14417:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14404:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14404:3:15"
																		},
																		"nativeSrc": "14404:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14404:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14429:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14429:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14400:3:15"
																},
																"nativeSrc": "14400:32:15",
																"nodeType": "YulFunctionCall",
																"src": "14400:32:15"
															},
															"nativeSrc": "14397:52:15",
															"nodeType": "YulIf",
															"src": "14397:52:15"
														},
														{
															"nativeSrc": "14458:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "14458:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14477:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14477:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14471:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "14471:5:15"
																},
																"nativeSrc": "14471:16:15",
																"nodeType": "YulFunctionCall",
																"src": "14471:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "14462:5:15",
																	"nodeType": "YulTypedName",
																	"src": "14462:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14520:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "14520:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "14496:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "14496:23:15"
																},
																"nativeSrc": "14496:30:15",
																"nodeType": "YulFunctionCall",
																"src": "14496:30:15"
															},
															"nativeSrc": "14496:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "14496:30:15"
														},
														{
															"nativeSrc": "14535:15:15",
															"nodeType": "YulAssignment",
															"src": "14535:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "14545:5:15",
																"nodeType": "YulIdentifier",
																"src": "14545:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "14535:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14535:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "14307:249:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14353:9:15",
														"nodeType": "YulTypedName",
														"src": "14353:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14364:7:15",
														"nodeType": "YulTypedName",
														"src": "14364:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14376:6:15",
														"nodeType": "YulTypedName",
														"src": "14376:6:15",
														"type": ""
													}
												],
												"src": "14307:249:15"
											},
											{
												"body": {
													"nativeSrc": "14690:145:15",
													"nodeType": "YulBlock",
													"src": "14690:145:15",
													"statements": [
														{
															"nativeSrc": "14700:26:15",
															"nodeType": "YulAssignment",
															"src": "14700:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14712:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14712:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14723:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14723:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14708:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14708:3:15"
																},
																"nativeSrc": "14708:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14708:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14700:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14700:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14742:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14742:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14757:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14757:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14773:3:15",
																								"nodeType": "YulLiteral",
																								"src": "14773:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14778:1:15",
																								"nodeType": "YulLiteral",
																								"src": "14778:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "14769:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "14769:3:15"
																						},
																						"nativeSrc": "14769:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "14769:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14782:1:15",
																						"nodeType": "YulLiteral",
																						"src": "14782:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14765:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "14765:3:15"
																				},
																				"nativeSrc": "14765:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14765:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14753:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14753:3:15"
																		},
																		"nativeSrc": "14753:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14753:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14735:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14735:6:15"
																},
																"nativeSrc": "14735:51:15",
																"nodeType": "YulFunctionCall",
																"src": "14735:51:15"
															},
															"nativeSrc": "14735:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "14735:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14806:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14806:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14817:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14817:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14802:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14802:3:15"
																		},
																		"nativeSrc": "14802:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14802:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14822:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14822:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14795:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14795:6:15"
																},
																"nativeSrc": "14795:34:15",
																"nodeType": "YulFunctionCall",
																"src": "14795:34:15"
															},
															"nativeSrc": "14795:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "14795:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14561:274:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14651:9:15",
														"nodeType": "YulTypedName",
														"src": "14651:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14662:6:15",
														"nodeType": "YulTypedName",
														"src": "14662:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14670:6:15",
														"nodeType": "YulTypedName",
														"src": "14670:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14681:4:15",
														"nodeType": "YulTypedName",
														"src": "14681:4:15",
														"type": ""
													}
												],
												"src": "14561:274:15"
											},
											{
												"body": {
													"nativeSrc": "15025:232:15",
													"nodeType": "YulBlock",
													"src": "15025:232:15",
													"statements": [
														{
															"nativeSrc": "15035:27:15",
															"nodeType": "YulAssignment",
															"src": "15035:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15047:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15047:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15058:3:15",
																		"nodeType": "YulLiteral",
																		"src": "15058:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15043:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15043:3:15"
																},
																"nativeSrc": "15043:19:15",
																"nodeType": "YulFunctionCall",
																"src": "15043:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15035:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15035:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15078:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15078:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "15089:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15089:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15071:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15071:6:15"
																},
																"nativeSrc": "15071:25:15",
																"nodeType": "YulFunctionCall",
																"src": "15071:25:15"
															},
															"nativeSrc": "15071:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "15071:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15116:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15116:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15127:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15127:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15112:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15112:3:15"
																		},
																		"nativeSrc": "15112:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15112:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "15132:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15132:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15105:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15105:6:15"
																},
																"nativeSrc": "15105:34:15",
																"nodeType": "YulFunctionCall",
																"src": "15105:34:15"
															},
															"nativeSrc": "15105:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "15105:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15159:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15159:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15170:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15170:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15155:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15155:3:15"
																		},
																		"nativeSrc": "15155:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15155:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "15179:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15179:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15195:3:15",
																								"nodeType": "YulLiteral",
																								"src": "15195:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15200:1:15",
																								"nodeType": "YulLiteral",
																								"src": "15200:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "15191:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "15191:3:15"
																						},
																						"nativeSrc": "15191:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "15191:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15204:1:15",
																						"nodeType": "YulLiteral",
																						"src": "15204:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15187:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15187:3:15"
																				},
																				"nativeSrc": "15187:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15187:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15175:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15175:3:15"
																		},
																		"nativeSrc": "15175:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15175:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15148:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15148:6:15"
																},
																"nativeSrc": "15148:60:15",
																"nodeType": "YulFunctionCall",
																"src": "15148:60:15"
															},
															"nativeSrc": "15148:60:15",
															"nodeType": "YulExpressionStatement",
															"src": "15148:60:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15228:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15228:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15239:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15239:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15224:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15224:3:15"
																		},
																		"nativeSrc": "15224:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15224:18:15"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "15244:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15244:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15217:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15217:6:15"
																},
																"nativeSrc": "15217:34:15",
																"nodeType": "YulFunctionCall",
																"src": "15217:34:15"
															},
															"nativeSrc": "15217:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "15217:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256_t_address_t_uint256__to_t_bytes32_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14840:417:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14970:9:15",
														"nodeType": "YulTypedName",
														"src": "14970:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14981:6:15",
														"nodeType": "YulTypedName",
														"src": "14981:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14989:6:15",
														"nodeType": "YulTypedName",
														"src": "14989:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14997:6:15",
														"nodeType": "YulTypedName",
														"src": "14997:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15005:6:15",
														"nodeType": "YulTypedName",
														"src": "15005:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15016:4:15",
														"nodeType": "YulTypedName",
														"src": "15016:4:15",
														"type": ""
													}
												],
												"src": "14840:417:15"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_array_string_dyn(value, pos) -> end\n    {\n        let pos_1 := pos\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let tail := add(add(pos_1, shl(5, length)), 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail, pos_1), not(31)))\n            tail := abi_encode_string_memory_ptr(mload(srcPtr), tail)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        end := tail\n    }\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_string_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_5e6b1fab5e2902145d60af20d931dd202525df1dcee37251d6d34ca7cc4f7014__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Not enough LINK tokens\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Only VRFCoordinator can fulfill\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_string_memory_ptr(value2, add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_string_dyn(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_address_t_uint256__to_t_bytes32_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"73": [
									{
										"length": 32,
										"start": 1559
									},
									{
										"length": 32,
										"start": 2910
									}
								],
								"75": [
									{
										"length": 32,
										"start": 1969
									},
									{
										"length": 32,
										"start": 2957
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101a1575f3560e01c80637ba19512116100f3578063b88d4fde11610093578063e84b3ad01161006e578063e84b3ad01461037c578063e985e9c514610384578063eb2e578b14610397578063f68016b7146103a0575f80fd5b8063b88d4fde1461034d578063c87b56dd14610360578063ddca3f4314610373575f80fd5b80639cc8c69b116100ce5780639cc8c69b146102f4578063a22cb46514610307578063a3e56fa81461031a578063a630fd971461032d575f80fd5b80637ba19512146102c657806394985ddd146102d957806395d89b41146102ec575f80fd5b80633ff6bc4e1161015e57806357970e931161013957806357970e931461027a5780635ed5b5af1461028d5780636352211e146102a057806370a08231146102b3575f80fd5b80633ff6bc4e1461024857806342842e0e1461025e5780634eb7e95f14610271575f80fd5b806301ffc9a7146101a557806306fdde03146101cd578063081812fc146101e2578063095ea7b31461020d57806323b872dd146102225780632d72225b14610235575b5f80fd5b6101b86101b3366004611553565b6103a9565b60405190151581526020015b60405180910390f35b6101d56103fa565b6040516101c4919061159c565b6101f56101f03660046115ae565b61048a565b6040516001600160a01b0390911681526020016101c4565b61022061021b3660046115e0565b6104b1565b005b610220610230366004611608565b6104c0565b6101d56102433660046115ae565b61054e565b6102506105f4565b6040519081526020016101c4565b61022061026c366004611608565b6106fa565b610250600c5481565b6008546101f5906001600160a01b031681565b6101d561029b366004611641565b610719565b6101f56102ae3660046115ae565b61074b565b6102506102c1366004611661565b610755565b6102206102d4366004611701565b61079a565b6102206102e7366004611641565b6107a6565b6101d5610828565b610220610302366004611701565b610837565b610220610315366004611753565b610872565b6007546101f5906001600160a01b031681565b61034061033b3660046115ae565b61087d565b6040516101c491906117e0565b61022061035b3660046117f2565b610962565b6101d561036e3660046115ae565b610979565b61025060095481565b6101d56109ea565b6101b8610392366004611869565b6109f7565b610250600b5481565b610250600a5481565b5f6001600160e01b031982166380ac58cd60e01b14806103d957506001600160e01b03198216635b5e139f60e01b145b806103f457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546104099061189a565b80601f01602080910402602001604051908101604052809291908181526020018280546104359061189a565b80156104805780601f1061045757610100808354040283529160200191610480565b820191905f5260205f20905b81548152906001019060200180831161046357829003601f168201915b5050505050905090565b5f61049482610a24565b505f828152600560205260409020546001600160a01b03166103f4565b6104bc828233610a5c565b5050565b6001600160a01b0382166104ee57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f6104fa838333610a69565b9050836001600160a01b0316816001600160a01b031614610548576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016104e5565b50505050565b600e818154811061055d575f80fd5b905f5260205f20015f9150905080546105759061189a565b80601f01602080910402602001604051908101604052809291908181526020018280546105a19061189a565b80156105ec5780601f106105c3576101008083540402835291602001916105ec565b820191905f5260205f20905b8154815290600101906020018083116105cf57829003601f168201915b505050505081565b600b546040516370a0823160e01b81523060048201525f91906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561065c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068091906118d2565b10156106c75760405162461bcd60e51b81526020600482015260166024820152754e6f7420656e6f756768204c494e4b20746f6b656e7360501b60448201526064016104e5565b6106f57f1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef5f1b600954610b5b565b905090565b61071483838360405180602001604052805f815250610962565b505050565b600f602052815f5260405f208181548110610732575f80fd5b905f5260205f20015f915091505080546105759061189a565b5f6103f482610a24565b5f6001600160a01b03821661077f576040516322718ad960e21b81525f60048201526024016104e5565b506001600160a01b03165f9081526004602052604090205490565b600d6104bc828261192d565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461081e5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016104e5565b6104bc8282610ccf565b6060600280546104099061189a565b600e80546001810182555f919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd016104bc828261192d565b6104bc338383610f2b565b6060600f5f8381526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015610957578382905f5260205f200180546108cc9061189a565b80601f01602080910402602001604051908101604052809291908181526020018280546108f89061189a565b80156109435780601f1061091a57610100808354040283529160200191610943565b820191905f5260205f20905b81548152906001019060200180831161092657829003601f168201915b5050505050815260200190600101906108af565b505050509050919050565b61096d8484846104c0565b61054884848484610fc9565b606061098482610a24565b505f61099a60408051602081019091525f815290565b90505f8151116109b85760405180602001604052805f8152506109e3565b806109c2846110ef565b6040516020016109d3929190611a04565b6040516020818303038152906040525b9392505050565b600d80546105759061189a565b6001600160a01b039182165f90815260066020908152604080832093909416825291909152205460ff1690565b5f818152600360205260408120546001600160a01b0316806103f457604051637e27328960e01b8152600481018490526024016104e5565b610714838383600161117f565b5f828152600360205260408120546001600160a01b0390811690831615610a9557610a95818486611283565b6001600160a01b03811615610acf57610ab05f855f8061117f565b6001600160a01b0381165f90815260046020526040902080545f190190555b6001600160a01b03851615610afd576001600160a01b0385165f908152600460205260409020805460010190555b5f8481526003602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084865f604051602001610bc9929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610bf693929190611a18565b6020604051808303815f875af1158015610c12573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c369190611a47565b505f8381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610c8f906001611a76565b5f8581526020818152604091829020929092558051808301879052808201849052815180820383018152606090910190915280519101205b949350505050565b5f600c546001610cdf9190611a76565b600e549091505f9067ffffffffffffffff811115610cff57610cff61167a565b604051908082528060200260200182016040528015610d3257816020015b6060815260200190600190039081610d1d5790505b506040805160018082528183019092529192505f919060208083019080368337019050509050835f1b815f81518110610d6d57610d6d611a89565b6020026020010181815250505f5b600e54811015610ead575f600e80549050835f81518110610d9e57610d9e611a89565b602002602001015183604051602001610dc1929190918252602082015260400190565b604051602081830303815290604052805190602001205f1c610de39190611a9d565b9050600e8181548110610df857610df8611a89565b905f5260205f20018054610e0b9061189a565b80601f0160208091040260200160405190810160405280929190818152602001828054610e379061189a565b8015610e825780601f10610e5957610100808354040283529160200191610e82565b820191905f5260205f20905b815481529060010190602001808311610e6557829003601f168201915b5050505050848381518110610e9957610e99611a89565b602090810291909101015250600101610d7b565b505f838152600f602090815260409091208351610ecc92850190611480565b50610ed733846112e7565b600c8054905f610ee683611abc565b91905055507f65f952dd632608f6d1db9e9311e0972e973f6e783ba47c13460083c575bf07f38383604051610f1c929190611ad4565b60405180910390a15050505050565b6001600160a01b038216610f5d57604051630b61174360e31b81526001600160a01b03831660048201526024016104e5565b6001600160a01b038381165f81815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561054857604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061100b903390889087908790600401611aec565b6020604051808303815f875af1925050508015611045575060408051601f3d908101601f1916820190925261104291810190611b28565b60015b6110ac573d808015611072576040519150601f19603f3d011682016040523d82523d5f602084013e611077565b606091505b5080515f036110a457604051633250574960e11b81526001600160a01b03851660048201526024016104e5565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146110e857604051633250574960e11b81526001600160a01b03851660048201526024016104e5565b5050505050565b60605f6110fb83611348565b60010190505f8167ffffffffffffffff81111561111a5761111a61167a565b6040519080825280601f01601f191660200182016040528015611144576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461114e57509392505050565b808061119357506001600160a01b03821615155b15611254575f6111a284610a24565b90506001600160a01b038316158015906111ce5750826001600160a01b0316816001600160a01b031614155b80156111e157506111df81846109f7565b155b1561120a5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016104e5565b81156112525783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260056020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b61128e83838361141f565b610714576001600160a01b0383166112bc57604051637e27328960e01b8152600481018290526024016104e5565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016104e5565b6001600160a01b03821661131057604051633250574960e11b81525f60048201526024016104e5565b5f61131c83835f610a69565b90506001600160a01b03811615610714576040516339e3563760e11b81525f60048201526024016104e5565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106113865772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106113b2576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106113d057662386f26fc10000830492506010015b6305f5e10083106113e8576305f5e100830492506008015b61271083106113fc57612710830492506004015b6064831061140e576064830492506002015b600a83106103f45760010192915050565b5f6001600160a01b03831615801590610cc75750826001600160a01b0316846001600160a01b03161480611458575061145884846109f7565b80610cc75750505f908152600560205260409020546001600160a01b03908116911614919050565b828054828255905f5260205f209081019282156114c4579160200282015b828111156114c457825182906114b4908261192d565b509160200191906001019061149e565b506114d09291506114d4565b5090565b808211156114d0575f6114e782826114f0565b506001016114d4565b5080546114fc9061189a565b5f825580601f1061150b575050565b601f0160209004905f5260205f2090810190611527919061152a565b50565b5b808211156114d0575f815560010161152b565b6001600160e01b031981168114611527575f80fd5b5f60208284031215611563575f80fd5b81356109e38161153e565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6109e3602083018461156e565b5f602082840312156115be575f80fd5b5035919050565b80356001600160a01b03811681146115db575f80fd5b919050565b5f80604083850312156115f1575f80fd5b6115fa836115c5565b946020939093013593505050565b5f805f6060848603121561161a575f80fd5b611623846115c5565b9250611631602085016115c5565b9150604084013590509250925092565b5f8060408385031215611652575f80fd5b50508035926020909101359150565b5f60208284031215611671575f80fd5b6109e3826115c5565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff808411156116a8576116a861167a565b604051601f8501601f19908116603f011681019082821181831017156116d0576116d061167a565b816040528093508581528686860111156116e8575f80fd5b858560208301375f602087830101525050509392505050565b5f60208284031215611711575f80fd5b813567ffffffffffffffff811115611727575f80fd5b8201601f81018413611737575f80fd5b610cc78482356020840161168e565b8015158114611527575f80fd5b5f8060408385031215611764575f80fd5b61176d836115c5565b9150602083013561177d81611746565b809150509250929050565b5f8282518085526020808601955060208260051b840101602086015f5b848110156117d357601f198684030189526117c183835161156e565b988401989250908301906001016117a5565b5090979650505050505050565b602081525f6109e36020830184611788565b5f805f8060808587031215611805575f80fd5b61180e856115c5565b935061181c602086016115c5565b925060408501359150606085013567ffffffffffffffff81111561183e575f80fd5b8501601f8101871361184e575f80fd5b61185d8782356020840161168e565b91505092959194509250565b5f806040838503121561187a575f80fd5b611883836115c5565b9150611891602084016115c5565b90509250929050565b600181811c908216806118ae57607f821691505b6020821081036118cc57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f602082840312156118e2575f80fd5b5051919050565b601f82111561071457805f5260205f20601f840160051c8101602085101561190e5750805b601f840160051c820191505b818110156110e8575f815560010161191a565b815167ffffffffffffffff8111156119475761194761167a565b61195b81611955845461189a565b846118e9565b602080601f83116001811461198e575f84156119775750858301515b5f19600386901b1c1916600185901b1785556119e5565b5f85815260208120601f198616915b828110156119bc5788860151825594840194600190910190840161199d565b50858210156119d957878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f81518060208401855e5f93019283525090919050565b5f610cc7611a1283866119ed565b846119ed565b60018060a01b0384168152826020820152606060408201525f611a3e606083018461156e565b95945050505050565b5f60208284031215611a57575f80fd5b81516109e381611746565b634e487b7160e01b5f52601160045260245ffd5b808201808211156103f4576103f4611a62565b634e487b7160e01b5f52603260045260245ffd5b5f82611ab757634e487b7160e01b5f52601260045260245ffd5b500690565b5f60018201611acd57611acd611a62565b5060010190565b828152604060208201525f610cc76040830184611788565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f90611b1e9083018461156e565b9695505050505050565b5f60208284031215611b38575f80fd5b81516109e38161153e56fea2646970667358221220f3b4d570f88033d3c446a12bfa7e5b0347b7e6630e0dea27bfaf00890c6a4db864736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BA19512 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xE84B3AD0 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE84B3AD0 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xEB2E578B EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xF68016B7 EQ PUSH2 0x3A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x373 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9CC8C69B GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x9CC8C69B EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xA3E56FA8 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xA630FD97 EQ PUSH2 0x32D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7BA19512 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FF6BC4E GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x57970E93 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x57970E93 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x5ED5B5AF EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FF6BC4E EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x4EB7E95F EQ PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x2D72225B EQ PUSH2 0x235 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1553 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH2 0x250 PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x250 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1F5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST PUSH2 0x250 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH2 0x220 PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1F5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x340 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH2 0x250 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x250 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x250 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3D9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3F4 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x409 SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x435 SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x480 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x457 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x480 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x463 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x494 DUP3 PUSH2 0xA24 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x4BC DUP3 DUP3 CALLER PUSH2 0xA5C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4FA DUP4 DUP4 CALLER PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x55D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x575 SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5A1 SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x65C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x680 SWAP2 SWAP1 PUSH2 0x18D2 JUMP JUMPDEST LT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F7420656E6F756768204C494E4B20746F6B656E73 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x6F5 PUSH32 0x1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF PUSH0 SHL PUSH1 0x9 SLOAD PUSH2 0xB5B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x714 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x962 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x732 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 SLOAD PUSH2 0x575 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH0 PUSH2 0x3F4 DUP3 PUSH2 0xA24 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH2 0x4BC DUP3 DUP3 PUSH2 0x192D JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x4BC DUP3 DUP3 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x409 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD ADD PUSH2 0x4BC DUP3 DUP3 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x4BC CALLER DUP4 DUP4 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x957 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x8CC SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F8 SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x943 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x91A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x943 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x926 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x8AF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x96D DUP5 DUP5 DUP5 PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x548 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x984 DUP3 PUSH2 0xA24 JUMP JUMPDEST POP PUSH0 PUSH2 0x99A PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9E3 JUMP JUMPDEST DUP1 PUSH2 0x9C2 DUP5 PUSH2 0x10EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9D3 SWAP3 SWAP2 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH2 0x575 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x714 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xA95 JUMPI PUSH2 0xA95 DUP2 DUP5 DUP7 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xACF JUMPI PUSH2 0xAB0 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xAFD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBC9 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC12 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP9 SWAP1 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP7 DUP5 MSTORE SWAP3 SWAP1 SWAP2 MSTORE PUSH2 0xC8F SWAP1 PUSH1 0x1 PUSH2 0x1A76 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD PUSH1 0x1 PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCFF JUMPI PUSH2 0xCFF PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD32 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD1D JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 PUSH0 SHL DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xD6D JUMPI PUSH2 0xD6D PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 JUMPDEST PUSH1 0xE SLOAD DUP2 LT ISZERO PUSH2 0xEAD JUMPI PUSH0 PUSH1 0xE DUP1 SLOAD SWAP1 POP DUP4 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xD9E JUMPI PUSH2 0xD9E PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDC1 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x1A9D JUMP JUMPDEST SWAP1 POP PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDF8 JUMPI PUSH2 0xDF8 PUSH2 0x1A89 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xE0B SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE37 SWAP1 PUSH2 0x189A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE82 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE59 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE82 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE65 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE99 JUMPI PUSH2 0xE99 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0xD7B JUMP JUMPDEST POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xECC SWAP3 DUP6 ADD SWAP1 PUSH2 0x1480 JUMP JUMPDEST POP PUSH2 0xED7 CALLER DUP5 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP1 PUSH0 PUSH2 0xEE6 DUP4 PUSH2 0x1ABC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x65F952DD632608F6D1DB9E9311E0972E973F6E783BA47C13460083C575BF07F3 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF1C SWAP3 SWAP2 SWAP1 PUSH2 0x1AD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF5D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x100B SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1045 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1042 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10AC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1072 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x10E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x10FB DUP4 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x111A JUMPI PUSH2 0x111A PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1144 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x114E JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1193 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1254 JUMPI PUSH0 PUSH2 0x11A2 DUP5 PUSH2 0xA24 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11CE JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x11E1 JUMPI POP PUSH2 0x11DF DUP2 DUP5 PUSH2 0x9F7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x120A JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1252 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x128E DUP4 DUP4 DUP4 PUSH2 0x141F JUMP JUMPDEST PUSH2 0x714 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1310 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH0 PUSH2 0x131C DUP4 DUP4 PUSH0 PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x714 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1386 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13B2 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13D0 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x13E8 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x13FC JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x140E JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3F4 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xCC7 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1458 JUMPI POP PUSH2 0x1458 DUP5 DUP5 PUSH2 0x9F7 JUMP JUMPDEST DUP1 PUSH2 0xCC7 JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x14C4 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x14C4 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH2 0x14B4 SWAP1 DUP3 PUSH2 0x192D JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x149E JUMP JUMPDEST POP PUSH2 0x14D0 SWAP3 SWAP2 POP PUSH2 0x14D4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x14D0 JUMPI PUSH0 PUSH2 0x14E7 DUP3 DUP3 PUSH2 0x14F0 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x14D4 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x14FC SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x150B JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1527 SWAP2 SWAP1 PUSH2 0x152A JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x14D0 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x152B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1527 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1563 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9E3 DUP2 PUSH2 0x153E JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x9E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x156E JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15DB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15FA DUP4 PUSH2 0x15C5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x161A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1623 DUP5 PUSH2 0x15C5 JUMP JUMPDEST SWAP3 POP PUSH2 0x1631 PUSH1 0x20 DUP6 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1652 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1671 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9E3 DUP3 PUSH2 0x15C5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x16A8 JUMPI PUSH2 0x16A8 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x16D0 JUMPI PUSH2 0x16D0 PUSH2 0x167A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x16E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1711 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1727 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1737 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCC7 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x168E JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1527 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1764 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x176D DUP4 PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x177D DUP2 PUSH2 0x1746 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD PUSH1 0x20 DUP7 ADD PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x17D3 JUMPI PUSH1 0x1F NOT DUP7 DUP5 SUB ADD DUP10 MSTORE PUSH2 0x17C1 DUP4 DUP4 MLOAD PUSH2 0x156E JUMP JUMPDEST SWAP9 DUP5 ADD SWAP9 SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17A5 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x9E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1788 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1805 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x180E DUP6 PUSH2 0x15C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x181C PUSH1 0x20 DUP7 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x183E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x184E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x185D DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x168E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x187A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1883 DUP4 PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1891 PUSH1 0x20 DUP5 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x18AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x714 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x190E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10E8 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x191A JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1947 JUMPI PUSH2 0x1947 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x195B DUP2 PUSH2 0x1955 DUP5 SLOAD PUSH2 0x189A JUMP JUMPDEST DUP5 PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x198E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1977 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x19E5 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19BC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x199D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x19D9 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC7 PUSH2 0x1A12 DUP4 DUP7 PUSH2 0x19ED JUMP JUMPDEST DUP5 PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x1A3E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x156E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9E3 DUP2 PUSH2 0x1746 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3F4 JUMPI PUSH2 0x3F4 PUSH2 0x1A62 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1AB7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1ACD JUMPI PUSH2 0x1ACD PUSH2 0x1A62 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xCC7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1B1E SWAP1 DUP4 ADD DUP5 PUSH2 0x156E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B38 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9E3 DUP2 PUSH2 0x153E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB4 0xD5 PUSH17 0xF88033D3C446A12BFA7E5B0347B7E6630E 0xD 0xEA 0x27 0xBF 0xAF STOP DUP10 0xC PUSH11 0x4DB864736F6C6343000819 STOP CALLER ",
							"sourceMap": "178:2173:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:4;;;;;;:::i;:::-;;:::i;:::-;;;565:14:15;;558:22;540:41;;528:2;513:18;1561:300:4;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1482:32:15;;;1464:51;;1452:2;1437:18;3497:154:4;1318:203:15;3323:113:4;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;:::i;:::-;;:::i;565:22:14:-;;;;;;:::i;:::-;;:::i;1290:209::-;;;:::i;:::-;;;2442:25:15;;;2430:2;2415:18;1290:209:14;2296:177:15;4787:132:4;;;;;;:::i;:::-;;:::i;498:30:14:-;;;;;;277:24;;;;;-1:-1:-1;;;;;277:24:14;;;598:42;;;;;;:::i;:::-;;:::i;2185:118:4:-;;;;;;:::i;:::-;;:::i;1920:208::-;;;;;;:::i;:::-;;:::i;1105:92:14:-;;;;;;:::i;:::-;;:::i;9576:207:0:-;;;;;;:::i;:::-;;:::i;2518:93:4:-;;;:::i;1203:81:14:-;;;;;;:::i;:::-;;:::i;3718:144:4:-;;;;;;:::i;:::-;;:::i;234:37:14:-;;;;;-1:-1:-1;;;;;234:37:14;;;2229:115;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4985:208:4:-;;;;;;:::i;:::-;;:::i;2677:255::-;;;;;;:::i;:::-;;:::i;414:18:14:-;;;;;;534:25;;;:::i;3928:153:4:-;;;;;;:::i;:::-;;:::i;467:25:14:-;;;;;;438:23;;;;;;1561:300:4;1663:4;-1:-1:-1;;;;;;1698:40:4;;-1:-1:-1;;;1698:40:4;;:104;;-1:-1:-1;;;;;;;1754:48:4;;-1:-1:-1;;;1754:48:4;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:10;;;1818:36:4;1679:175;1561:300;-1:-1:-1;;1561:300:4:o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:4;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:4;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:8;3394:8:4;:35::i;:::-;3323:113;;:::o;4143:578::-;-1:-1:-1;;;;;4237:16:4;;4233:87;;4276:33;;-1:-1:-1;;;4276:33:4;;4306:1;4276:33;;;1464:51:15;1437:18;;4276:33:4;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;735:10:8;4562:7:4;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:4;:13;-1:-1:-1;;;;;4610:21:4;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:4;;-1:-1:-1;;;;;7728:15:15;;;4654:50:4;;;7710:34:15;7760:18;;;7753:34;;;7823:15;;7803:18;;;7796:43;7645:18;;4654:50:4;7470:375:15;4606:109:4;4223:498;4143:578;;;:::o;565:22:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1290:209::-;1407:10;;1374:29;;-1:-1:-1;;;1374:29:14;;1397:4;1374:29;;;1464:51:15;1337:17:14;;1407:10;-1:-1:-1;;;;;1374:4:14;:14;;;;1437:18:15;;1374:29:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;1366:78;;;;-1:-1:-1;;;1366:78:14;;8241:2:15;1366:78:14;;;8223:21:15;8280:2;8260:18;;;8253:30;-1:-1:-1;;;8299:18:15;;;8292:52;8361:18;;1366:78:14;8039:346:15;1366:78:14;1461:31;342:66;1479:7;;1488:3;;1461:17;:31::i;:::-;1454:38;;1290:209;:::o;4787:132:4:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;598:42:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2185:118:4:-;2248:7;2274:22;2288:7;2274:13;:22::i;1920:208::-;1983:7;-1:-1:-1;;;;;2006:19:4;;2002:87;;2048:30;;-1:-1:-1;;;2048:30:4;;2075:1;2048:30;;;1464:51:15;1437:18;;2048:30:4;1318:203:15;2002:87:4;-1:-1:-1;;;;;;2105:16:4;;;;;:9;:16;;;;;;;1920:208::o;1105:92:14:-;1169:11;:21;1183:7;1169:11;:21;:::i;9576:207:0:-;9668:10;-1:-1:-1;;;;;9682:14:0;9668:28;;9660:72;;;;-1:-1:-1;;;9660:72:0;;10762:2:15;9660:72:0;;;10744:21:15;10801:2;10781:18;;;10774:30;10840:33;10820:18;;;10813:61;10891:18;;9660:72:0;10560:355:15;9660:72:0;9738:40;9756:9;9767:10;9738:17;:40::i;2518:93:4:-;2565:13;2597:7;2590:14;;;;;:::i;1203:81:14:-;1259:6;:18;;;;;;;-1:-1:-1;1259:18:14;;;;;;;1271:5;1259:18;;:::i;3718:144:4:-;3803:52;735:10:8;3836:8:4;3846;3803:18;:52::i;2229:115:14:-;2285:15;2319:9;:18;2329:7;2319:18;;;;;;;;;;;2312:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2229:115;;;:::o;4985:208:4:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;3250:9;;;;;;;;;-1:-1:-1;3250:9:4;;;3174:92;2823:10;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;2677:255;-1:-1:-1;;;2677:255:4:o;534:25:14:-;;;;;;;:::i;3928:153:4:-;-1:-1:-1;;;;;4039:25:4;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;16138:241::-;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:4;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:4;;;;;2442:25:15;;;2415:18;;16309:31:4;2296:177:15;14418:120:4;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;8838:795::-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:4;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:4;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:4;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:4;;;9157:256;-1:-1:-1;;;;;9427:16:4;;;9423:107;;-1:-1:-1;;;;;9487:13:4;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:4;-1:-1:-1;;;;;9540:21:4;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:4:o;7732:1020:0:-;7809:17;7834:4;-1:-1:-1;;;;;7834:20:0;;7855:14;7871:4;7888:8;6589:1;7877:43;;;;;;;;11583:25:15;;;11639:2;11624:18;;11617:34;11571:2;11556:18;;11409:248;7877:43:0;;;;;;;;;;;;;7834:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8152:15:0;8235:16;;;;;;;;;;;;978:51:1;;;;;15071:25:15;;;15112:18;;;15105:34;;;8228:4:0;15155:18:15;;;15148:60;15224:18;;;;15217:34;;;978:51:1;;;;;;;;;;15043:19:15;;;;978:51:1;;;968:62;;;;;;;;;8682:16:0;;;;;;;:20;;8701:1;8682:20;:::i;:::-;8663:6;:16;;;;;;;;;;;;:39;;;;1535:41:1;;;;;12865:19:15;;;12900:12;;;12893:28;;;1535:41:1;;;;;;;;;12937:12:15;;;;1535:41:1;;;1525:52;;;;;8715:32:0;8708:39;7732:1020;-1:-1:-1;;;;7732:1020:0:o;1505:718:14:-;1621:15;1639;;1657:1;1639:19;;;;:::i;:::-;1712:6;:13;1621:37;;-1:-1:-1;1668:28:14;;1699:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1776:16:14;;;1790:1;1776:16;;;;;;;;;1668:58;;-1:-1:-1;1745:28:14;;1776:16;;;;;;;;;;;;-1:-1:-1;1776:16:14;1745:47;;1827:10;1819:19;;1802:11;1814:1;1802:14;;;;;;;;:::i;:::-;;;;;;:36;;;;;1862:6;1857:198;1878:6;:13;1874:17;;1857:198;;;1912:13;1986:6;:13;;;;1963:11;1975:1;1963:14;;;;;;;;:::i;:::-;;;;;;;1979:1;1946:35;;;;;;;;12865:19:15;;;12909:2;12900:12;;12893:28;12946:2;12937:12;;12708:247;1946:35:14;;;;;;;;;;;;;1936:46;;;;;;1928:55;;:71;;;;:::i;:::-;1912:87;;2031:6;2038:5;2031:13;;;;;;;;:::i;:::-;;;;;;;;2013:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;2026:1;2013:15;;;;;;;;:::i;:::-;;;;;;;;;;:31;-1:-1:-1;1893:3:14;;1857:198;;;-1:-1:-1;2073:18:14;;;;:9;:18;;;;;;;;:33;;;;;;;;:::i;:::-;;2116:26;2122:10;2134:7;2116:5;:26::i;:::-;2152:15;:17;;;:15;:17;;;:::i;:::-;;;;;;2184:32;2194:7;2203:12;2184:32;;;;;;;:::i;:::-;;;;;;;;1611:612;;;1505:718;;:::o;15591:312:4:-;-1:-1:-1;;;;;15698:22:4;;15694:91;;15743:31;;-1:-1:-1;;;15743:31:4;;-1:-1:-1;;;;;1482:32:15;;15743:31:4;;;1464:51:15;1437:18;;15743:31:4;1318:203:15;15694:91:4;-1:-1:-1;;;;;15794:25:4;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:4;;;;;;;;;;15855:41;;540::15;;;15855::4;;513:18:15;15855:41:4;;;;;;;15591:312;;;:::o;16918:782::-;-1:-1:-1;;;;;17034:14:4;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:4;;-1:-1:-1;;;;;17072:36:4;;;;;:71;;735:10:8;;17123:4:4;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:4;;;;;;;;-1:-1:-1;;17072:71:4;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;-1:-1:-1;;;17430:25:4;;-1:-1:-1;;;;;1482:32:15;;17430:25:4;;;1464:51:15;1437:18;;17430:25:4;1318:203:15;17377:293:4;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:4;;-1:-1:-1;;;17190:51:4;17186:130;;17272:25;;-1:-1:-1;;;17272:25:4;;-1:-1:-1;;;;;1482:32:15;;17272:25:4;;;1464:51:15;1437:18;;17272:25:4;1318:203:15;17186:130:4;17144:186;16918:782;;;;:::o;637:698:9:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:9;-1:-1:-1;794:41:9;-1:-1:-1;955:28:9;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:9;-1:-1:-1;;;1175:2:9;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:9;1010:282;1256:21;-1:-1:-1;1312:6:9;637:698;-1:-1:-1;;;637:698:9:o;14720:662:4:-;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:4;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:4;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:4;:5;-1:-1:-1;;;;;15115:13:4;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15189:27;;-1:-1:-1;;;15189:27:4;;-1:-1:-1;;;;;1482:32:15;;15189:27:4;;;1464:51:15;1437:18;;15189:27:4;1318:203:15;15089:142:4;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:4;15292:5;-1:-1:-1;;;;;15283:28:4;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:4;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:4;-1:-1:-1;;;;;15346:29:4;;;;;;;;;;14720:662::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:4;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:4;;;;;2442:25:15;;;2415:18;;7298:31:4;2296:177:15;7248:186:4;7375:44;;-1:-1:-1;;;7375:44:4;;-1:-1:-1;;;;;14753:32:15;;7375:44:4;;;14735:51:15;14802:18;;;14795:34;;;14708:18;;7375:44:4;14561:274:15;9955:327:4;-1:-1:-1;;;;;10022:16:4;;10018:87;;10061:33;;-1:-1:-1;;;10061:33:4;;10091:1;10061:33;;;1464:51:15;1437:18;;10061:33:4;1318:203:15;10018:87:4;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:4;;;10180:96;;10234:31;;-1:-1:-1;;;10234:31:4;;10262:1;10234:31;;;1464:51:15;1437:18;;10234:31:4;1318:203:15;12214:916:12;12267:7;;-1:-1:-1;;;12342:17:12;;12338:103;;-1:-1:-1;;;12379:17:12;;;-1:-1:-1;12424:2:12;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:12;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:12;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:12;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:12;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:12;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:12:o;6376:272:4:-;6479:4;-1:-1:-1;;;;;6514:21:4;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:4;:5;-1:-1:-1;;;;;6552:16:4;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;;6008:7:4;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:4;;;6608:32;;;;6495:146;-1:-1:-1;6376:272:4:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;14:131:15;-1:-1:-1;;;;;;88:32:15;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:300::-;645:3;683:5;677:12;710:6;705:3;698:19;766:6;759:4;752:5;748:16;741:4;736:3;732:14;726:47;818:1;811:4;802:6;797:3;793:16;789:27;782:38;881:4;874:2;870:7;865:2;857:6;853:15;849:29;844:3;840:39;836:50;829:57;;;592:300;;;;:::o;897:231::-;1046:2;1035:9;1028:21;1009:4;1066:56;1118:2;1107:9;1103:18;1095:6;1066:56;:::i;1133:180::-;1192:6;1245:2;1233:9;1224:7;1220:23;1216:32;1213:52;;;1261:1;1258;1251:12;1213:52;-1:-1:-1;1284:23:15;;1133:180;-1:-1:-1;1133:180:15:o;1526:173::-;1594:20;;-1:-1:-1;;;;;1643:31:15;;1633:42;;1623:70;;1689:1;1686;1679:12;1623:70;1526:173;;;:::o;1704:254::-;1772:6;1780;1833:2;1821:9;1812:7;1808:23;1804:32;1801:52;;;1849:1;1846;1839:12;1801:52;1872:29;1891:9;1872:29;:::i;:::-;1862:39;1948:2;1933:18;;;;1920:32;;-1:-1:-1;;;1704:254:15:o;1963:328::-;2040:6;2048;2056;2109:2;2097:9;2088:7;2084:23;2080:32;2077:52;;;2125:1;2122;2115:12;2077:52;2148:29;2167:9;2148:29;:::i;:::-;2138:39;;2196:38;2230:2;2219:9;2215:18;2196:38;:::i;:::-;2186:48;;2281:2;2270:9;2266:18;2253:32;2243:42;;1963:328;;;;;:::o;2660:248::-;2728:6;2736;2789:2;2777:9;2768:7;2764:23;2760:32;2757:52;;;2805:1;2802;2795:12;2757:52;-1:-1:-1;;2828:23:15;;;2898:2;2883:18;;;2870:32;;-1:-1:-1;2660:248:15:o;2913:186::-;2972:6;3025:2;3013:9;3004:7;3000:23;2996:32;2993:52;;;3041:1;3038;3031:12;2993:52;3064:29;3083:9;3064:29;:::i;3104:127::-;3165:10;3160:3;3156:20;3153:1;3146:31;3196:4;3193:1;3186:15;3220:4;3217:1;3210:15;3236:632;3301:5;3331:18;3372:2;3364:6;3361:14;3358:40;;;3378:18;;:::i;:::-;3453:2;3447:9;3421:2;3507:15;;-1:-1:-1;;3503:24:15;;;3529:2;3499:33;3495:42;3483:55;;;3553:18;;;3573:22;;;3550:46;3547:72;;;3599:18;;:::i;:::-;3639:10;3635:2;3628:22;3668:6;3659:15;;3698:6;3690;3683:22;3738:3;3729:6;3724:3;3720:16;3717:25;3714:45;;;3755:1;3752;3745:12;3714:45;3805:6;3800:3;3793:4;3785:6;3781:17;3768:44;3860:1;3853:4;3844:6;3836;3832:19;3828:30;3821:41;;;;3236:632;;;;;:::o;3873:451::-;3942:6;3995:2;3983:9;3974:7;3970:23;3966:32;3963:52;;;4011:1;4008;4001:12;3963:52;4051:9;4038:23;4084:18;4076:6;4073:30;4070:50;;;4116:1;4113;4106:12;4070:50;4139:22;;4192:4;4184:13;;4180:27;-1:-1:-1;4170:55:15;;4221:1;4218;4211:12;4170:55;4244:74;4310:7;4305:2;4292:16;4287:2;4283;4279:11;4244:74;:::i;4582:118::-;4668:5;4661:13;4654:21;4647:5;4644:32;4634:60;;4690:1;4687;4680:12;4705:315;4770:6;4778;4831:2;4819:9;4810:7;4806:23;4802:32;4799:52;;;4847:1;4844;4837:12;4799:52;4870:29;4889:9;4870:29;:::i;:::-;4860:39;;4949:2;4938:9;4934:18;4921:32;4962:28;4984:5;4962:28;:::i;:::-;5009:5;4999:15;;;4705:315;;;;;:::o;5249:609::-;5301:3;5332;5364:5;5358:12;5391:6;5386:3;5379:19;5417:4;5446;5441:3;5437:14;5430:21;;5504:4;5494:6;5491:1;5487:14;5480:5;5476:26;5472:37;5543:4;5536:5;5532:16;5566:1;5576:256;5590:6;5587:1;5584:13;5576:256;;;5677:2;5673:7;5665:5;5659:4;5655:16;5651:30;5646:3;5639:43;5703:49;5747:4;5738:6;5732:13;5703:49;:::i;:::-;5810:12;;;;5695:57;-1:-1:-1;5775:15:15;;;;5612:1;5605:9;5576:256;;;-1:-1:-1;5848:4:15;;5249:609;-1:-1:-1;;;;;;;5249:609:15:o;5863:280::-;6062:2;6051:9;6044:21;6025:4;6082:55;6133:2;6122:9;6118:18;6110:6;6082:55;:::i;6148:667::-;6243:6;6251;6259;6267;6320:3;6308:9;6299:7;6295:23;6291:33;6288:53;;;6337:1;6334;6327:12;6288:53;6360:29;6379:9;6360:29;:::i;:::-;6350:39;;6408:38;6442:2;6431:9;6427:18;6408:38;:::i;:::-;6398:48;;6493:2;6482:9;6478:18;6465:32;6455:42;;6548:2;6537:9;6533:18;6520:32;6575:18;6567:6;6564:30;6561:50;;;6607:1;6604;6597:12;6561:50;6630:22;;6683:4;6675:13;;6671:27;-1:-1:-1;6661:55:15;;6712:1;6709;6702:12;6661:55;6735:74;6801:7;6796:2;6783:16;6778:2;6774;6770:11;6735:74;:::i;:::-;6725:84;;;6148:667;;;;;;;:::o;6820:260::-;6888:6;6896;6949:2;6937:9;6928:7;6924:23;6920:32;6917:52;;;6965:1;6962;6955:12;6917:52;6988:29;7007:9;6988:29;:::i;:::-;6978:39;;7036:38;7070:2;7059:9;7055:18;7036:38;:::i;:::-;7026:48;;6820:260;;;;;:::o;7085:380::-;7164:1;7160:12;;;;7207;;;7228:61;;7282:4;7274:6;7270:17;7260:27;;7228:61;7335:2;7327:6;7324:14;7304:18;7301:38;7298:161;;7381:10;7376:3;7372:20;7369:1;7362:31;7416:4;7413:1;7406:15;7444:4;7441:1;7434:15;7298:161;;7085:380;;;:::o;7850:184::-;7920:6;7973:2;7961:9;7952:7;7948:23;7944:32;7941:52;;;7989:1;7986;7979:12;7941:52;-1:-1:-1;8012:16:15;;7850:184;-1:-1:-1;7850:184:15:o;8516:518::-;8618:2;8613:3;8610:11;8607:421;;;8654:5;8651:1;8644:16;8698:4;8695:1;8685:18;8768:2;8756:10;8752:19;8749:1;8745:27;8739:4;8735:38;8804:4;8792:10;8789:20;8786:47;;;-1:-1:-1;8827:4:15;8786:47;8882:2;8877:3;8873:12;8870:1;8866:20;8860:4;8856:31;8846:41;;8937:81;8955:2;8948:5;8945:13;8937:81;;;9014:1;9000:16;;8981:1;8970:13;8937:81;;9210:1345;9336:3;9330:10;9363:18;9355:6;9352:30;9349:56;;;9385:18;;:::i;:::-;9414:97;9504:6;9464:38;9496:4;9490:11;9464:38;:::i;:::-;9458:4;9414:97;:::i;:::-;9566:4;;9623:2;9612:14;;9640:1;9635:663;;;;10342:1;10359:6;10356:89;;;-1:-1:-1;10411:19:15;;;10405:26;10356:89;-1:-1:-1;;9167:1:15;9163:11;;;9159:24;9155:29;9145:40;9191:1;9187:11;;;9142:57;10458:81;;9605:944;;9635:663;8463:1;8456:14;;;8500:4;8487:18;;-1:-1:-1;;9671:20:15;;;9789:236;9803:7;9800:1;9797:14;9789:236;;;9892:19;;;9886:26;9871:42;;9984:27;;;;9952:1;9940:14;;;;9819:19;;9789:236;;;9793:3;10053:6;10044:7;10041:19;10038:201;;;10114:19;;;10108:26;-1:-1:-1;;10197:1:15;10193:14;;;10209:3;10189:24;10185:37;10181:42;10166:58;10151:74;;10038:201;;;10285:1;10276:6;10273:1;10269:14;10265:22;10259:4;10252:36;9605:944;;;;;9210:1345;;:::o;10920:212::-;10962:3;11000:5;10994:12;11044:6;11037:4;11030:5;11026:16;11021:3;11015:36;11106:1;11070:16;;11095:13;;;-1:-1:-1;11070:16:15;;10920:212;-1:-1:-1;10920:212:15:o;11137:267::-;11316:3;11341:57;11367:30;11393:3;11385:6;11367:30;:::i;:::-;11359:6;11341:57;:::i;11662:397::-;11894:1;11890;11885:3;11881:11;11877:19;11869:6;11865:32;11854:9;11847:51;11934:6;11929:2;11918:9;11914:18;11907:34;11977:2;11972;11961:9;11957:18;11950:30;11828:4;11997:56;12049:2;12038:9;12034:18;12026:6;11997:56;:::i;:::-;11989:64;11662:397;-1:-1:-1;;;;;11662:397:15:o;12064:245::-;12131:6;12184:2;12172:9;12163:7;12159:23;12155:32;12152:52;;;12200:1;12197;12190:12;12152:52;12232:9;12226:16;12251:28;12273:5;12251:28;:::i;12314:127::-;12375:10;12370:3;12366:20;12363:1;12356:31;12406:4;12403:1;12396:15;12430:4;12427:1;12420:15;12446:125;12511:9;;;12532:10;;;12529:36;;;12545:18;;:::i;12576:127::-;12637:10;12632:3;12628:20;12625:1;12618:31;12668:4;12665:1;12658:15;12692:4;12689:1;12682:15;13092:209;13124:1;13150;13140:132;;13194:10;13189:3;13185:20;13182:1;13175:31;13229:4;13226:1;13219:15;13257:4;13254:1;13247:15;13140:132;-1:-1:-1;13286:9:15;;13092:209::o;13306:135::-;13345:3;13366:17;;;13363:43;;13386:18;;:::i;:::-;-1:-1:-1;13433:1:15;13422:13;;13306:135::o;13446:351::-;13673:6;13662:9;13655:25;13716:2;13711;13700:9;13696:18;13689:30;13636:4;13736:55;13787:2;13776:9;13772:18;13764:6;13736:55;:::i;13802:500::-;-1:-1:-1;;;;;14071:15:15;;;14053:34;;14123:15;;14118:2;14103:18;;14096:43;14170:2;14155:18;;14148:34;;;14218:3;14213:2;14198:18;;14191:31;;;13996:4;;14239:57;;14276:19;;14268:6;14239:57;:::i;:::-;14231:65;13802:500;-1:-1:-1;;;;;;13802:500:15:o;14307:249::-;14376:6;14429:2;14417:9;14408:7;14404:23;14400:32;14397:52;;;14445:1;14442;14435:12;14397:52;14477:9;14471:16;14496:30;14520:5;14496:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1406600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addTrait(string)": "infinite",
								"approve(address,uint256)": "31531",
								"balanceOf(address)": "2696",
								"baseArtwork()": "infinite",
								"fee()": "2383",
								"gasLimit()": "2404",
								"getApproved(uint256)": "infinite",
								"getNFTTraits(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"linkToken()": "2381",
								"name()": "infinite",
								"nftTraits(uint256,uint256)": "infinite",
								"ownerOf(uint256)": "infinite",
								"rawFulfillRandomness(bytes32,uint256)": "infinite",
								"requestFee()": "2382",
								"requestRandomTraits()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26752",
								"setBaseArtwork(string)": "infinite",
								"supportsInterface(bytes4)": "531",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalNFTsMinted()": "2384",
								"traits(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"vrfCoordinator()": "2425"
							},
							"internal": {
								"fulfillRandomness(bytes32,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 178,
									"end": 2351,
									"name": "PUSH",
									"source": 14,
									"value": "C0"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 700,
									"end": 1095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 700,
									"end": 1095,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "D"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "111E5B985B5A58D05C9D139195"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "11105495"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9306,
									"end": 9338,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9306,
									"end": 9338,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 9306,
									"end": 9338,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9306,
									"end": 9338,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 9306,
									"end": 9338,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9344,
									"end": 9376,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 9344,
									"end": 9376,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9344,
									"end": 9376,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 9344,
									"end": 9376,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 930,
									"end": 944,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 930,
									"end": 962,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 930,
									"end": 962,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 930,
									"end": 962,
									"name": "SWAP7",
									"source": 14
								},
								{
									"begin": 930,
									"end": 962,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 930,
									"end": 962,
									"modifierDepth": 2,
									"name": "AND",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 930,
									"end": 962,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 930,
									"end": 962,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 930,
									"end": 962,
									"modifierDepth": 2,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 930,
									"end": 962,
									"modifierDepth": 2,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 930,
									"end": 962,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 930,
									"end": 962,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 930,
									"end": 962,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 972,
									"end": 981,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 972,
									"end": 994,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"name": "SWAP7",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"modifierDepth": 2,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"modifierDepth": 2,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"modifierDepth": 2,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 972,
									"end": 994,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1004,
									"end": 1012,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "A"
								},
								{
									"begin": 1004,
									"end": 1024,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1034,
									"end": 1044,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 1034,
									"end": 1058,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1074,
									"end": 1088,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "16345785D8A0000"
								},
								{
									"begin": 1068,
									"end": 1071,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 1068,
									"end": 1088,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 14,
									"end": 153,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 14,
									"end": 153,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 97,
									"end": 128,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 97,
									"end": 128,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 87,
									"end": 129,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 87,
									"end": 129,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 77,
									"end": 147,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 77,
									"end": 147,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 143,
									"end": 144,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 141,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 133,
									"end": 145,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 77,
									"end": 147,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 77,
									"end": 147,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 14,
									"end": 153,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 14,
									"end": 153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 158,
									"end": 690,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 158,
									"end": 690,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 263,
									"end": 269,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 277,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 279,
									"end": 285,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 293,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 340,
									"end": 343,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 328,
									"end": 337,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 315,
									"end": 338,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 311,
									"end": 344,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 308,
									"end": 361,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 308,
									"end": 361,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 308,
									"end": 361,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 357,
									"end": 358,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 355,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 347,
									"end": 359,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 308,
									"end": 361,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 308,
									"end": 361,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 389,
									"end": 398,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 383,
									"end": 399,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 408,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 441,
									"end": 446,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 408,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 408,
									"end": 447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 408,
									"end": 447,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 408,
									"end": 447,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 516,
									"end": 518,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 501,
									"end": 519,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 495,
									"end": 520,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 466,
									"end": 471,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 471,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 529,
									"end": 570,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 495,
									"end": 520,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 529,
									"end": 570,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 529,
									"end": 570,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 529,
									"end": 570,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 529,
									"end": 570,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 636,
									"end": 638,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 621,
									"end": 639,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 615,
									"end": 640,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 680,
									"end": 682,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 665,
									"end": 683,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 665,
									"end": 683,
									"name": "SWAP7",
									"source": 15
								},
								{
									"begin": 665,
									"end": 683,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 659,
									"end": 684,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 158,
									"end": 690,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 158,
									"end": 690,
									"name": "SWAP8",
									"source": 15
								},
								{
									"begin": 589,
									"end": 596,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 589,
									"end": 596,
									"name": "SWAP7",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 158,
									"end": 690,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 158,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 695,
									"end": 822,
									"name": "tag",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 695,
									"end": 822,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 756,
									"end": 766,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 751,
									"end": 754,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 747,
									"end": 767,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 744,
									"end": 745,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 737,
									"end": 768,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 787,
									"end": 791,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 784,
									"end": 785,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 777,
									"end": 792,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 811,
									"end": 815,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 808,
									"end": 809,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 801,
									"end": 816,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 827,
									"end": 1207,
									"name": "tag",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 827,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 906,
									"end": 907,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 902,
									"end": 914,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 902,
									"end": 914,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 902,
									"end": 914,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 902,
									"end": 914,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 949,
									"end": 961,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 949,
									"end": 961,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 949,
									"end": 961,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 970,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 970,
									"end": 1031,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1024,
									"end": 1028,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 1016,
									"end": 1022,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1012,
									"end": 1029,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1002,
									"end": 1029,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1002,
									"end": 1029,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 970,
									"end": 1031,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 970,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1077,
									"end": 1079,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1069,
									"end": 1075,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1066,
									"end": 1080,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1046,
									"end": 1064,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1043,
									"end": 1081,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 1040,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 1040,
									"end": 1201,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1123,
									"end": 1133,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 1118,
									"end": 1121,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 1114,
									"end": 1134,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1111,
									"end": 1112,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1104,
									"end": 1135,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1158,
									"end": 1162,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1148,
									"end": 1163,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1186,
									"end": 1190,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1191,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1040,
									"end": 1201,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 1040,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1040,
									"end": 1201,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 827,
									"end": 1207,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 827,
									"end": 1207,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 827,
									"end": 1207,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 827,
									"end": 1207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1338,
									"end": 1856,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1338,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1440,
									"end": 1442,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1435,
									"end": 1438,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1432,
									"end": 1443,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1429,
									"end": 1850,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1429,
									"end": 1850,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 1429,
									"end": 1850,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1476,
									"end": 1481,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1482,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1520,
									"end": 1524,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1517,
									"end": 1518,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1507,
									"end": 1525,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 1590,
									"end": 1592,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1578,
									"end": 1588,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1574,
									"end": 1593,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1571,
									"end": 1572,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1567,
									"end": 1594,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1561,
									"end": 1565,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1557,
									"end": 1595,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1614,
									"end": 1624,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1611,
									"end": 1631,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1608,
									"end": 1655,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1608,
									"end": 1655,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 1608,
									"end": 1655,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1649,
									"end": 1653,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1608,
									"end": 1655,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 1608,
									"end": 1655,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1704,
									"end": 1706,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1699,
									"end": 1702,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1695,
									"end": 1707,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1688,
									"end": 1708,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1682,
									"end": 1686,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1678,
									"end": 1709,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1668,
									"end": 1709,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1668,
									"end": 1709,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1759,
									"end": 1840,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 1759,
									"end": 1840,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1777,
									"end": 1779,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1770,
									"end": 1775,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1767,
									"end": 1780,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1759,
									"end": 1840,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1759,
									"end": 1840,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1759,
									"end": 1840,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1836,
									"end": 1837,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 1838,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1822,
									"end": 1838,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1803,
									"end": 1804,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1792,
									"end": 1805,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1759,
									"end": 1840,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 1759,
									"end": 1840,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1759,
									"end": 1840,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1759,
									"end": 1840,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1429,
									"end": 1850,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 1429,
									"end": 1850,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1338,
									"end": 1856,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1338,
									"end": 1856,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1338,
									"end": 1856,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1338,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2032,
									"end": 3377,
									"name": "tag",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 2032,
									"end": 3377,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2152,
									"end": 2162,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2152,
									"end": 2162,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2174,
									"end": 2204,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2174,
									"end": 2204,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2171,
									"end": 2227,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2171,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 2171,
									"end": 2227,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2207,
									"end": 2225,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 2207,
									"end": 2225,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 2207,
									"end": 2225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2207,
									"end": 2225,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 2207,
									"end": 2225,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2236,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 2326,
									"end": 2332,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2286,
									"end": 2324,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2312,
									"end": 2323,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 2286,
									"end": 2324,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 2286,
									"end": 2324,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2286,
									"end": 2324,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 2286,
									"end": 2324,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2280,
									"end": 2284,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2236,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 2236,
									"end": 2333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2236,
									"end": 2333,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 2236,
									"end": 2333,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2388,
									"end": 2392,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2388,
									"end": 2392,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2445,
									"end": 2447,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2434,
									"end": 2448,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2434,
									"end": 2448,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2462,
									"end": 2463,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2457,
									"end": 3120,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2457,
									"end": 3120,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 2457,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 2457,
									"end": 3120,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3164,
									"end": 3165,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3181,
									"end": 3187,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3178,
									"end": 3267,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3178,
									"end": 3267,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 3178,
									"end": 3267,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3233,
									"end": 3252,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3233,
									"end": 3252,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3233,
									"end": 3252,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3227,
									"end": 3253,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3178,
									"end": 3267,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 3178,
									"end": 3267,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1989,
									"end": 1990,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 1985,
									"end": 1996,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1985,
									"end": 1996,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1985,
									"end": 1996,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1981,
									"end": 2005,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1977,
									"end": 2006,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 1967,
									"end": 2007,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2013,
									"end": 2014,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2009,
									"end": 2020,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2009,
									"end": 2020,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2009,
									"end": 2020,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1964,
									"end": 2021,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 3280,
									"end": 3361,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3280,
									"end": 3361,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2427,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 2427,
									"end": 3371,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2457,
									"end": 3120,
									"name": "tag",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 2457,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1285,
									"end": 1286,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1278,
									"end": 1292,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1278,
									"end": 1292,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1278,
									"end": 1292,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1322,
									"end": 1326,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1309,
									"end": 1327,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1309,
									"end": 1327,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2493,
									"end": 2513,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2493,
									"end": 2513,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2493,
									"end": 2513,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2611,
									"end": 2847,
									"name": "tag",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 2611,
									"end": 2847,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2625,
									"end": 2632,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2622,
									"end": 2623,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2619,
									"end": 2633,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2611,
									"end": 2847,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2611,
									"end": 2847,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 2611,
									"end": 2847,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2714,
									"end": 2733,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 2714,
									"end": 2733,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2714,
									"end": 2733,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2708,
									"end": 2734,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2693,
									"end": 2735,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2693,
									"end": 2735,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2806,
									"end": 2833,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 2806,
									"end": 2833,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2806,
									"end": 2833,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2806,
									"end": 2833,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 2774,
									"end": 2775,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2762,
									"end": 2776,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2762,
									"end": 2776,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2762,
									"end": 2776,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2762,
									"end": 2776,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2641,
									"end": 2660,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2641,
									"end": 2660,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2611,
									"end": 2847,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 2611,
									"end": 2847,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2611,
									"end": 2847,
									"name": "tag",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 2611,
									"end": 2847,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2615,
									"end": 2618,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2875,
									"end": 2881,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2866,
									"end": 2873,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2863,
									"end": 2882,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2860,
									"end": 3061,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2860,
									"end": 3061,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 2860,
									"end": 3061,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2936,
									"end": 2955,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 2936,
									"end": 2955,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2936,
									"end": 2955,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2930,
									"end": 2956,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3019,
									"end": 3020,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 3015,
									"end": 3029,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 3015,
									"end": 3029,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3015,
									"end": 3029,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 3031,
									"end": 3034,
									"name": "PUSH",
									"source": 15,
									"value": "F8"
								},
								{
									"begin": 3011,
									"end": 3035,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3007,
									"end": 3044,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 3003,
									"end": 3045,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 2988,
									"end": 3046,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2973,
									"end": 3047,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2973,
									"end": 3047,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2860,
									"end": 3061,
									"name": "tag",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 2860,
									"end": 3061,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2860,
									"end": 3061,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2860,
									"end": 3061,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3107,
									"end": 3108,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3098,
									"end": 3104,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3095,
									"end": 3096,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3091,
									"end": 3105,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 3087,
									"end": 3109,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3081,
									"end": 3085,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3074,
									"end": 3110,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2427,
									"end": 3371,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 2427,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2427,
									"end": 3371,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2427,
									"end": 3371,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2427,
									"end": 3371,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2427,
									"end": 3371,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2032,
									"end": 3377,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2032,
									"end": 3377,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2032,
									"end": 3377,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2032,
									"end": 3377,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 3377,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "PUSH",
									"source": 14,
									"value": "A0"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 2351,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3b4d570f88033d3c446a12bfa7e5b0347b7e6630e0dea27bfaf00890c6a4db864736f6c63430008190033",
									".code": [
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "7BA19512"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "B88D4FDE"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "E84B3AD0"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "E84B3AD0"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "E985E9C5"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "EB2E578B"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "F68016B7"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "B88D4FDE"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "C87B56DD"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "DDCA3F43"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "9CC8C69B"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "9CC8C69B"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "A3E56FA8"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "A630FD97"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "7BA19512"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "94985DDD"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "95D89B41"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "3FF6BC4E"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "57970E93"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "57970E93"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "5ED5B5AF"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "3FF6BC4E"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "42842E0E"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "4EB7E95F"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "6FDDE03"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "81812FC"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "95EA7B3"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "2D72225B"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 2351,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1452,
											"end": 1454,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 565,
											"end": 587,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 565,
											"end": 587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 565,
											"end": 587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1499,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1290,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1290,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1290,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1499,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1290,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1499,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1290,
											"end": 1499,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2442,
											"end": 2467,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2442,
											"end": 2467,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2442,
											"end": 2467,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2430,
											"end": 2432,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2473,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 528,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 498,
											"end": 528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 498,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 498,
											"end": 528,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 498,
											"end": 528,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 498,
											"end": 528,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 498,
											"end": 528,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 277,
											"end": 301,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 277,
											"end": 301,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 277,
											"end": 301,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 277,
											"end": 301,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 277,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 277,
											"end": 301,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 277,
											"end": 301,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 277,
											"end": 301,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 277,
											"end": 301,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 598,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "tag",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 598,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1197,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 1105,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1105,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 1105,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 1105,
											"end": 1197,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1105,
											"end": 1197,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1105,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 1105,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1105,
											"end": 1197,
											"name": "tag",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 1105,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1105,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 1105,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9783,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9576,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9576,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9576,
											"end": 9783,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9783,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9576,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9576,
											"end": 9783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9783,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9576,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9576,
											"end": 9783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1203,
											"end": 1284,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 1203,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1203,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 1203,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 1203,
											"end": 1284,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1203,
											"end": 1284,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 1203,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1203,
											"end": 1284,
											"name": "tag",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 1203,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1203,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 1203,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 234,
											"end": 271,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 234,
											"end": 271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 234,
											"end": 271,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 234,
											"end": 271,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 234,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 234,
											"end": 271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 234,
											"end": 271,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 234,
											"end": 271,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 234,
											"end": 271,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 2229,
											"end": 2344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 2229,
											"end": 2344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "tag",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 2229,
											"end": 2344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 414,
											"end": 432,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 414,
											"end": 432,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 414,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 414,
											"end": 432,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 414,
											"end": 432,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 414,
											"end": 432,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 414,
											"end": 432,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 534,
											"end": 559,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 534,
											"end": 559,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 534,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 534,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 534,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 467,
											"end": 492,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 467,
											"end": 492,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 467,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 467,
											"end": 492,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 467,
											"end": 492,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 467,
											"end": 492,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 467,
											"end": 492,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 438,
											"end": 461,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 438,
											"end": 461,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 438,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 438,
											"end": 461,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 438,
											"end": 461,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 438,
											"end": 461,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 438,
											"end": 461,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64283D7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7728,
											"end": 7743,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7728,
											"end": 7743,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7728,
											"end": 7743,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7710,
											"end": 7744,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7760,
											"end": 7778,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7760,
											"end": 7778,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7760,
											"end": 7778,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7823,
											"end": 7838,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7823,
											"end": 7838,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7796,
											"end": 7839,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7645,
											"end": 7663,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7645,
											"end": 7663,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7470,
											"end": 7845,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 565,
											"end": 587,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "tag",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 565,
											"end": 587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "tag",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 565,
											"end": 587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "tag",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "tag",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 565,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1499,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1290,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1417,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 1407,
											"end": 1417,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1397,
											"end": 1401,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1337,
											"end": 1354,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1354,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1417,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1378,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "tag",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 1374,
											"end": 1403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "tag",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 1374,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1417,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1417,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1366,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 1366,
											"end": 1444,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1366,
											"end": 1444,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1444,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1366,
											"end": 1444,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1366,
											"end": 1444,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8241,
											"end": 8243,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1444,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1366,
											"end": 1444,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1366,
											"end": 1444,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8223,
											"end": 8244,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8280,
											"end": 8282,
											"name": "PUSH",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8253,
											"end": 8283,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656E6F756768204C494E4B20746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8299,
											"end": 8317,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8299,
											"end": 8317,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8299,
											"end": 8317,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8292,
											"end": 8344,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8361,
											"end": 8379,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8361,
											"end": 8379,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1366,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 8039,
											"end": 8385,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1366,
											"end": 1444,
											"name": "tag",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 1366,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1461,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 342,
											"end": 408,
											"name": "PUSH",
											"source": 14,
											"value": "1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF"
										},
										{
											"begin": 1479,
											"end": 1486,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1486,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1488,
											"end": 1491,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1488,
											"end": 1491,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1461,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 1461,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1461,
											"end": 1492,
											"name": "tag",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 1461,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1454,
											"end": 1492,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1454,
											"end": 1492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1499,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 598,
											"end": 640,
											"name": "tag",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "tag",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 598,
											"end": 640,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 598,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 598,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22718AD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1197,
											"name": "tag",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 1105,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1169,
											"end": 1180,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 1169,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 1183,
											"end": 1190,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1169,
											"end": 1180,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1169,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 1169,
											"end": 1190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9576,
											"end": 9783,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9576,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9678,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 9668,
											"end": 9696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 9660,
											"end": 9732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9660,
											"end": 9732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9660,
											"end": 9732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10764,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9660,
											"end": 9732,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9660,
											"end": 9732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10744,
											"end": 10765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10801,
											"end": 10803,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 10781,
											"end": 10799,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10781,
											"end": 10799,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10781,
											"end": 10799,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10774,
											"end": 10804,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10840,
											"end": 10873,
											"name": "PUSH",
											"source": 15,
											"value": "4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
										},
										{
											"begin": 10820,
											"end": 10838,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 10820,
											"end": 10838,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10820,
											"end": 10838,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10813,
											"end": 10874,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9660,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10560,
											"end": 10915,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9660,
											"end": 9732,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 9660,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 9756,
											"end": 9765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 9738,
											"end": 9778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1203,
											"end": 1284,
											"name": "tag",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 1203,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "PUSH",
											"source": 14,
											"value": "BB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD"
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 1271,
											"end": 1276,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 1259,
											"end": 1277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "tag",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2285,
											"end": 2300,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2319,
											"end": 2328,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "tag",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 2312,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "tag",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 2312,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "tag",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "tag",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "tag",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "tag",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 534,
											"end": 559,
											"name": "tag",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 534,
											"end": 559,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 534,
											"end": 559,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 534,
											"end": 559,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 534,
											"end": 559,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 534,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 534,
											"end": 559,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 534,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 534,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2467,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2442,
											"end": 2467,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2442,
											"end": 2467,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2296,
											"end": 2473,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7732,
											"end": 8752,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 7732,
											"end": 8752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7809,
											"end": 7826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7838,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7834,
											"end": 7854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7854,
											"name": "PUSH",
											"source": 0,
											"value": "4000AEA0"
										},
										{
											"begin": 7855,
											"end": 7869,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7871,
											"end": 7875,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7888,
											"end": 7896,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6589,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11583,
											"end": 11608,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11583,
											"end": 11608,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11583,
											"end": 11608,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11639,
											"end": 11641,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11617,
											"end": 11651,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11571,
											"end": 11573,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11409,
											"end": 11657,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7877,
											"end": 7920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 7834,
											"end": 7921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 7834,
											"end": 7921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 7834,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8152,
											"end": 8167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8235,
											"end": 8251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8235,
											"end": 8251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8235,
											"end": 8251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8235,
											"end": 8251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8235,
											"end": 8251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8235,
											"end": 8251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8235,
											"end": 8251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8235,
											"end": 8251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8235,
											"end": 8251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8235,
											"end": 8251,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8235,
											"end": 8251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15112,
											"end": 15130,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15112,
											"end": 15130,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15112,
											"end": 15130,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15105,
											"end": 15139,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15105,
											"end": 15139,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15105,
											"end": 15139,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8228,
											"end": 8232,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15148,
											"end": 15208,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15217,
											"end": 15251,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15217,
											"end": 15251,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15217,
											"end": 15251,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15043,
											"end": 15062,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 15043,
											"end": 15062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15043,
											"end": 15062,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15043,
											"end": 15062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8682,
											"end": 8698,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8698,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8698,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 8682,
											"end": 8702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8701,
											"end": 8702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8682,
											"end": 8702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 8682,
											"end": 8702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8702,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 8682,
											"end": 8702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8702,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8702,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8663,
											"end": 8702,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12865,
											"end": 12884,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 12865,
											"end": 12884,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12865,
											"end": 12884,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12900,
											"end": 12912,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12900,
											"end": 12912,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12900,
											"end": 12912,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12893,
											"end": 12921,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12893,
											"end": 12921,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12893,
											"end": 12921,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12937,
											"end": 12949,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 12937,
											"end": 12949,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12937,
											"end": 12949,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12937,
											"end": 12949,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1577,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1577,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8747,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 8715,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8747,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 8752,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7732,
											"end": 8752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2223,
											"name": "tag",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 1505,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1621,
											"end": 1636,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1639,
											"end": 1654,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 1639,
											"end": 1654,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1657,
											"end": 1658,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1639,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 1639,
											"end": 1658,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1639,
											"end": 1658,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1639,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 1639,
											"end": 1658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1639,
											"end": 1658,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 1639,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1621,
											"end": 1658,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1621,
											"end": 1658,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1668,
											"end": 1696,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1696,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 1699,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "tag",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1790,
											"end": 1791,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1726,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1726,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1773,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1773,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1745,
											"end": 1792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1745,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1827,
											"end": 1837,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1813,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1814,
											"end": 1815,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 1802,
											"end": 1816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1816,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1838,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1838,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1838,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1838,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1802,
											"end": 1838,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 2055,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 1857,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1878,
											"end": 1884,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 1878,
											"end": 1891,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1857,
											"end": 2055,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1857,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 1857,
											"end": 2055,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 1992,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 1986,
											"end": 1999,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1986,
											"end": 1999,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1986,
											"end": 1999,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1986,
											"end": 1999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 1974,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 1963,
											"end": 1977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12865,
											"end": 12884,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12865,
											"end": 12884,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12865,
											"end": 12884,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12909,
											"end": 12911,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12900,
											"end": 12912,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12900,
											"end": 12912,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12893,
											"end": 12921,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12946,
											"end": 12948,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12937,
											"end": 12949,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12937,
											"end": 12949,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12708,
											"end": 12955,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1981,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1982,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1982,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1982,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1982,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1982,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1982,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 1983,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1983,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 1928,
											"end": 1999,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 1999,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 1928,
											"end": 1999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 1999,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 1928,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1912,
											"end": 1999,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1912,
											"end": 1999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2037,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 2038,
											"end": 2043,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 2031,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2025,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 2013,
											"end": 2028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1893,
											"end": 1896,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1893,
											"end": 1896,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1857,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 1857,
											"end": 2055,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1857,
											"end": 2055,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 1857,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2106,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2106,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 2073,
											"end": 2106,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2106,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2106,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2106,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 2073,
											"end": 2106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2106,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 2073,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2106,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2116,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 2122,
											"end": 2132,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2134,
											"end": 2141,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2116,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 2116,
											"end": 2142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2116,
											"end": 2142,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 2116,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 2152,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "PUSH",
											"source": 14,
											"value": "65F952DD632608F6D1DB9E9311E0972E973F6E783BA47C13460083C575BF07F3"
										},
										{
											"begin": 2194,
											"end": 2201,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 2184,
											"end": 2216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2216,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 1611,
											"end": 2223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1611,
											"end": 2223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1611,
											"end": 2223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 2223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 2223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1505,
											"end": 2223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B611743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "381"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 4,
											"value": "381"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2467,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2442,
											"end": 2467,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2442,
											"end": 2467,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2296,
											"end": 2473,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14753,
											"end": 14785,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14753,
											"end": 14785,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14735,
											"end": 14786,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14802,
											"end": 14820,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14802,
											"end": 14820,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14802,
											"end": 14820,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14795,
											"end": 14829,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14795,
											"end": 14829,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14795,
											"end": 14829,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14708,
											"end": 14726,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14708,
											"end": 14726,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 14561,
											"end": 14835,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39E35637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "325"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "428"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "427"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "428"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "209"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "427"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "428"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "430"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "431"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "430"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "431"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "430"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "434"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "435"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "434"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "431"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "435"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "436"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "151"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "436"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "438"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "438"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "439"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "440"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "439"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "440"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "441"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "430"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "441"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 592,
											"end": 892,
											"name": "tag",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 592,
											"end": 892,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 645,
											"end": 648,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 677,
											"end": 689,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 705,
											"end": 708,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 698,
											"end": 717,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 759,
											"end": 763,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 757,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 748,
											"end": 764,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 741,
											"end": 745,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 732,
											"end": 746,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 726,
											"end": 773,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 818,
											"end": 819,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 815,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 797,
											"end": 800,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 793,
											"end": 809,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 789,
											"end": 816,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 782,
											"end": 820,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 881,
											"end": 885,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 857,
											"end": 863,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 853,
											"end": 868,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 849,
											"end": 878,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 840,
											"end": 879,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 836,
											"end": 886,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 592,
											"end": 892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1046,
											"end": 1048,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1044,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1028,
											"end": 1049,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1009,
											"end": 1013,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 1066,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1242,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1224,
											"end": 1231,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1220,
											"end": 1243,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1251,
											"end": 1263,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "tag",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1284,
											"end": 1307,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1284,
											"end": 1307,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "tag",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1594,
											"end": 1614,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1594,
											"end": 1614,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1643,
											"end": 1674,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1643,
											"end": 1674,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1633,
											"end": 1675,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1633,
											"end": 1675,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1679,
											"end": 1691,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "tag",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1704,
											"end": 1958,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 1704,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1772,
											"end": 1778,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1786,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1812,
											"end": 1819,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1808,
											"end": 1831,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1804,
											"end": 1836,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1839,
											"end": 1851,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 1891,
											"end": 1900,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 1872,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "tag",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 1901,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 1948,
											"end": 1950,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1920,
											"end": 1952,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1920,
											"end": 1952,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2040,
											"end": 2046,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2054,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2056,
											"end": 2062,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2111,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2097,
											"end": 2106,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2088,
											"end": 2095,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2084,
											"end": 2107,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2080,
											"end": 2112,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2125,
											"end": 2126,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2123,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2115,
											"end": 2127,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "tag",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 2167,
											"end": 2176,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 2148,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "tag",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2138,
											"end": 2177,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2138,
											"end": 2177,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 2230,
											"end": 2232,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2228,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2215,
											"end": 2233,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 2196,
											"end": 2234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "tag",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2186,
											"end": 2234,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2186,
											"end": 2234,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2281,
											"end": 2283,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2279,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2266,
											"end": 2284,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2253,
											"end": 2285,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 2291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2908,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2660,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2791,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2777,
											"end": 2786,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2768,
											"end": 2775,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2764,
											"end": 2787,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2760,
											"end": 2792,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2757,
											"end": 2809,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2757,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 2757,
											"end": 2809,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2795,
											"end": 2807,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2757,
											"end": 2809,
											"name": "tag",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 2757,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2828,
											"end": 2851,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2828,
											"end": 2851,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2828,
											"end": 2851,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2898,
											"end": 2900,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2870,
											"end": 2902,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2870,
											"end": 2902,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2660,
											"end": 2908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2913,
											"end": 3099,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 2913,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2972,
											"end": 2978,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3027,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3022,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3004,
											"end": 3011,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3000,
											"end": 3023,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3028,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2993,
											"end": 3045,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2993,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 2993,
											"end": 3045,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3041,
											"end": 3042,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3039,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3031,
											"end": 3043,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2993,
											"end": 3045,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 2993,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 3083,
											"end": 3092,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 3064,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3104,
											"end": 3231,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 3104,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3165,
											"end": 3175,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 3160,
											"end": 3163,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 3156,
											"end": 3176,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 3153,
											"end": 3154,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3177,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3196,
											"end": 3200,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 3193,
											"end": 3194,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3186,
											"end": 3201,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3220,
											"end": 3224,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3217,
											"end": 3218,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3236,
											"end": 3868,
											"name": "tag",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 3236,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3301,
											"end": 3306,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3364,
											"end": 3370,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3361,
											"end": 3375,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3358,
											"end": 3398,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3358,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 3358,
											"end": 3398,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 3378,
											"end": 3396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "tag",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3453,
											"end": 3455,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3447,
											"end": 3456,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3421,
											"end": 3423,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3527,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3503,
											"end": 3527,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3503,
											"end": 3527,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3529,
											"end": 3531,
											"name": "PUSH",
											"source": 15,
											"value": "3F"
										},
										{
											"begin": 3499,
											"end": 3532,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3483,
											"end": 3538,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3483,
											"end": 3538,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3483,
											"end": 3538,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3571,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3571,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3571,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3573,
											"end": 3595,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3573,
											"end": 3595,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3573,
											"end": 3595,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3550,
											"end": 3596,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3547,
											"end": 3619,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3547,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 3547,
											"end": 3619,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 3599,
											"end": 3617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3639,
											"end": 3649,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3628,
											"end": 3650,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3659,
											"end": 3674,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3659,
											"end": 3674,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3690,
											"end": 3696,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3738,
											"end": 3741,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3729,
											"end": 3735,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3724,
											"end": 3727,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3720,
											"end": 3736,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3717,
											"end": 3742,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3714,
											"end": 3759,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3714,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 3714,
											"end": 3759,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3753,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3745,
											"end": 3757,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3714,
											"end": 3759,
											"name": "tag",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 3714,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3805,
											"end": 3811,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3800,
											"end": 3803,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3791,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3781,
											"end": 3798,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3768,
											"end": 3812,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 3861,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3850,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3836,
											"end": 3842,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 3858,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3821,
											"end": 3862,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3821,
											"end": 3862,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3821,
											"end": 3862,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3821,
											"end": 3862,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3236,
											"end": 3868,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3236,
											"end": 3868,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3236,
											"end": 3868,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3236,
											"end": 3868,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3236,
											"end": 3868,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3236,
											"end": 3868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3873,
											"end": 4324,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 3873,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3942,
											"end": 3948,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 3997,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 3992,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3974,
											"end": 3981,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3970,
											"end": 3993,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3966,
											"end": 3998,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3963,
											"end": 4015,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3963,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 3963,
											"end": 4015,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4011,
											"end": 4012,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4009,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4013,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3963,
											"end": 4015,
											"name": "tag",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 3963,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4051,
											"end": 4060,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4073,
											"end": 4103,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4070,
											"end": 4120,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4070,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 4070,
											"end": 4120,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4116,
											"end": 4117,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4114,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4106,
											"end": 4118,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4070,
											"end": 4120,
											"name": "tag",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 4070,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4161,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4161,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4192,
											"end": 4196,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4184,
											"end": 4197,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4184,
											"end": 4197,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4180,
											"end": 4207,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4170,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 4170,
											"end": 4225,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4221,
											"end": 4222,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4211,
											"end": 4223,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4170,
											"end": 4225,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 4170,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4244,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 4310,
											"end": 4317,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4305,
											"end": 4307,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4292,
											"end": 4308,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4287,
											"end": 4289,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4283,
											"end": 4285,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4279,
											"end": 4290,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4244,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 4244,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4582,
											"end": 4700,
											"name": "tag",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 4582,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4668,
											"end": 4673,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4661,
											"end": 4674,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4654,
											"end": 4675,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 4652,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4644,
											"end": 4676,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4634,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 4634,
											"end": 4694,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4690,
											"end": 4691,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4688,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4680,
											"end": 4692,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4705,
											"end": 5020,
											"name": "tag",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 4705,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4784,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4831,
											"end": 4833,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4810,
											"end": 4817,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4802,
											"end": 4834,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4851,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 4799,
											"end": 4851,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4847,
											"end": 4848,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4844,
											"end": 4845,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4837,
											"end": 4849,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4851,
											"name": "tag",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 4799,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4870,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 4889,
											"end": 4898,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4870,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 4870,
											"end": 4899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4870,
											"end": 4899,
											"name": "tag",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 4870,
											"end": 4899,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4860,
											"end": 4899,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4860,
											"end": 4899,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4938,
											"end": 4947,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4934,
											"end": 4952,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4921,
											"end": 4953,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4962,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 4984,
											"end": 4989,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4962,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 4962,
											"end": 4990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4962,
											"end": 4990,
											"name": "tag",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 4962,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5009,
											"end": 5014,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4999,
											"end": 5014,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4999,
											"end": 5014,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4999,
											"end": 5014,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4705,
											"end": 5020,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4705,
											"end": 5020,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4705,
											"end": 5020,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4705,
											"end": 5020,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4705,
											"end": 5020,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4705,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5249,
											"end": 5858,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 5249,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5335,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5364,
											"end": 5369,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5358,
											"end": 5370,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5391,
											"end": 5397,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5386,
											"end": 5389,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5379,
											"end": 5398,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5417,
											"end": 5421,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5446,
											"end": 5450,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5441,
											"end": 5444,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5437,
											"end": 5451,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5430,
											"end": 5451,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5430,
											"end": 5451,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5504,
											"end": 5508,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5494,
											"end": 5500,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5491,
											"end": 5492,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 5487,
											"end": 5501,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5485,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5476,
											"end": 5502,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5472,
											"end": 5509,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5543,
											"end": 5547,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5536,
											"end": 5541,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5548,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5576,
											"end": 5832,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 5576,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5590,
											"end": 5596,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5597,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5576,
											"end": 5832,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5576,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 5576,
											"end": 5832,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5677,
											"end": 5679,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5673,
											"end": 5680,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5659,
											"end": 5663,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5655,
											"end": 5671,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5651,
											"end": 5681,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5646,
											"end": 5649,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5639,
											"end": 5682,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5703,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 5747,
											"end": 5751,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5738,
											"end": 5744,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5732,
											"end": 5745,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5703,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 5703,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5703,
											"end": 5752,
											"name": "tag",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 5703,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5810,
											"end": 5822,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 5810,
											"end": 5822,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5810,
											"end": 5822,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5810,
											"end": 5822,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 5695,
											"end": 5752,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5775,
											"end": 5790,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5775,
											"end": 5790,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5775,
											"end": 5790,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5775,
											"end": 5790,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5612,
											"end": 5613,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5605,
											"end": 5614,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5576,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 5576,
											"end": 5832,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5576,
											"end": 5832,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 5576,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5848,
											"end": 5852,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5848,
											"end": 5852,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 5249,
											"end": 5858,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5249,
											"end": 5858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5863,
											"end": 6143,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 5863,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6062,
											"end": 6064,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6051,
											"end": 6060,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6044,
											"end": 6065,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6025,
											"end": 6029,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 6133,
											"end": 6135,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6122,
											"end": 6131,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6110,
											"end": 6116,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6082,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 6082,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6148,
											"end": 6815,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 6148,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6243,
											"end": 6249,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6251,
											"end": 6257,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6259,
											"end": 6265,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6267,
											"end": 6273,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6320,
											"end": 6323,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6308,
											"end": 6317,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6299,
											"end": 6306,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6295,
											"end": 6318,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6291,
											"end": 6324,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6288,
											"end": 6341,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6288,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 6288,
											"end": 6341,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6339,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6288,
											"end": 6341,
											"name": "tag",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 6288,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6360,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 6379,
											"end": 6388,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6360,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 6360,
											"end": 6389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6360,
											"end": 6389,
											"name": "tag",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 6360,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6350,
											"end": 6389,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6350,
											"end": 6389,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6408,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 6442,
											"end": 6444,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6431,
											"end": 6440,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6427,
											"end": 6445,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6408,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 6408,
											"end": 6446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6408,
											"end": 6446,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 6408,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6398,
											"end": 6446,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6398,
											"end": 6446,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6493,
											"end": 6495,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6482,
											"end": 6491,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6478,
											"end": 6496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6497,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6455,
											"end": 6497,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6455,
											"end": 6497,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6548,
											"end": 6550,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6537,
											"end": 6546,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6533,
											"end": 6551,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6520,
											"end": 6552,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6575,
											"end": 6593,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6567,
											"end": 6573,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6564,
											"end": 6594,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6607,
											"end": 6608,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6597,
											"end": 6609,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6630,
											"end": 6652,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6630,
											"end": 6652,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6683,
											"end": 6687,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 6675,
											"end": 6688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6675,
											"end": 6688,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6671,
											"end": 6698,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 6661,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 6661,
											"end": 6716,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6712,
											"end": 6713,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6709,
											"end": 6710,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6702,
											"end": 6714,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6661,
											"end": 6716,
											"name": "tag",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 6661,
											"end": 6716,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6735,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 6801,
											"end": 6808,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6796,
											"end": 6798,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6778,
											"end": 6780,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6774,
											"end": 6776,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6770,
											"end": 6781,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6735,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 6735,
											"end": 6809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6735,
											"end": 6809,
											"name": "tag",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 6735,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6725,
											"end": 6809,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6725,
											"end": 6809,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6725,
											"end": 6809,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6148,
											"end": 6815,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6148,
											"end": 6815,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 6148,
											"end": 6815,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6148,
											"end": 6815,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 6148,
											"end": 6815,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6148,
											"end": 6815,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6148,
											"end": 6815,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6148,
											"end": 6815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6820,
											"end": 7080,
											"name": "tag",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 6820,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 6902,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6949,
											"end": 6951,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6937,
											"end": 6946,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6928,
											"end": 6935,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6924,
											"end": 6947,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6920,
											"end": 6952,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6917,
											"end": 6969,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6917,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 6917,
											"end": 6969,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6965,
											"end": 6966,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6962,
											"end": 6963,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6955,
											"end": 6967,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6917,
											"end": 6969,
											"name": "tag",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 6917,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6988,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 7007,
											"end": 7016,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6988,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 6988,
											"end": 7017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6988,
											"end": 7017,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 6988,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7036,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 7070,
											"end": 7072,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7059,
											"end": 7068,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7036,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 7036,
											"end": 7074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7036,
											"end": 7074,
											"name": "tag",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 7036,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7026,
											"end": 7074,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7026,
											"end": 7074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6820,
											"end": 7080,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6820,
											"end": 7080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6820,
											"end": 7080,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6820,
											"end": 7080,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6820,
											"end": 7080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6820,
											"end": 7080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7085,
											"end": 7465,
											"name": "tag",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 7085,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7164,
											"end": 7165,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7160,
											"end": 7172,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7160,
											"end": 7172,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7160,
											"end": 7172,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 7160,
											"end": 7172,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7207,
											"end": 7219,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7207,
											"end": 7219,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7207,
											"end": 7219,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7228,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 7228,
											"end": 7289,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7286,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 7274,
											"end": 7280,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7270,
											"end": 7287,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7228,
											"end": 7289,
											"name": "tag",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 7228,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7335,
											"end": 7337,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7327,
											"end": 7333,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7324,
											"end": 7338,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7304,
											"end": 7322,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7301,
											"end": 7339,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7298,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 7298,
											"end": 7459,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7381,
											"end": 7391,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 7376,
											"end": 7379,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 7372,
											"end": 7392,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 7369,
											"end": 7370,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7393,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7416,
											"end": 7420,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 7413,
											"end": 7414,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7406,
											"end": 7421,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7444,
											"end": 7448,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7441,
											"end": 7442,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7434,
											"end": 7449,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7298,
											"end": 7459,
											"name": "tag",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 7298,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7298,
											"end": 7459,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7085,
											"end": 7465,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7085,
											"end": 7465,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7085,
											"end": 7465,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7085,
											"end": 7465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7850,
											"end": 8034,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 7850,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7920,
											"end": 7926,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7973,
											"end": 7975,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7952,
											"end": 7959,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7948,
											"end": 7971,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7944,
											"end": 7976,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7941,
											"end": 7993,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7941,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 7941,
											"end": 7993,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7989,
											"end": 7990,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7987,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7979,
											"end": 7991,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7941,
											"end": 7993,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 7941,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8012,
											"end": 8028,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8012,
											"end": 8028,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7850,
											"end": 8034,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7850,
											"end": 8034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8516,
											"end": 9034,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 8516,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8618,
											"end": 8620,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8613,
											"end": 8616,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8610,
											"end": 8621,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8607,
											"end": 9028,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8607,
											"end": 9028,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 8607,
											"end": 9028,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8654,
											"end": 8659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8651,
											"end": 8652,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8644,
											"end": 8660,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8698,
											"end": 8702,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8695,
											"end": 8696,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 8768,
											"end": 8770,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8756,
											"end": 8766,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8752,
											"end": 8771,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8749,
											"end": 8750,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 8745,
											"end": 8772,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 8739,
											"end": 8743,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8735,
											"end": 8773,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8804,
											"end": 8808,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8792,
											"end": 8802,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8789,
											"end": 8809,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 8786,
											"end": 8833,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8786,
											"end": 8833,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 8786,
											"end": 8833,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8827,
											"end": 8831,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8786,
											"end": 8833,
											"name": "tag",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 8786,
											"end": 8833,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8882,
											"end": 8884,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8877,
											"end": 8880,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8873,
											"end": 8885,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8870,
											"end": 8871,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 8866,
											"end": 8886,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8856,
											"end": 8887,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8846,
											"end": 8887,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8846,
											"end": 8887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9018,
											"name": "tag",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 8937,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8955,
											"end": 8957,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8948,
											"end": 8953,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8945,
											"end": 8958,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9018,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 8937,
											"end": 9018,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9014,
											"end": 9015,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9000,
											"end": 9016,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9000,
											"end": 9016,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 8981,
											"end": 8982,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8970,
											"end": 8983,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 8937,
											"end": 9018,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9210,
											"end": 10555,
											"name": "tag",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 9210,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9336,
											"end": 9339,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9330,
											"end": 9340,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9355,
											"end": 9361,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9352,
											"end": 9382,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9349,
											"end": 9405,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9349,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 9349,
											"end": 9405,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9385,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 9385,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 9385,
											"end": 9403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9385,
											"end": 9403,
											"name": "tag",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 9385,
											"end": 9403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9414,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 9504,
											"end": 9510,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9464,
											"end": 9502,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 9496,
											"end": 9500,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 9464,
											"end": 9502,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 9464,
											"end": 9502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9464,
											"end": 9502,
											"name": "tag",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 9464,
											"end": 9502,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9458,
											"end": 9462,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9414,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 9414,
											"end": 9511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9414,
											"end": 9511,
											"name": "tag",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 9414,
											"end": 9511,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9566,
											"end": 9570,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9566,
											"end": 9570,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9623,
											"end": 9625,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 9612,
											"end": 9626,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9612,
											"end": 9626,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9640,
											"end": 9641,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 9635,
											"end": 10298,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9635,
											"end": 10298,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9635,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 9635,
											"end": 10298,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10342,
											"end": 10343,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10359,
											"end": 10365,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10356,
											"end": 10445,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10356,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 10356,
											"end": 10445,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10405,
											"end": 10431,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10356,
											"end": 10445,
											"name": "tag",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 10356,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9167,
											"end": 9168,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 9163,
											"end": 9174,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9163,
											"end": 9174,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9163,
											"end": 9174,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9159,
											"end": 9183,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 9155,
											"end": 9184,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 9145,
											"end": 9185,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9191,
											"end": 9192,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 9187,
											"end": 9198,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9187,
											"end": 9198,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9187,
											"end": 9198,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9142,
											"end": 9199,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 10458,
											"end": 10539,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10458,
											"end": 10539,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 9605,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 9605,
											"end": 10549,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9635,
											"end": 10298,
											"name": "tag",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 9635,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8463,
											"end": 8464,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8456,
											"end": 8470,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8456,
											"end": 8470,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8456,
											"end": 8470,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8500,
											"end": 8504,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8487,
											"end": 8505,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8487,
											"end": 8505,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9671,
											"end": 9691,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9671,
											"end": 9691,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9671,
											"end": 9691,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9789,
											"end": 10025,
											"name": "tag",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 9789,
											"end": 10025,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9803,
											"end": 9810,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9800,
											"end": 9801,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9797,
											"end": 9811,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9789,
											"end": 10025,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9789,
											"end": 10025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 9789,
											"end": 10025,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9892,
											"end": 9911,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9892,
											"end": 9911,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9892,
											"end": 9911,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 9912,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9871,
											"end": 9913,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9871,
											"end": 9913,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 9984,
											"end": 10011,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9984,
											"end": 10011,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9984,
											"end": 10011,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9984,
											"end": 10011,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9952,
											"end": 9953,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 9940,
											"end": 9954,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9940,
											"end": 9954,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9940,
											"end": 9954,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9940,
											"end": 9954,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9819,
											"end": 9838,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9819,
											"end": 9838,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9789,
											"end": 10025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 9789,
											"end": 10025,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9789,
											"end": 10025,
											"name": "tag",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 9789,
											"end": 10025,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9793,
											"end": 9796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10053,
											"end": 10059,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10044,
											"end": 10051,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10041,
											"end": 10060,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10038,
											"end": 10239,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10038,
											"end": 10239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 10038,
											"end": 10239,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10114,
											"end": 10133,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10114,
											"end": 10133,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10114,
											"end": 10133,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10108,
											"end": 10134,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10197,
											"end": 10198,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 10193,
											"end": 10207,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10193,
											"end": 10207,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10193,
											"end": 10207,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 10209,
											"end": 10212,
											"name": "PUSH",
											"source": 15,
											"value": "F8"
										},
										{
											"begin": 10189,
											"end": 10213,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10185,
											"end": 10222,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 10181,
											"end": 10223,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 10166,
											"end": 10224,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10151,
											"end": 10225,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10151,
											"end": 10225,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 10038,
											"end": 10239,
											"name": "tag",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 10038,
											"end": 10239,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10038,
											"end": 10239,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10038,
											"end": 10239,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10276,
											"end": 10282,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10273,
											"end": 10274,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10269,
											"end": 10283,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 10265,
											"end": 10287,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10259,
											"end": 10263,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10252,
											"end": 10288,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 9605,
											"end": 10549,
											"name": "tag",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 9605,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9605,
											"end": 10549,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9605,
											"end": 10549,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9605,
											"end": 10549,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9605,
											"end": 10549,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9210,
											"end": 10555,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9210,
											"end": 10555,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9210,
											"end": 10555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10920,
											"end": 11132,
											"name": "tag",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 10920,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10962,
											"end": 10965,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11000,
											"end": 11005,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10994,
											"end": 11006,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11044,
											"end": 11050,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11037,
											"end": 11041,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11030,
											"end": 11035,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11026,
											"end": 11042,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11021,
											"end": 11024,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11015,
											"end": 11051,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 11106,
											"end": 11107,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11070,
											"end": 11086,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11070,
											"end": 11086,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11095,
											"end": 11108,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11095,
											"end": 11108,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11095,
											"end": 11108,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11070,
											"end": 11086,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11070,
											"end": 11086,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10920,
											"end": 11132,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10920,
											"end": 11132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11137,
											"end": 11404,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 11137,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11316,
											"end": 11319,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11341,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 11367,
											"end": 11397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 11393,
											"end": 11396,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11385,
											"end": 11391,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11367,
											"end": 11397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 11367,
											"end": 11397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11367,
											"end": 11397,
											"name": "tag",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 11367,
											"end": 11397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11359,
											"end": 11365,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11341,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 11341,
											"end": 11398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11662,
											"end": 12059,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 11662,
											"end": 12059,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11894,
											"end": 11895,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11890,
											"end": 11891,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 11881,
											"end": 11892,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 11877,
											"end": 11896,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11869,
											"end": 11875,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11865,
											"end": 11897,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11854,
											"end": 11863,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11847,
											"end": 11898,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11934,
											"end": 11940,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11929,
											"end": 11931,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11918,
											"end": 11927,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11914,
											"end": 11932,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11907,
											"end": 11941,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11977,
											"end": 11979,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11972,
											"end": 11974,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11961,
											"end": 11970,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11957,
											"end": 11975,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11950,
											"end": 11980,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11828,
											"end": 11832,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11997,
											"end": 12053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 12049,
											"end": 12051,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 12038,
											"end": 12047,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12034,
											"end": 12052,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12026,
											"end": 12032,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11997,
											"end": 12053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 11997,
											"end": 12053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11997,
											"end": 12053,
											"name": "tag",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 11997,
											"end": 12053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11989,
											"end": 12053,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 11662,
											"end": 12059,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11662,
											"end": 12059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12064,
											"end": 12309,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 12064,
											"end": 12309,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12131,
											"end": 12137,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12184,
											"end": 12186,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12172,
											"end": 12181,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12163,
											"end": 12170,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12159,
											"end": 12182,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12155,
											"end": 12187,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12152,
											"end": 12204,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12152,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 12152,
											"end": 12204,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12200,
											"end": 12201,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12197,
											"end": 12198,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12190,
											"end": 12202,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12152,
											"end": 12204,
											"name": "tag",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 12152,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12232,
											"end": 12241,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12226,
											"end": 12242,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12251,
											"end": 12279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 12273,
											"end": 12278,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12251,
											"end": 12279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 12251,
											"end": 12279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12314,
											"end": 12441,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 12314,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12375,
											"end": 12385,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 12370,
											"end": 12373,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 12366,
											"end": 12386,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 12363,
											"end": 12364,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12356,
											"end": 12387,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12406,
											"end": 12410,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 12403,
											"end": 12404,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 12396,
											"end": 12411,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12430,
											"end": 12434,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12427,
											"end": 12428,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12420,
											"end": 12435,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12446,
											"end": 12571,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 12446,
											"end": 12571,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12511,
											"end": 12520,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12511,
											"end": 12520,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12511,
											"end": 12520,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12532,
											"end": 12542,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12532,
											"end": 12542,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12532,
											"end": 12542,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12529,
											"end": 12565,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12529,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 12529,
											"end": 12565,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12545,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 12545,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 12545,
											"end": 12563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12576,
											"end": 12703,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 12576,
											"end": 12703,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12637,
											"end": 12647,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 12632,
											"end": 12635,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 12628,
											"end": 12648,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 12625,
											"end": 12626,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12618,
											"end": 12649,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12668,
											"end": 12672,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 12665,
											"end": 12666,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 12658,
											"end": 12673,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12692,
											"end": 12696,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12689,
											"end": 12690,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12682,
											"end": 12697,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 13092,
											"end": 13301,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 13092,
											"end": 13301,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13124,
											"end": 13125,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13150,
											"end": 13151,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13140,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 13140,
											"end": 13272,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13194,
											"end": 13204,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 13189,
											"end": 13192,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 13185,
											"end": 13205,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 13182,
											"end": 13183,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13175,
											"end": 13206,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13229,
											"end": 13233,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 13226,
											"end": 13227,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 13219,
											"end": 13234,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13257,
											"end": 13261,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13254,
											"end": 13255,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13247,
											"end": 13262,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 13140,
											"end": 13272,
											"name": "tag",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 13140,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13286,
											"end": 13295,
											"name": "MOD",
											"source": 15
										},
										{
											"begin": 13286,
											"end": 13295,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13092,
											"end": 13301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13306,
											"end": 13441,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 13306,
											"end": 13441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13345,
											"end": 13348,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13363,
											"end": 13406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 13363,
											"end": 13406,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13386,
											"end": 13404,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 13386,
											"end": 13404,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 13386,
											"end": 13404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13386,
											"end": 13404,
											"name": "tag",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 13386,
											"end": 13404,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13433,
											"end": 13434,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13422,
											"end": 13435,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13422,
											"end": 13435,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13306,
											"end": 13441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13446,
											"end": 13797,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 13446,
											"end": 13797,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13673,
											"end": 13679,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13662,
											"end": 13671,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13655,
											"end": 13680,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13716,
											"end": 13718,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13711,
											"end": 13713,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13700,
											"end": 13709,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13696,
											"end": 13714,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13689,
											"end": 13719,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13636,
											"end": 13640,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13736,
											"end": 13791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 13787,
											"end": 13789,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13776,
											"end": 13785,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13772,
											"end": 13790,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13764,
											"end": 13770,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13736,
											"end": 13791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 13736,
											"end": 13791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13802,
											"end": 14302,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 13802,
											"end": 14302,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14071,
											"end": 14086,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14071,
											"end": 14086,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14071,
											"end": 14086,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 14053,
											"end": 14087,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14053,
											"end": 14087,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14123,
											"end": 14138,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14123,
											"end": 14138,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 14118,
											"end": 14120,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14103,
											"end": 14121,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14103,
											"end": 14121,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14096,
											"end": 14139,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14170,
											"end": 14172,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 14155,
											"end": 14173,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14155,
											"end": 14173,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14148,
											"end": 14182,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14148,
											"end": 14182,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14148,
											"end": 14182,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14218,
											"end": 14221,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 14213,
											"end": 14215,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 14198,
											"end": 14216,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14198,
											"end": 14216,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14191,
											"end": 14222,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14191,
											"end": 14222,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14191,
											"end": 14222,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13996,
											"end": 14000,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 14000,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14239,
											"end": 14296,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 14239,
											"end": 14296,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14276,
											"end": 14295,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14276,
											"end": 14295,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14268,
											"end": 14274,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14239,
											"end": 14296,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 14239,
											"end": 14296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14239,
											"end": 14296,
											"name": "tag",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 14239,
											"end": 14296,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14231,
											"end": 14296,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 13802,
											"end": 14302,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13802,
											"end": 14302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14307,
											"end": 14556,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 14307,
											"end": 14556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14376,
											"end": 14382,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14429,
											"end": 14431,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14417,
											"end": 14426,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14408,
											"end": 14415,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14404,
											"end": 14427,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14400,
											"end": 14432,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 14397,
											"end": 14449,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14397,
											"end": 14449,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 14397,
											"end": 14449,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14445,
											"end": 14446,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14442,
											"end": 14443,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14435,
											"end": 14447,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 14397,
											"end": 14449,
											"name": "tag",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 14397,
											"end": 14449,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14477,
											"end": 14486,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14471,
											"end": 14487,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 14496,
											"end": 14526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 14520,
											"end": 14525,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14496,
											"end": 14526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 14496,
											"end": 14526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
								"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol",
								"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"NFT Tokens/Tk8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addTrait(string)": "9cc8c69b",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"baseArtwork()": "e84b3ad0",
							"fee()": "ddca3f43",
							"gasLimit()": "f68016b7",
							"getApproved(uint256)": "081812fc",
							"getNFTTraits(uint256)": "a630fd97",
							"isApprovedForAll(address,address)": "e985e9c5",
							"linkToken()": "57970e93",
							"name()": "06fdde03",
							"nftTraits(uint256,uint256)": "5ed5b5af",
							"ownerOf(uint256)": "6352211e",
							"rawFulfillRandomness(bytes32,uint256)": "94985ddd",
							"requestFee()": "eb2e578b",
							"requestRandomTraits()": "3ff6bc4e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseArtwork(string)": "7ba19512",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalNFTsMinted()": "4eb7e95f",
							"traits(uint256)": "2d72225b",
							"transferFrom(address,address,uint256)": "23b872dd",
							"vrfCoordinator()": "a3e56fa8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_linkToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requestFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"traits\",\"type\":\"string[]\"}],\"name\":\"NFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"trait\",\"type\":\"string\"}],\"name\":\"addTrait\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseArtwork\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getNFTTraits\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftTraits\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"randomness\",\"type\":\"uint256\"}],\"name\":\"rawFulfillRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestRandomTraits\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artwork\",\"type\":\"string\"}],\"name\":\"setBaseArtwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalNFTsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"traits\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vrfCoordinator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFT Tokens/Tk8.sol\":\"DynamicArtNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":{\"keccak256\":\"0xff9e7d773545a1a5d73106e72bfb429da79c1cc4d893fb62051df801d2e61469\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68ff9557dad6da8108073dadcbfe5cd1f45106c2f890443eacd3bf8d59955d4e\",\"dweb:/ipfs/QmSKYkP8wNX7MKYrCroFps62gdxEwwrZwsz4RLc6XzNkxi\"]},\"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":{\"keccak256\":\"0x2bf1168e8fe548fa990e0aeaf89ef90680f80aa31eeaf901f485df60de51d51b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79c72d66deaa4b0f251f3f0817f45ebceb71f5b4f94a86ac0e586de99f5af2b6\",\"dweb:/ipfs/QmcHkApHm5CAynjajcCUYppaKJ9sNWGZTEcSs4tUK8B5K5\"]},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"NFT Tokens/Tk8.sol\":{\"keccak256\":\"0x9a56820bdc007c8076a10f138eec69efb2af59f7cdd2269e6532f793e72b3bad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41831c813bbdfffbdc3557a2d08ef2313a17e3874da747e971bb1aadab6b9289\",\"dweb:/ipfs/QmSWD7PWCHWEPgkyYvLYWmCLUedRk91vCYRg2BY3LLWXVG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 79,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_uint256)"
							},
							{
								"astId": 435,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "_name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 437,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 441,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 445,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 449,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 455,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 3064,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "vrfCoordinator",
								"offset": 0,
								"slot": "7",
								"type": "t_address_payable"
							},
							{
								"astId": 3066,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "linkToken",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 3071,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "fee",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 3073,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "gasLimit",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 3075,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "requestFee",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 3077,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "totalNFTsMinted",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 3079,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "baseArtwork",
								"offset": 0,
								"slot": "13",
								"type": "t_string_storage"
							},
							{
								"astId": 3082,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "traits",
								"offset": 0,
								"slot": "14",
								"type": "t_array(t_string_storage)dyn_storage"
							},
							{
								"astId": 3087,
								"contract": "NFT Tokens/Tk8.sol:DynamicArtNFT",
								"label": "nftTraits",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_string_storage)dyn_storage": {
								"base": "t_string_storage",
								"encoding": "dynamic_array",
								"label": "string[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string[])",
								"numberOfBytes": "32",
								"value": "t_array(t_string_storage)dyn_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> NFT Tokens/Tk8.sol:50:9:\n   |\n50 |         bytes32 requestId,\n   |         ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1558,
					"file": "NFT Tokens/Tk8.sol",
					"start": 1541
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
					"exportedSymbols": {
						"LinkTokenInterface": [
							265
						],
						"VRFConsumerBase": [
							120
						],
						"VRFRequestIDBase": [
							170
						]
					},
					"id": 121,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
							"file": "./interfaces/LinkTokenInterface.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 121,
							"sourceUnit": 266,
							"src": "57:45:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol",
							"file": "./VRFRequestIDBase.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 121,
							"sourceUnit": 171,
							"src": "104:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "VRFRequestIDBase",
										"nameLocations": [
											"5397:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "5397:16:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "5397:16:0"
								}
							],
							"canonicalName": "VRFConsumerBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "138:5221:0",
								"text": "****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator, _link) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash), and have told you the minimum LINK\n @dev price for VRF service. Make sure your contract has sufficient LINK, and\n @dev call requestRandomness(keyHash, fee, seed), where seed is the input you\n @dev want to generate randomness from.\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomness method.\n @dev The randomness argument to fulfillRandomness is the actual random value\n @dev generated from your seed.\n @dev The requestId argument is generated from the keyHash and the seed by\n @dev makeRequestId(keyHash, seed). If your contract could have concurrent\n @dev requests open, you can use the requestId to track which seed is\n @dev associated with which randomness. See VRFRequestIDBase.sol for more\n @dev details. (See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.)\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ. (Which is critical to making unpredictable randomness! See the\n @dev next section.)\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the ultimate input to the VRF is mixed with the block hash of the\n @dev block in which the request is made, user-provided seeds have no impact\n @dev on its economic security properties. They are only included for API\n @dev compatability with previous versions of this contract.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request."
							},
							"fullyImplemented": false,
							"id": 120,
							"linearizedBaseContracts": [
								120,
								170
							],
							"name": "VRFConsumerBase",
							"nameLocation": "5378:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "5418:641:0",
										"text": " @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBase expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomness the VRF output"
									},
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomness",
									"nameLocation": "6071:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "6097:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "6089:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 8,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "randomness",
												"nameLocation": "6116:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "6108:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6088:39:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6144:0:0"
									},
									"scope": 120,
									"src": "6062:83:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "6149:388:0",
										"text": " @dev In order to keep backwards compatibility we have kept the user\n seed field around. We remove the use of it because given that the blockhash\n enters later, it overrides whatever randomness the used seed provides.\n Given that it adds no security, and can easily lead to misunderstandings,\n we have removed it from usage and can now provide a simpler API."
									},
									"id": 18,
									"mutability": "constant",
									"name": "USER_SEED_PLACEHOLDER",
									"nameLocation": "6565:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 120,
									"src": "6540:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 16,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6540:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6589:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "7828:924:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 31,
															"name": "vrfCoordinator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "7855:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 32,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "7871:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 35,
																	"name": "_keyHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7888:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 36,
																	"name": "USER_SEED_PLACEHOLDER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "7898:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 33,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7877:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7881:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "7877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7877:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 28,
															"name": "LINK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "7834:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LinkTokenInterface_$265",
																"typeString": "contract LinkTokenInterface"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7839:15:0",
														"memberName": "transferAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "7834:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bool)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7834:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "7834:87:0"
											},
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"mutability": "mutable",
														"name": "vRFSeed",
														"nameLocation": "8160:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "8152:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 40,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"arguments": [
														{
															"id": 43,
															"name": "_keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "8187:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 44,
															"name": "USER_SEED_PLACEHOLDER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "8197:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 47,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8228:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_VRFConsumerBase_$120",
																		"typeString": "contract VRFConsumerBase"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_VRFConsumerBase_$120",
																		"typeString": "contract VRFConsumerBase"
																	}
																],
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8220:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 45,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8220:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8220:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 49,
																"name": "nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "8235:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																	"typeString": "mapping(bytes32 => uint256)"
																}
															},
															"id": 51,
															"indexExpression": {
																"id": 50,
																"name": "_keyHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "8242:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8235:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 42,
														"name": "makeVRFInputSeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "8170:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bytes32,uint256,address,uint256) pure returns (uint256)"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8170:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8152:100:0"
											},
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 54,
															"name": "nonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "8663:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 56,
														"indexExpression": {
															"id": 55,
															"name": "_keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "8670:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8663:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 57,
																"name": "nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "8682:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																	"typeString": "mapping(bytes32 => uint256)"
																}
															},
															"id": 59,
															"indexExpression": {
																"id": 58,
																"name": "_keyHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "8689:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8682:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8701:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8682:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8663:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "8663:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 65,
															"name": "_keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "8729:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 66,
															"name": "vRFSeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "8739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 64,
														"name": "makeRequestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "8715:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,uint256) pure returns (bytes32)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8715:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 27,
												"id": 68,
												"nodeType": "Return",
												"src": "8708:39:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "6595:1134:0",
										"text": " @notice requestRandomness initiates a request for VRF output given _seed\n @dev The fulfillRandomness method receives the output, once it's provided\n @dev by the Oracle, and verified by the vrfCoordinator.\n @dev The _keyHash must already be registered with the VRFCoordinator, and\n @dev the _fee must exceed the fee specified during registration of the\n @dev _keyHash.\n @dev The _seed parameter is vestigial, and is kept only for API\n @dev compatibility with older versions. It can't *hurt* to mix in some of\n @dev your own randomness, here, but it's not necessary because the VRF\n @dev oracle will mix the hash of the block containing your request into the\n @dev VRF seed it ultimately uses.\n @param _keyHash ID of public key against which randomness is generated\n @param _fee The amount of LINK to send with the request\n @return requestId unique ID for this request\n @dev The returned requestId can be used to distinguish responses to\n @dev concurrent requests. It is passed as the first argument to\n @dev fulfillRandomness."
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestRandomness",
									"nameLocation": "7741:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "_keyHash",
												"nameLocation": "7767:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "7759:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 20,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "7785:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "7777:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7758:32:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "7817:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "7809:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 25,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7808:19:0"
									},
									"scope": 120,
									"src": "7732:1020:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 73,
									"mutability": "immutable",
									"name": "LINK",
									"nameLocation": "8794:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 120,
									"src": "8756:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_LinkTokenInterface_$265",
										"typeString": "contract LinkTokenInterface"
									},
									"typeName": {
										"id": 72,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 71,
											"name": "LinkTokenInterface",
											"nameLocations": [
												"8756:18:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 265,
											"src": "8756:18:0"
										},
										"referencedDeclaration": 265,
										"src": "8756:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LinkTokenInterface_$265",
											"typeString": "contract LinkTokenInterface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 75,
									"mutability": "immutable",
									"name": "vrfCoordinator",
									"nameLocation": "8828:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 120,
									"src": "8802:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 74,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8802:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 79,
									"mutability": "mutable",
									"name": "nonces",
									"nameLocation": "9048:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 120,
									"src": "8982:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
										"typeString": "mapping(bytes32 => uint256)"
									},
									"typeName": {
										"id": 78,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 76,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "8990:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "8982:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
											"typeString": "mapping(bytes32 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 77,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "9001:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "9300:81:0",
										"statements": [
											{
												"expression": {
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 87,
														"name": "vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "9306:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 88,
														"name": "_vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "9323:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9306:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "9306:32:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 91,
														"name": "LINK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "9344:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LinkTokenInterface_$265",
															"typeString": "contract LinkTokenInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 93,
																"name": "_link",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "9370:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 92,
															"name": "LinkTokenInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "9351:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$265_$",
																"typeString": "type(contract LinkTokenInterface)"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9351:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LinkTokenInterface_$265",
															"typeString": "contract LinkTokenInterface"
														}
													},
													"src": "9344:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LinkTokenInterface_$265",
														"typeString": "contract LinkTokenInterface"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "9344:32:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "9059:186:0",
										"text": " @param _vrfCoordinator address of VRFCoordinator contract\n @param _link address of LINK token contract\n @dev https://docs.chain.link/docs/link-token-contracts"
									},
									"id": 98,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "_vrfCoordinator",
												"nameLocation": "9268:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "9260:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "_link",
												"nameLocation": "9293:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "9285:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9259:40:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9300:0:0"
									},
									"scope": 120,
									"src": "9248:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "9654:129:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 106,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9668:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9672:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9668:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 108,
																"name": "vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "9682:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9668:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c",
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9698:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445",
																"typeString": "literal_string \"Only VRFCoordinator can fulfill\""
															},
															"value": "Only VRFCoordinator can fulfill"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445",
																"typeString": "literal_string \"Only VRFCoordinator can fulfill\""
															}
														],
														"id": 105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9660:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "9660:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 114,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "9756:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 115,
															"name": "randomness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "9767:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 113,
														"name": "fulfillRandomness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "9738:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9738:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "9738:40:0"
											}
										]
									},
									"functionSelector": "94985ddd",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rawFulfillRandomness",
									"nameLocation": "9585:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "9614:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "9606:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 99,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "randomness",
												"nameLocation": "9633:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "9625:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9605:39:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9654:0:0"
									},
									"scope": 120,
									"src": "9576:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 121,
							"src": "5360:4425:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:9754:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol",
					"exportedSymbols": {
						"VRFRequestIDBase": [
							170
						]
					},
					"id": 171,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VRFRequestIDBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "VRFRequestIDBase",
							"nameLocation": "66:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "947:89:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 141,
																			"name": "_keyHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 125,
																			"src": "989:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 142,
																			"name": "_userSeed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 127,
																			"src": "999:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 143,
																			"name": "_requester",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "1010:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 144,
																			"name": "_nonce",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 131,
																			"src": "1022:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 139,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "978:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "982:6:1",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"src": "978:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "978:51:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 138,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "968:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "968:62:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "960:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "960:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "960:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 148,
												"nodeType": "Return",
												"src": "953:78:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "87:706:1",
										"text": " @notice returns the seed which is actually input to the VRF coordinator\n @dev To prevent repetition of VRF output due to repetition of the\n @dev user-supplied seed, that seed is combined in a hash with the\n @dev user-specific nonce, and the address of the consuming contract. The\n @dev risk of repetition is mostly mitigated by inclusion of a blockhash in\n @dev the final seed, but the nonce does protect against repetition in\n @dev requests which are included in a single block.\n @param _userSeed VRF seed input provided by user\n @param _requester Address of the requesting contract\n @param _nonce User-specific nonce at the time of the request"
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeVRFInputSeed",
									"nameLocation": "805:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "_keyHash",
												"nameLocation": "835:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "827:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 124,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "_userSeed",
												"nameLocation": "857:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "849:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "_requester",
												"nameLocation": "880:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "872:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "904:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "896:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:93:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "938:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:9:1"
									},
									"scope": 170,
									"src": "796:240:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "1512:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 163,
																	"name": "_keyHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "1552:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 164,
																	"name": "_vRFInputSeed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "1562:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 161,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1535:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1539:12:1",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1535:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1535:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 160,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1525:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 159,
												"id": 167,
												"nodeType": "Return",
												"src": "1518:59:1"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "1040:373:1",
										"text": " @notice Returns the id for this request\n @param _keyHash The serviceAgreement ID to be used for this request\n @param _vRFInputSeed The seed to be passed directly to the VRF\n @return The id for this request\n @dev Note that _vRFInputSeed is not the seed passed by the consuming\n @dev contract, but the one generated by makeVRFInputSeed"
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeRequestId",
									"nameLocation": "1425:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "_keyHash",
												"nameLocation": "1447:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1439:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_vRFInputSeed",
												"nameLocation": "1465:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1457:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1438:41:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1503:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:9:1"
									},
									"scope": 170,
									"src": "1416:166:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 171,
							"src": "57:1527:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1553:1"
				},
				"id": 1
			},
			"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
					"exportedSymbols": {
						"LinkTokenInterface": [
							265
						]
					},
					"id": 266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 172,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LinkTokenInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "LinkTokenInterface",
							"nameLocation": "67:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "dd62ed3e",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "99:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "117:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "109:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "132:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "124:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "124:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:32:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "remaining",
												"nameLocation": "172:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "164:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:19:2"
									},
									"scope": 265,
									"src": "90:93:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "196:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "204:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "221:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:32:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "259:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "254:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:14:2"
									},
									"scope": 265,
									"src": "187:81:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "281:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "299:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "291:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:15:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "337:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "329:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:17:2"
									},
									"scope": 265,
									"src": "272:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "359:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "367:2:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "decimalPlaces",
												"nameLocation": "399:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "393:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 199,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "393:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:21:2"
									},
									"scope": 265,
									"src": "350:64:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "66188463",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseApproval",
									"nameLocation": "427:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "452:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "444:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "469:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "461:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:37:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "504:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "499:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "499:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:14:2"
									},
									"scope": 265,
									"src": "418:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d73dd623",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseApproval",
									"nameLocation": "526:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "551:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "543:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "568:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "560:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:42:2"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:0:2"
									},
									"scope": 265,
									"src": "517:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "607:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:2:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "tokenName",
												"nameLocation": "651:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "637:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 220,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "637:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:25:2"
									},
									"scope": 265,
									"src": "598:64:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "675:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:2:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "tokenSymbol",
												"nameLocation": "721:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "707:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "707:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:27:2"
									},
									"scope": 265,
									"src": "666:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "747:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "totalTokensIssued",
												"nameLocation": "792:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "784:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:27:2"
									},
									"scope": 265,
									"src": "738:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "824:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "841:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "833:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "853:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "845:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:27:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "883:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "878:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "878:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:14:2"
									},
									"scope": 265,
									"src": "815:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4000aea0",
									"id": 253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "905:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "934:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "926:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "950:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "942:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "976:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "961:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 247,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "961:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "920:64:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1008:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1003:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1003:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:14:2"
									},
									"scope": 265,
									"src": "896:121:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1030:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1056:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1048:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1074:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1066:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1090:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1082:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:57:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1123:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1118:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1118:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1117:14:2"
									},
									"scope": 265,
									"src": "1021:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 266,
							"src": "57:1077:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1103:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							402
						],
						"IERC20Errors": [
							307
						],
						"IERC721Errors": [
							355
						]
					},
					"id": 403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 267,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 268,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 307,
							"linearizedBaseContracts": [
								307
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 277,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:3"
									},
									"src": "621:80:3"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 282,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "889:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:3"
									},
									"src": "864:41:3"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 287,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1102:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:3"
									},
									"src": "1075:45:3"
								},
								{
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 296,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1526:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1545:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:3"
									},
									"src": "1476:85:3"
								},
								{
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 301,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "1773:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:3"
									},
									"src": "1746:45:3"
								},
								{
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 306,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:3"
									},
									"src": "1997:43:3"
								}
							],
							"scope": 403,
							"src": "278:1764:3",
							"usedErrors": [
								277,
								282,
								287,
								296,
								301,
								306
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 308,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 355,
							"linearizedBaseContracts": [
								355
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 313,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"src": "2440:40:3"
								},
								{
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 318,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:3"
									},
									"src": "2623:46:3"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 327,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:3"
									},
									"src": "2969:75:3"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 332,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3233:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:3"
									},
									"src": "3207:42:3"
								},
								{
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 337,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "3447:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:3"
									},
									"src": "3419:46:3"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 344,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3756:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:3"
									},
									"src": "3723:68:3"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 349,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "4004:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:3"
									},
									"src": "3976:46:3"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 354,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "4258:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:3"
									},
									"src": "4230:46:3"
								}
							],
							"scope": 403,
							"src": "2186:2092:3",
							"usedErrors": [
								313,
								318,
								327,
								332,
								337,
								344,
								349,
								354
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 356,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 402,
							"linearizedBaseContracts": [
								402
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 367,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "4854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "4870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "4887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "4903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:3"
									},
									"src": "4821:99:3"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 372,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "5110:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:3"
									},
									"src": "5083:43:3"
								},
								{
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 377,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5325:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:3"
									},
									"src": "5296:47:3"
								},
								{
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 384,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "5645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "5663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:3"
									},
									"src": "5610:68:3"
								},
								{
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 389,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "5892:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:3"
									},
									"src": "5863:47:3"
								},
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 394,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "6147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:3"
									},
									"src": "6118:47:3"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 401,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "6488:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "6507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:3"
									},
									"src": "6456:73:3"
								}
							],
							"scope": 403,
							"src": "4424:2107:3",
							"usedErrors": [
								367,
								372,
								377,
								384,
								389,
								394,
								401
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1604
						],
						"ERC165": [
							1883
						],
						"ERC721": [
							1411
						],
						"IERC165": [
							1895
						],
						"IERC721": [
							1528
						],
						"IERC721Errors": [
							355
						],
						"IERC721Metadata": [
							1574
						],
						"IERC721Receiver": [
							1546
						],
						"Strings": [
							1859
						]
					},
					"id": 1412,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 404,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 406,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1412,
							"sourceUnit": 1529,
							"src": "133:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 405,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1528,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 408,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1412,
							"sourceUnit": 1547,
							"src": "172:54:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 407,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1546,
										"src": "180:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 410,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1412,
							"sourceUnit": 1575,
							"src": "227:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 409,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1574,
										"src": "235:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1412,
							"sourceUnit": 1605,
							"src": "293:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 411,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1604,
										"src": "301:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 414,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1412,
							"sourceUnit": 1860,
							"src": "342:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 413,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1859,
										"src": "350:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 417,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1412,
							"sourceUnit": 1884,
							"src": "391:69:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 415,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1895,
										"src": "399:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 416,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1883,
										"src": "408:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 419,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1412,
							"sourceUnit": 403,
							"src": "461:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 418,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 355,
										"src": "469:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 421,
										"name": "Context",
										"nameLocations": [
											"804:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1604,
										"src": "804:7:4"
									},
									"id": 422,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:4"
								},
								{
									"baseName": {
										"id": 423,
										"name": "ERC165",
										"nameLocations": [
											"813:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1883,
										"src": "813:6:4"
									},
									"id": 424,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:4"
								},
								{
									"baseName": {
										"id": 425,
										"name": "IERC721",
										"nameLocations": [
											"821:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1528,
										"src": "821:7:4"
									},
									"id": 426,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:4"
								},
								{
									"baseName": {
										"id": 427,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1574,
										"src": "830:15:4"
									},
									"id": 428,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:4"
								},
								{
									"baseName": {
										"id": 429,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 355,
										"src": "847:13:4"
									},
									"id": 430,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 420,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1411,
							"linearizedBaseContracts": [
								1411,
								355,
								1574,
								1528,
								1883,
								1895,
								1604
							],
							"name": "ERC721",
							"nameLocation": "794:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 433,
									"libraryName": {
										"id": 431,
										"name": "Strings",
										"nameLocations": [
											"873:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1859,
										"src": "873:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:4",
									"typeName": {
										"id": 432,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 435,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1411,
									"src": "917:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 434,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 437,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1411,
									"src": "964:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 436,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 441,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1411,
									"src": "993:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 440,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:4",
										"keyType": {
											"id": 438,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 439,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 445,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1411,
									"src": "1051:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 444,
										"keyName": "owner",
										"keyNameLocation": "1067:5:4",
										"keyType": {
											"id": 442,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 443,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 449,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1411,
									"src": "1109:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 448,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:4",
										"keyType": {
											"id": 446,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 447,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 455,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1411,
									"src": "1175:86:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 454,
										"keyName": "owner",
										"keyNameLocation": "1191:5:4",
										"keyType": {
											"id": 450,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 453,
											"keyName": "operator",
											"keyNameLocation": "1216:8:4",
											"keyType": {
												"id": 451,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 452,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "1437:57:4",
										"statements": [
											{
												"expression": {
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 463,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "1447:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 464,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "1455:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:4"
											},
											{
												"expression": {
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 467,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "1470:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 468,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "1480:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:4"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 472,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "1393:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "1414:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:4"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:4"
									},
									"scope": 1411,
									"src": "1381:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1882,
										1894
									],
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "1669:192:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 483,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "1698:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 485,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1528,
																			"src": "1718:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1528_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1528_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 484,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1528",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 489,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "1754:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 491,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1574,
																			"src": "1774:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1574_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1574_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 490,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1574",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 498,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "1842:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 496,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1411_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1882,
															"src": "1818:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 482,
												"id": 501,
												"nodeType": "Return",
												"src": "1679:175:4"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 479,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 477,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1883,
												"src": "1637:6:4"
											},
											{
												"id": 478,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1895,
												"src": "1645:7:4"
											}
										],
										"src": "1628:25:4"
									},
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1588:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 474,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1663:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:4"
									},
									"scope": 1411,
									"src": "1561:300:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1453
									],
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "1992:136:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "2006:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 525,
												"nodeType": "IfStatement",
												"src": "2002:87:4",
												"trueBody": {
													"id": 524,
													"nodeType": "Block",
													"src": "2027:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 518,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 517,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "2048:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 523,
															"nodeType": "RevertStatement",
															"src": "2041:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 526,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2105:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 528,
													"indexExpression": {
														"id": 527,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "2115:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 510,
												"id": 529,
												"nodeType": "Return",
												"src": "2098:23:4"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1939:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:4"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1983:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:4"
									},
									"scope": 1411,
									"src": "1920:208:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1461
									],
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "2257:46:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "2288:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "2274:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 538,
												"id": 542,
												"nodeType": "Return",
												"src": "2267:29:4"
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2202:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:4"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2248:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:4"
									},
									"scope": 1411,
									"src": "2185:118:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1559
									],
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "2425:29:4",
										"statements": [
											{
												"expression": {
													"id": 550,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "2442:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 549,
												"id": 551,
												"nodeType": "Return",
												"src": "2435:12:4"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2410:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 547,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:4"
									},
									"scope": 1411,
									"src": "2365:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1565
									],
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "2580:31:4",
										"statements": [
											{
												"expression": {
													"id": 559,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 437,
													"src": "2597:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 558,
												"id": 560,
												"nodeType": "Return",
												"src": "2590:14:4"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:4"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "2565:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 556,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:4"
									},
									"scope": 1411,
									"src": "2518:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1573
									],
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "2756:176:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "2780:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 570,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "2766:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:4"
											},
											{
												"assignments": [
													575
												],
												"declarations": [
													{
														"constant": false,
														"id": 575,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "2799:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 574,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 578,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 576,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "2823:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 581,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "2856:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 579,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 589,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "2892:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 590,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 565,
																		"src": "2901:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:4",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1672,
																	"src": "2901:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 586,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:4",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 569,
												"id": 596,
												"nodeType": "Return",
												"src": "2843:82:4"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2695:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:4"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2741:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 567,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:4"
									},
									"scope": 1411,
									"src": "2677:255:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "3240:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 603,
												"id": 605,
												"nodeType": "Return",
												"src": "3250:9:4"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3225:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 601,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:4"
									},
									"scope": 1411,
									"src": "3174:92:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1501
									],
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "3384:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "3403:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "3407:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 618,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1586,
																"src": "3416:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 615,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1214,
															1280
														],
														"referencedDeclaration": 1214,
														"src": "3394:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:4"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "3340:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "3352:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:4"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:4"
									},
									"scope": 1411,
									"src": "3323:113:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1517
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3573:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "3597:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "3583:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 636,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "3636:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "3623:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 630,
												"id": 638,
												"nodeType": "Return",
												"src": "3616:28:4"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:4"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3564:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:4"
									},
									"scope": 1411,
									"src": "3497:154:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1509
									],
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "3793:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 649,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1586,
																"src": "3822:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3836:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "3846:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 648,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "3803:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:4"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "3745:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "3763:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:4"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:4"
									},
									"scope": 1411,
									"src": "3718:144:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1527
									],
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "4022:59:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 666,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4039:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 668,
														"indexExpression": {
															"id": 667,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "4058:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 670,
													"indexExpression": {
														"id": 669,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "4065:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 665,
												"id": 671,
												"nodeType": "Return",
												"src": "4032:42:4"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "3954:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "3969:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:4"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "4016:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 663,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:4"
									},
									"scope": 1411,
									"src": "3928:153:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1493
									],
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "4223:498:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 683,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "4237:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 684,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 697,
												"nodeType": "IfStatement",
												"src": "4233:87:4",
												"trueBody": {
													"id": 696,
													"nodeType": "Block",
													"src": "4255:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 690,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 689,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "4276:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 695,
															"nodeType": "RevertStatement",
															"src": "4269:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 718,
														"src": "4538:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 698,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"arguments": [
														{
															"id": 701,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "4570:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "4574:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 703,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1586,
																"src": "4583:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 700,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "4562:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 707,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "4610:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 708,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "4627:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 717,
												"nodeType": "IfStatement",
												"src": "4606:109:4",
												"trueBody": {
													"id": 716,
													"nodeType": "Block",
													"src": "4633:82:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 711,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "4675:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 712,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "4681:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 713,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "4690:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 710,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "4654:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 715,
															"nodeType": "RevertStatement",
															"src": "4647:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "4165:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "4179:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "4191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:4"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:4"
									},
									"scope": 1411,
									"src": "4143:578:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1483
									],
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "4863:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "4890:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "4896:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "4900:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 729,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															737,
															763
														],
														"referencedDeclaration": 763,
														"src": "4873:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:4"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "4813:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "4827:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "4839:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:4"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:4"
									},
									"scope": 1411,
									"src": "4787:132:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1473
									],
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "5088:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 750,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "5111:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "5117:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 752,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "5121:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 749,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "5098:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 756,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "5162:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 757,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "5168:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "5172:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 759,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "5181:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 755,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "5139:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:4"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "5011:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "5025:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "5037:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "5054:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 745,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:4"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:4"
									},
									"scope": 1411,
									"src": "4985:208:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "5782:40:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 771,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "5799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 773,
													"indexExpression": {
														"id": 772,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "5807:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 770,
												"id": 774,
												"nodeType": "Return",
												"src": "5792:23:4"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:4",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "5725:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "5773:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:4"
									},
									"scope": 1411,
									"src": "5707:115:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "6017:48:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 784,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "6034:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 786,
													"indexExpression": {
														"id": 785,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "6050:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 783,
												"id": 787,
												"nodeType": "Return",
												"src": "6027:31:4"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:4",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "5960:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:4"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "6008:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:4"
									},
									"scope": 1411,
									"src": "5938:127:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "6485:163:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 801,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "6514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 802,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 807,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "6552:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 808,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 794,
																			"src": "6561:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 811,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 792,
																				"src": "6589:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 812,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 794,
																				"src": "6596:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 810,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 673,
																			"src": "6572:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 816,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "6621:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 815,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 789,
																			"src": "6608:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 818,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "6633:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 821,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 800,
												"id": 823,
												"nodeType": "Return",
												"src": "6495:146:4"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:4",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "6399:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "6414:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "6431:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:4"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "6479:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 798,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:4"
									},
									"scope": 1411,
									"src": "6376:272:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "7179:271:4",
										"statements": [
											{
												"condition": {
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:4",
													"subExpression": {
														"arguments": [
															{
																"id": 836,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "7208:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 837,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "7215:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 838,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "7224:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 835,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "7194:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "7189:255:4",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "7234:210:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 841,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "7252:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 842,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 857,
																"nodeType": "Block",
																"src": "7350:84:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 853,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 830,
																					"src": "7402:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 854,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 832,
																					"src": "7411:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 852,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 344,
																				"src": "7375:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 856,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:4"
																	}
																]
															},
															"id": 858,
															"nodeType": "IfStatement",
															"src": "7248:186:4",
															"trueBody": {
																"id": 851,
																"nodeType": "Block",
																"src": "7273:71:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 848,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 832,
																					"src": "7321:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 847,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 318,
																				"src": "7298:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 850,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:4",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7108:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7123:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7140:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:4"
									},
									"scope": 1411,
									"src": "7082:368:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "8167:78:4",
										"statements": [
											{
												"id": 876,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:4",
												"statements": [
													{
														"expression": {
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 870,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "8201:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 872,
																"indexExpression": {
																	"id": 871,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "8211:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 873,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "8223:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 875,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:4",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "8118:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "8135:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 866,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:4"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:4"
									},
									"scope": 1411,
									"src": "8092:153:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "8933:700:4",
										"statements": [
											{
												"assignments": [
													891
												],
												"declarations": [
													{
														"constant": false,
														"id": 891,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 967,
														"src": "8943:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 890,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 895,
												"initialValue": {
													"arguments": [
														{
															"id": 893,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "8967:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "8958:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 896,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "9035:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 897,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 909,
												"nodeType": "IfStatement",
												"src": "9031:86:4",
												"trueBody": {
													"id": 908,
													"nodeType": "Block",
													"src": "9055:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 903,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "9086:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 904,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "9092:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 905,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "9098:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 902,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 862,
																	"src": "9069:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 907,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "9161:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 911,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "9157:256:4",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "9181:232:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 917,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 921,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "9298:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 924,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 922,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 916,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1214,
																		1280
																	],
																	"referencedDeclaration": 1280,
																	"src": "9277:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:4"
														},
														{
															"id": 935,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:4",
															"statements": [
																{
																	"expression": {
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 929,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 445,
																				"src": "9368:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 931,
																			"indexExpression": {
																				"id": 930,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 891,
																				"src": "9378:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 934,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:4"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 938,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "9427:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 939,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 952,
												"nodeType": "IfStatement",
												"src": "9423:107:4",
												"trueBody": {
													"id": 951,
													"nodeType": "Block",
													"src": "9445:85:4",
													"statements": [
														{
															"id": 950,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:4",
															"statements": [
																{
																	"expression": {
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 944,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 445,
																				"src": "9487:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 946,
																			"indexExpression": {
																				"id": 945,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "9497:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 949,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:4"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 953,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "9540:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 955,
														"indexExpression": {
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "9548:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 956,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "9559:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 960,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "9586:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 961,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "9592:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "9596:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 959,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "9577:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "EmitStatement",
												"src": "9572:32:4"
											},
											{
												"expression": {
													"id": 965,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 891,
													"src": "9622:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 889,
												"id": 966,
												"nodeType": "Return",
												"src": "9615:11:4"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:4",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "8855:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "8867:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "8884:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "8924:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:4"
									},
									"scope": 1411,
									"src": "8838:795:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "10008:274:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 976,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "10022:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 977,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 990,
												"nodeType": "IfStatement",
												"src": "10018:87:4",
												"trueBody": {
													"id": 989,
													"nodeType": "Block",
													"src": "10040:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 985,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 983,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 982,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "10061:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 988,
															"nodeType": "RevertStatement",
															"src": "10054:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "10114:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 991,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1001,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "10146:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "10150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 996,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "10138:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1002,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "10184:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1003,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "10180:96:4",
												"trueBody": {
													"id": 1015,
													"nodeType": "Block",
													"src": "10213:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1009,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1008,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "10234:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1014,
															"nodeType": "RevertStatement",
															"src": "10227:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "9970:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:4"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:4"
									},
									"scope": 1411,
									"src": "9955:327:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "10690:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1027,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "10710:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "10714:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1026,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1033,
															1059
														],
														"referencedDeclaration": 1059,
														"src": "10700:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:4"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:4",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "10652:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "10664:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:4"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:4"
									},
									"scope": 1411,
									"src": "10633:100:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "11038:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1044,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "11054:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "11058:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1043,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "11048:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1049,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "11111:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "11115:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1055,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "11124:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1048,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "11076:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:4"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "10973:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "10985:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "11002:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1039,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:4"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:4"
									},
									"scope": 1411,
									"src": "10954:182:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "11503:186:4",
										"statements": [
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1091,
														"src": "11513:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1065,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1078,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1068,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "11557:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1073,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1067,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "11537:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1079,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "11591:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1080,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1090,
												"nodeType": "IfStatement",
												"src": "11587:96:4",
												"trueBody": {
													"id": 1089,
													"nodeType": "Block",
													"src": "11620:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1086,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1062,
																		"src": "11664:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1085,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "11641:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1088,
															"nodeType": "RevertStatement",
															"src": "11634:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "11477:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:4"
									},
									"scope": 1411,
									"src": "11462:227:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "12084:389:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1102,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "12098:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1103,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1116,
												"nodeType": "IfStatement",
												"src": "12094:87:4",
												"trueBody": {
													"id": 1115,
													"nodeType": "Block",
													"src": "12116:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1109,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1108,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "12137:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1114,
															"nodeType": "RevertStatement",
															"src": "12130:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													1118
												],
												"declarations": [
													{
														"constant": false,
														"id": 1118,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1151,
														"src": "12190:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1117,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1127,
												"initialValue": {
													"arguments": [
														{
															"id": 1120,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "12222:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1121,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "12226:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1122,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1119,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "12214:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1128,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "12260:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1129,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1139,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "12362:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1140,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "12379:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1149,
													"nodeType": "IfStatement",
													"src": "12358:109:4",
													"trueBody": {
														"id": 1148,
														"nodeType": "Block",
														"src": "12385:82:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1143,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "12427:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1144,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1099,
																			"src": "12433:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1145,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "12442:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1142,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "12406:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1147,
																"nodeType": "RevertStatement",
																"src": "12399:57:4"
															}
														]
													}
												},
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "12256:211:4",
												"trueBody": {
													"id": 1138,
													"nodeType": "Block",
													"src": "12289:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1135,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "12333:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1134,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "12310:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1137,
															"nodeType": "RevertStatement",
															"src": "12303:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "12032:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "12046:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "12058:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:4"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:4"
									},
									"scope": 1411,
									"src": "12013:460:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "13481:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1163,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "13505:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1164,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "13511:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1165,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "13515:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1162,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1170,
															1196
														],
														"referencedDeclaration": 1196,
														"src": "13491:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:4"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "13429:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "13443:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "13455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:4"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:4"
									},
									"scope": 1411,
									"src": "13406:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "13873:102:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1183,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "13893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1184,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "13899:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1185,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "13903:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1182,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "13883:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "13944:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "13950:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "13954:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1192,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "13963:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1188,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "13921:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:4"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:4",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "13794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "13808:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "13820:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "13837:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:4"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:4"
									},
									"scope": 1411,
									"src": "13771:204:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "14488:50:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1207,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "14507:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1208,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "14511:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1209,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "14520:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1206,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1214,
															1280
														],
														"referencedDeclaration": 1280,
														"src": "14498:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:4"
											}
										]
									},
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "14436:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "14448:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "14465:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:4"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:4"
									},
									"scope": 1411,
									"src": "14418:120:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "14814:568:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1226,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "14880:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1227,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "14893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1228,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1272,
												"nodeType": "IfStatement",
												"src": "14876:460:4",
												"trueBody": {
													"id": 1271,
													"nodeType": "Block",
													"src": "14913:423:4",
													"statements": [
														{
															"assignments": [
																1235
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1235,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1271,
																	"src": "14927:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1234,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1239,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1237,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "14957:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1236,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "14943:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1240,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1221,
																			"src": "15093:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1243,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1241,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1246,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1235,
																			"src": "15115:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1247,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1221,
																			"src": "15124:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:4",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1251,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1235,
																				"src": "15150:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1252,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1221,
																				"src": "15157:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1250,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 673,
																			"src": "15133:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1261,
															"nodeType": "IfStatement",
															"src": "15089:142:4",
															"trueBody": {
																"id": 1260,
																"nodeType": "Block",
																"src": "15164:67:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1257,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1221,
																					"src": "15211:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1256,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 349,
																				"src": "15189:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1259,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:4"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1262,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "15249:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1270,
															"nodeType": "IfStatement",
															"src": "15245:81:4",
															"trueBody": {
																"id": 1269,
																"nodeType": "Block",
																"src": "15260:66:4",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1264,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1235,
																					"src": "15292:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1265,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1217,
																					"src": "15299:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1266,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1219,
																					"src": "15303:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1263,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1436,
																				"src": "15283:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1268,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1273,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "15346:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1275,
														"indexExpression": {
															"id": 1274,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "15362:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1276,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "15373:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:4"
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:4",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "14738:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "14750:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "14767:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "14781:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:4"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:4"
									},
									"scope": 1411,
									"src": "14720:662:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "15684:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1290,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "15698:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1291,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1301,
												"nodeType": "IfStatement",
												"src": "15694:91:4",
												"trueBody": {
													"id": 1300,
													"nodeType": "Block",
													"src": "15722:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1297,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "15765:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1296,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "15743:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1299,
															"nodeType": "RevertStatement",
															"src": "15736:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1302,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "15794:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1305,
															"indexExpression": {
																"id": 1303,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "15813:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1306,
														"indexExpression": {
															"id": 1304,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "15820:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1307,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "15832:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1311,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "15870:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1312,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "15877:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "15887:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1310,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "15855:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "EmitStatement",
												"src": "15850:46:4"
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "15619:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "15634:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "15652:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:4"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:4"
									},
									"scope": 1411,
									"src": "15591:312:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "16210:169:4",
										"statements": [
											{
												"assignments": [
													1326
												],
												"declarations": [
													{
														"constant": false,
														"id": 1326,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1345,
														"src": "16220:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1325,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"arguments": [
														{
															"id": 1328,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "16245:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1327,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "16236:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1331,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "16267:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1332,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1342,
												"nodeType": "IfStatement",
												"src": "16263:88:4",
												"trueBody": {
													"id": 1341,
													"nodeType": "Block",
													"src": "16288:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1338,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1320,
																		"src": "16332:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1337,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "16309:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1340,
															"nodeType": "RevertStatement",
															"src": "16302:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1343,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1326,
													"src": "16367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1324,
												"id": 1344,
												"nodeType": "Return",
												"src": "16360:12:4"
											}
										]
									},
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:4",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "16161:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:4"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "16201:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:4"
									},
									"scope": 1411,
									"src": "16138:241:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "17020:680:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1358,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "17034:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1408,
												"nodeType": "IfStatement",
												"src": "17030:664:4",
												"trueBody": {
													"id": 1407,
													"nodeType": "Block",
													"src": "17054:640:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1387,
																		"nodeType": "Block",
																		"src": "17168:162:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1380,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1376,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1374,
																						"src": "17190:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1377,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1546,
																								"src": "17200:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1546_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1378,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:4",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1545,
																							"src": "17200:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1379,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1386,
																				"nodeType": "IfStatement",
																				"src": "17186:130:4",
																				"trueBody": {
																					"id": 1385,
																					"nodeType": "Block",
																					"src": "17243:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1382,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1351,
																										"src": "17294:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1381,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 337,
																									"src": "17272:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1383,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1384,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1388,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1375,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1374,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1388,
																				"src": "17153:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1373,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:4"
																	},
																	"src": "17144:186:4"
																},
																{
																	"block": {
																		"id": 1404,
																		"nodeType": "Block",
																		"src": "17359:325:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1395,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1392,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1390,
																							"src": "17381:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1393,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1394,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1402,
																					"nodeType": "Block",
																					"src": "17480:190:4",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:4",
																								"nodeType": "YulBlock",
																								"src": "17566:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:4",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:4"
																													},
																													"nativeSrc": "17599:15:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:4",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:4"
																													},
																													"nativeSrc": "17616:13:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:4",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:4"
																											},
																											"nativeSrc": "17592:38:4",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:4"
																										},
																										"nativeSrc": "17592:38:4",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1390,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1390,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1401,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:4"
																						}
																					]
																				},
																				"id": 1403,
																				"nodeType": "IfStatement",
																				"src": "17377:293:4",
																				"trueBody": {
																					"id": 1400,
																					"nodeType": "Block",
																					"src": "17401:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1397,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1351,
																										"src": "17452:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1396,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 337,
																									"src": "17430:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1398,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1399,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1405,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1391,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1390,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1405,
																				"src": "17338:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1389,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:4"
																	},
																	"src": "17331:353:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1367,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "17109:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1369,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1349,
																		"src": "17123:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1370,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1353,
																		"src": "17129:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1371,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "17138:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1364,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1351,
																				"src": "17088:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1363,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1546,
																			"src": "17072:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1546_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1546",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:4",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1545,
																	"src": "17072:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1406,
															"nodeType": "TryStatement",
															"src": "17068:616:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:4",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "16950:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "16964:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "16976:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "16993:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1354,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:4"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:4"
									},
									"scope": 1411,
									"src": "16918:782:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1412,
							"src": "776:16926:4",
							"usedErrors": [
								313,
								318,
								327,
								332,
								337,
								344,
								349,
								354
							],
							"usedEvents": [
								1427,
								1436,
								1445
							]
						}
					],
					"src": "107:17596:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1895
						],
						"IERC721": [
							1528
						]
					},
					"id": 1529,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1413,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1415,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1529,
							"sourceUnit": 1896,
							"src": "134:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1414,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1895,
										"src": "142:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1417,
										"name": "IERC165",
										"nameLocations": [
											"287:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1895,
										"src": "287:7:5"
									},
									"id": 1418,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1416,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1528,
							"linearizedBaseContracts": [
								1528,
								1895
							],
							"name": "IERC721",
							"nameLocation": "276:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1427,
									"name": "Transfer",
									"nameLocation": "400:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "409:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "431:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "451:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:5"
									},
									"src": "394:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1436,
									"name": "Approval",
									"nameLocation": "587:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "596:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "619:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "645:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:5"
									},
									"src": "581:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1445,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "819:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "842:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:5"
									},
									"src": "798:85:5"
								},
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:5"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1027:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:5"
									},
									"scope": 1528,
									"src": "970:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "1203:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:5"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "1243:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:5"
									},
									"scope": 1528,
									"src": "1186:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "1860:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "1874:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "1886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "1903:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:5"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:5"
									},
									"scope": 1528,
									"src": "1834:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1474,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "2675:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "2689:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "2701:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:5"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:5"
									},
									"scope": 1528,
									"src": "2649:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1484,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "3492:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "3506:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:5"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:5"
									},
									"scope": 1528,
									"src": "3470:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "4024:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "4036:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:5"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:5"
									},
									"scope": 1528,
									"src": "4007:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4415:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:5"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:5"
									},
									"scope": 1528,
									"src": "4388:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "4628:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:5"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "4668:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:5"
									},
									"scope": 1528,
									"src": "4607:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "4861:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "4876:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:5"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "4917:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:5"
									},
									"scope": 1528,
									"src": "4835:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1529,
							"src": "266:4659:5",
							"usedErrors": [],
							"usedEvents": [
								1427,
								1436,
								1445
							]
						}
					],
					"src": "108:4818:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1546
						]
					},
					"id": 1547,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1530,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1531,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:6",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1546,
							"linearizedBaseContracts": [
								1546
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:6",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "867:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "893:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "915:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "940:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:6"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "984:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1542,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:6"
									},
									"scope": 1546,
									"src": "832:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1547,
							"src": "295:699:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1528
						],
						"IERC721Metadata": [
							1574
						]
					},
					"id": 1575,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1548,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1550,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1575,
							"sourceUnit": 1529,
							"src": "153:39:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1549,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1528,
										"src": "161:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1552,
										"name": "IERC721",
										"nameLocations": [
											"357:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1528,
										"src": "357:7:7"
									},
									"id": 1553,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:7"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1551,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1574,
							"linearizedBaseContracts": [
								1574,
								1528,
								1895
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:7",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:7"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "473:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1556,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:7"
									},
									"scope": 1574,
									"src": "434:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:7",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:7"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "600:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1562,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:7"
									},
									"scope": 1574,
									"src": "559:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:7",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "734:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:7"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "774:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:7"
									},
									"scope": 1574,
									"src": "716:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1575,
							"src": "328:463:7",
							"usedErrors": [],
							"usedEvents": [
								1427,
								1436,
								1445
							]
						}
					],
					"src": "127:665:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1604
						]
					},
					"id": 1605,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1576,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1577,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1604,
							"linearizedBaseContracts": [
								1604
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1582,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1584,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1604,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1591,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1590,
												"id": 1593,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1604,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1599,
												"id": 1601,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1604,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1605,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2949
						],
						"SignedMath": [
							3054
						],
						"Strings": [
							1859
						]
					},
					"id": 1860,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1606,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1608,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1860,
							"sourceUnit": 2950,
							"src": "127:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1607,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2949,
										"src": "135:4:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1610,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1860,
							"sourceUnit": 3055,
							"src": "165:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1609,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3054,
										"src": "173:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1611,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1859,
							"linearizedBaseContracts": [
								1859
							],
							"name": "Strings",
							"nameLocation": "259:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1614,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1859,
									"src": "273:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1612,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1613,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1617,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1859,
									"src": "335:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1615,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1616,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:9",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1624,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "520:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:9"
									},
									"src": "470:66:9"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "708:627:9",
										"statements": [
											{
												"id": 1670,
												"nodeType": "UncheckedBlock",
												"src": "718:611:9",
												"statements": [
													{
														"assignments": [
															1633
														],
														"declarations": [
															{
																"constant": false,
																"id": 1633,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1670,
																"src": "742:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1632,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1640,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1636,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "770:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1634,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2949,
																		"src": "759:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2949_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2769,
																	"src": "759:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:9"
													},
													{
														"assignments": [
															1642
														],
														"declarations": [
															{
																"constant": false,
																"id": 1642,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1670,
																"src": "794:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1641,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1647,
														"initialValue": {
															"arguments": [
																{
																	"id": 1645,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1633,
																	"src": "828:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1643,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:9"
													},
													{
														"assignments": [
															1649
														],
														"declarations": [
															{
																"constant": false,
																"id": 1649,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1670,
																"src": "849:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1648,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1650,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:9"
													},
													{
														"AST": {
															"nativeSrc": "930:67:9",
															"nodeType": "YulBlock",
															"src": "930:67:9",
															"statements": [
																{
																	"nativeSrc": "948:35:9",
																	"nodeType": "YulAssignment",
																	"src": "948:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:9",
																						"nodeType": "YulLiteral",
																						"src": "971:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:9"
																				},
																				"nativeSrc": "967:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:9"
																		},
																		"nativeSrc": "955:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1642,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1633,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1649,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:9",
																"valueSize": 1
															}
														],
														"id": 1651,
														"nodeType": "InlineAssembly",
														"src": "921:76:9"
													},
													{
														"body": {
															"id": 1666,
															"nodeType": "Block",
															"src": "1023:269:9",
															"statements": [
																{
																	"expression": {
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:9",
																		"subExpression": {
																			"id": 1653,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1649,
																			"src": "1041:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1655,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:9",
																		"nodeType": "YulBlock",
																		"src": "1124:86:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:9",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:9"
																									},
																									"nativeSrc": "1164:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:9"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:9"
																							},
																							"nativeSrc": "1159:32:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:9"
																					},
																					"nativeSrc": "1146:46:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:9"
																				},
																				"nativeSrc": "1146:46:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1614,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1649,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1627,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1656,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:9"
																},
																{
																	"expression": {
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1657,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "1227:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1660,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1661,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "1260:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1665,
																	"nodeType": "IfStatement",
																	"src": "1256:21:9",
																	"trueBody": {
																		"id": 1664,
																		"nodeType": "Break",
																		"src": "1272:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1667,
														"nodeType": "WhileStatement",
														"src": "1010:282:9"
													},
													{
														"expression": {
															"id": 1668,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "1312:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1631,
														"id": 1669,
														"nodeType": "Return",
														"src": "1305:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "655:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:9"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "693:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:9"
									},
									"scope": 1859,
									"src": "637:698:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "1511:92:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1683,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1675,
																	"src": "1542:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:9",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1692,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1675,
																			"src": "1588:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1690,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3054,
																			"src": "1573:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3054_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:9",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3053,
																		"src": "1573:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1689,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "1564:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1680,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:9",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1679,
												"id": 1696,
												"nodeType": "Return",
												"src": "1521:75:9"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "1459:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1674,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:9"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "1496:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1677,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:9"
									},
									"scope": 1859,
									"src": "1435:168:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "1782:100:9",
										"statements": [
											{
												"id": 1716,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1707,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "1835:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1710,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1701,
																				"src": "1854:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1708,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2949,
																				"src": "1842:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2949_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2891,
																			"src": "1842:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1706,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1718,
																	1801,
																	1821
																],
																"referencedDeclaration": 1801,
																"src": "1823:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1705,
														"id": 1715,
														"nodeType": "Return",
														"src": "1816:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "1729:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:9"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "1767:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:9"
									},
									"scope": 1859,
									"src": "1708:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "2095:435:9",
										"statements": [
											{
												"assignments": [
													1729
												],
												"declarations": [
													{
														"constant": false,
														"id": 1729,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1800,
														"src": "2105:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1728,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1731,
												"initialValue": {
													"id": 1730,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1721,
													"src": "2126:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:9"
											},
											{
												"assignments": [
													1733
												],
												"declarations": [
													{
														"constant": false,
														"id": 1733,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1800,
														"src": "2141:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1732,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1742,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1737,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1723,
																	"src": "2177:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1734,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:9"
											},
											{
												"expression": {
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1743,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "2198:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1745,
														"indexExpression": {
															"hexValue": "30",
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:9"
											},
											{
												"expression": {
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1749,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "2223:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1751,
														"indexExpression": {
															"hexValue": "31",
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1754,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:9"
											},
											{
												"body": {
													"id": 1783,
													"nodeType": "Block",
													"src": "2293:95:9",
													"statements": [
														{
															"expression": {
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1769,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1733,
																		"src": "2307:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1771,
																	"indexExpression": {
																		"id": 1770,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1756,
																		"src": "2314:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1772,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "2319:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1776,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1773,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1729,
																			"src": "2330:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1778,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:9"
														},
														{
															"expression": {
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1779,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "2361:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1782,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1763,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "2281:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1784,
												"initializationExpression": {
													"assignments": [
														1756
													],
													"declarations": [
														{
															"constant": false,
															"id": 1756,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1784,
															"src": "2253:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1755,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1762,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1758,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "2269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:9"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:9",
														"subExpression": {
															"id": 1766,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "2290:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1768,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1785,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1729,
														"src": "2401:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1794,
												"nodeType": "IfStatement",
												"src": "2397:96:9",
												"trueBody": {
													"id": 1793,
													"nodeType": "Block",
													"src": "2418:75:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1789,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "2468:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1790,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "2475:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1788,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "2439:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1792,
															"nodeType": "RevertStatement",
															"src": "2432:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1797,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "2516:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1795,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1727,
												"id": 1799,
												"nodeType": "Return",
												"src": "2502:21:9"
											}
										]
									},
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2041:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:9"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2080:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1725,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:9"
									},
									"scope": 1859,
									"src": "2005:525:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1820,
										"nodeType": "Block",
										"src": "2762:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1814,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1804,
																			"src": "2807:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1812,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1810,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1817,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "2815:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1809,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1718,
															1801,
															1821
														],
														"referencedDeclaration": 1801,
														"src": "2779:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1808,
												"id": 1819,
												"nodeType": "Return",
												"src": "2772:58:9"
											}
										]
									},
									"documentation": {
										"id": 1802,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "2710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:9"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "2747:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1806,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:9"
									},
									"scope": 1859,
									"src": "2689:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1857,
										"nodeType": "Block",
										"src": "2992:104:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1833,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1824,
																		"src": "3015:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1831,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1838,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1826,
																		"src": "3034:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1836,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1845,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1824,
																			"src": "3063:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1843,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1842,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1851,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1826,
																			"src": "3086:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1849,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1848,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1830,
												"id": 1856,
												"nodeType": "Return",
												"src": "3002:87:9"
											}
										]
									},
									"documentation": {
										"id": 1822,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "2929:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1823,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "2946:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1825,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:9"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "2986:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:9"
									},
									"scope": 1859,
									"src": "2914:182:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1860,
							"src": "251:2847:9",
							"usedErrors": [
								1624
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1883
						],
						"IERC165": [
							1895
						]
					},
					"id": 1884,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1861,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1863,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1884,
							"sourceUnit": 1896,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1862,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1895,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1865,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1895,
										"src": "687:7:10"
									},
									"id": 1866,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1864,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1883,
							"linearizedBaseContracts": [
								1883,
								1895
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1894
									],
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1874,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1876,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1895,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1895_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1895_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1875,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1895",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1873,
												"id": 1880,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1868,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 1883,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1884,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1895
						]
					},
					"id": 1896,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1885,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1886,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1895,
							"linearizedBaseContracts": [
								1895
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1894,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1888,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1891,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 1895,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1896,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2949
						]
					},
					"id": 2950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1897,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1898,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2949,
							"linearizedBaseContracts": [
								2949
							],
							"name": "Math",
							"nameLocation": "211:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1901,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:12"
									},
									"src": "277:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1906,
									"members": [
										{
											"id": 1902,
											"name": "Floor",
											"nameLocation": "336:5:12",
											"nodeType": "EnumValue",
											"src": "336:5:12"
										},
										{
											"id": 1903,
											"name": "Ceil",
											"nameLocation": "379:4:12",
											"nodeType": "EnumValue",
											"src": "379:4:12"
										},
										{
											"id": 1904,
											"name": "Trunc",
											"nameLocation": "421:5:12",
											"nodeType": "EnumValue",
											"src": "421:5:12"
										},
										{
											"id": 1905,
											"name": "Expand",
											"nameLocation": "451:6:12",
											"nodeType": "EnumValue",
											"src": "451:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:12",
									"nodeType": "EnumDefinition",
									"src": "312:169:12"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "661:140:12",
										"statements": [
											{
												"id": 1936,
												"nodeType": "UncheckedBlock",
												"src": "671:124:12",
												"statements": [
													{
														"assignments": [
															1919
														],
														"declarations": [
															{
																"constant": false,
																"id": 1919,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1936,
																"src": "695:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1918,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1923,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1920,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "707:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1921,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1911,
																"src": "711:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1924,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "730:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1925,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "734:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1931,
														"nodeType": "IfStatement",
														"src": "726:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1929,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1917,
															"id": 1930,
															"nodeType": "Return",
															"src": "737:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1933,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1919,
																	"src": "782:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1934,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1917,
														"id": 1935,
														"nodeType": "Return",
														"src": "768:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "646:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1913,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:12"
									},
									"scope": 2949,
									"src": "585:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "984:113:12",
										"statements": [
											{
												"id": 1964,
												"nodeType": "UncheckedBlock",
												"src": "994:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1950,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "1022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1951,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1941,
																"src": "1026:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1957,
														"nodeType": "IfStatement",
														"src": "1018:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1949,
															"id": 1956,
															"nodeType": "Return",
															"src": "1029:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1959,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "1074:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1960,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1943,
																		"src": "1078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1962,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1949,
														"id": 1963,
														"nodeType": "Return",
														"src": "1060:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "924:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:12"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "969:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1945,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "975:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:12"
									},
									"scope": 2949,
									"src": "908:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "1283:417:12",
										"statements": [
											{
												"id": 2006,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1978,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1969,
																"src": "1551:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1985,
														"nodeType": "IfStatement",
														"src": "1547:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1983,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1977,
															"id": 1984,
															"nodeType": "Return",
															"src": "1559:16:12"
														}
													},
													{
														"assignments": [
															1987
														],
														"declarations": [
															{
																"constant": false,
																"id": 1987,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "1589:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1986,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1991,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1988,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1969,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1989,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1992,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "1624:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1993,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "1628:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1995,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "1633:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2001,
														"nodeType": "IfStatement",
														"src": "1620:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1999,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1977,
															"id": 2000,
															"nodeType": "Return",
															"src": "1636:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2003,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "1681:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2004,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1977,
														"id": 2005,
														"nodeType": "Return",
														"src": "1667:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1223:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1234:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:12"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1973,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:12"
									},
									"scope": 2949,
									"src": "1207:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "1887:114:12",
										"statements": [
											{
												"id": 2034,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2020,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "1925:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2027,
														"nodeType": "IfStatement",
														"src": "1921:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2025,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2019,
															"id": 2026,
															"nodeType": "Return",
															"src": "1933:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2029,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "1978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2030,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2013,
																		"src": "1982:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2032,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2019,
														"id": 2033,
														"nodeType": "Return",
														"src": "1964:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "1827:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "1838:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:12"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "1872:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2015,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "1878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:12"
									},
									"scope": 2949,
									"src": "1811:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "2198:114:12",
										"statements": [
											{
												"id": 2062,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2048,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2041,
																"src": "2236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2055,
														"nodeType": "IfStatement",
														"src": "2232:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2053,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2047,
															"id": 2054,
															"nodeType": "Return",
															"src": "2244:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2057,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2039,
																		"src": "2289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2058,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "2293:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2060,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2047,
														"id": 2061,
														"nodeType": "Return",
														"src": "2275:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2138:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2149:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:12"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2183:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2043,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2189:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:12"
									},
									"scope": 2949,
									"src": "2122:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "2449:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2074,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "2466:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2075,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2069,
															"src": "2470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2078,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2069,
														"src": "2478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:12",
													"trueExpression": {
														"id": 2077,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2067,
														"src": "2474:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2073,
												"id": 2080,
												"nodeType": "Return",
												"src": "2459:20:12"
											}
										]
									},
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "2395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "2406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:12"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "2440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:12"
									},
									"scope": 2949,
									"src": "2382:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "2624:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2092,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "2641:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2093,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "2645:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2096,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2087,
														"src": "2653:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:12",
													"trueExpression": {
														"id": 2095,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2085,
														"src": "2649:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2091,
												"id": 2098,
												"nodeType": "Return",
												"src": "2634:20:12"
											}
										]
									},
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "2570:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "2581:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:12"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "2615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:12"
									},
									"scope": 2949,
									"src": "2557:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "2845:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2110,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2103,
																	"src": "2900:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2111,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2105,
																	"src": "2904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2113,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2114,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2103,
																		"src": "2910:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2115,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2105,
																		"src": "2914:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2117,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2109,
												"id": 2121,
												"nodeType": "Return",
												"src": "2892:28:12"
											}
										]
									},
									"documentation": {
										"id": 2101,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "2791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "2802:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:12"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "2836:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:12"
									},
									"scope": 2949,
									"src": "2774:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "3219:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2133,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "3233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2141,
												"nodeType": "IfStatement",
												"src": "3229:127:12",
												"trueBody": {
													"id": 2140,
													"nodeType": "Block",
													"src": "3241:115:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2136,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2126,
																	"src": "3340:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2137,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "3344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2132,
															"id": 2139,
															"nodeType": "Return",
															"src": "3333:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2142,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "3444:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2146,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "3458:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2150,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2132,
												"id": 2155,
												"nodeType": "Return",
												"src": "3437:35:12"
											}
										]
									},
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "3165:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "3176:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:12"
									},
									"returnParameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "3210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:12"
									},
									"scope": 2949,
									"src": "3148:331:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2282,
										"nodeType": "Block",
										"src": "3901:4018:12",
										"statements": [
											{
												"id": 2281,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:12",
												"statements": [
													{
														"assignments": [
															2170
														],
														"declarations": [
															{
																"constant": false,
																"id": 2170,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2281,
																"src": "4232:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2169,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2174,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2171,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2160,
																"src": "4248:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2172,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2162,
																"src": "4252:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:12"
													},
													{
														"assignments": [
															2176
														],
														"declarations": [
															{
																"constant": false,
																"id": 2176,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2281,
																"src": "4312:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2175,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2177,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:12"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:12",
															"nodeType": "YulBlock",
															"src": "4392:122:12",
															"statements": [
																{
																	"nativeSrc": "4410:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:12"
																				},
																				"nativeSrc": "4433:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:12"
																		},
																		"nativeSrc": "4420:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:12",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:12",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:12"
																				},
																				"nativeSrc": "4470:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:12"
																				},
																				"nativeSrc": "4486:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:12"
																		},
																		"nativeSrc": "4466:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2170,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2170,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2176,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2160,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2162,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:12",
																"valueSize": 1
															}
														],
														"id": 2178,
														"nodeType": "InlineAssembly",
														"src": "4383:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2179,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "4595:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2187,
														"nodeType": "IfStatement",
														"src": "4591:368:12",
														"trueBody": {
															"id": 2186,
															"nodeType": "Block",
															"src": "4607:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2182,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2170,
																			"src": "4925:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2183,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2164,
																			"src": "4933:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2168,
																	"id": 2185,
																	"nodeType": "Return",
																	"src": "4918:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2188,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2164,
																"src": "5065:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2189,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "5080:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2195,
														"nodeType": "IfStatement",
														"src": "5061:88:12",
														"trueBody": {
															"id": 2194,
															"nodeType": "Block",
															"src": "5087:62:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2191,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1901,
																			"src": "5112:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2193,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2197
														],
														"declarations": [
															{
																"constant": false,
																"id": 2197,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2281,
																"src": "5404:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2196,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2198,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:12"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:12",
															"nodeType": "YulBlock",
															"src": "5444:291:12",
															"statements": [
																{
																	"nativeSrc": "5513:38:12",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		},
																		"nativeSrc": "5526:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:12",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:12"
																				},
																				"nativeSrc": "5653:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nativeSrc": "5642:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:12",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:12"
																		},
																		"nativeSrc": "5700:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2164,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2170,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2170,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2170,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2176,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2176,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2197,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2197,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2197,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2160,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2162,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:12",
																"valueSize": 1
															}
														],
														"id": 2199,
														"nodeType": "InlineAssembly",
														"src": "5435:300:12"
													},
													{
														"assignments": [
															2201
														],
														"declarations": [
															{
																"constant": false,
																"id": 2201,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2281,
																"src": "5939:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2200,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2208,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2202,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2164,
																"src": "5954:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2204,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2164,
																			"src": "5973:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2206,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:12"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:12",
															"nodeType": "YulBlock",
															"src": "6008:362:12",
															"statements": [
																{
																	"nativeSrc": "6073:37:12",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:12"
																		},
																		"nativeSrc": "6088:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:12",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:12"
																		},
																		"nativeSrc": "6186:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:12",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:12"
																						},
																						"nativeSrc": "6333:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:12"
																				},
																				"nativeSrc": "6329:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:12"
																		},
																		"nativeSrc": "6325:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2164,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2164,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2170,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2170,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2201,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2201,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2201,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2201,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2201,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:12",
																"valueSize": 1
															}
														],
														"id": 2209,
														"nodeType": "InlineAssembly",
														"src": "5999:371:12"
													},
													{
														"expression": {
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2210,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2170,
																"src": "6436:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2211,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "6445:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2212,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "6453:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2215,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:12"
													},
													{
														"assignments": [
															2217
														],
														"declarations": [
															{
																"constant": false,
																"id": 2217,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2281,
																"src": "6775:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2216,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2224,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2219,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2164,
																			"src": "6798:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2221,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:12"
													},
													{
														"expression": {
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2225,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2217,
																"src": "7031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2227,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2164,
																		"src": "7046:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2228,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2217,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2232,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:12"
													},
													{
														"expression": {
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2233,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2217,
																"src": "7100:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2235,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2164,
																		"src": "7115:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2236,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2217,
																		"src": "7129:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2240,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:12"
													},
													{
														"expression": {
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2241,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2217,
																"src": "7170:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2243,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2164,
																		"src": "7185:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2244,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2217,
																		"src": "7199:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2248,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:12"
													},
													{
														"expression": {
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2249,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2217,
																"src": "7240:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2251,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2164,
																		"src": "7255:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2252,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2217,
																		"src": "7269:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2256,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:12"
													},
													{
														"expression": {
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2257,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2217,
																"src": "7310:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2259,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2164,
																		"src": "7325:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2260,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2217,
																		"src": "7339:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2264,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:12"
													},
													{
														"expression": {
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2265,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2217,
																"src": "7381:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2267,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2164,
																		"src": "7396:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2268,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2217,
																		"src": "7410:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2272,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:12"
													},
													{
														"expression": {
															"id": 2277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2273,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "7851:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2274,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "7860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2275,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "7868:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2278,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:12"
													},
													{
														"expression": {
															"id": 2279,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "7896:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2168,
														"id": 2280,
														"nodeType": "Return",
														"src": "7889:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "3819:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "3830:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "3841:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:12"
									},
									"returnParameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "3885:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:12"
									},
									"scope": 2949,
									"src": "3803:4116:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "8161:192:12",
										"statements": [
											{
												"assignments": [
													2299
												],
												"declarations": [
													{
														"constant": false,
														"id": 2299,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2325,
														"src": "8171:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2305,
												"initialValue": {
													"arguments": [
														{
															"id": 2301,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2286,
															"src": "8195:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2302,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2288,
															"src": "8198:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2303,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2290,
															"src": "8201:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2300,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2283,
															2326
														],
														"referencedDeclaration": 2283,
														"src": "8188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2307,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "8244:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1906",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1906",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2306,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2948,
															"src": "8227:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1906_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2310,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2286,
																	"src": "8264:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2311,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2288,
																	"src": "8267:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2312,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2290,
																	"src": "8270:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2309,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2322,
												"nodeType": "IfStatement",
												"src": "8223:101:12",
												"trueBody": {
													"id": 2321,
													"nodeType": "Block",
													"src": "8288:36:12",
													"statements": [
														{
															"expression": {
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2317,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2299,
																	"src": "8302:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2320,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2323,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2299,
													"src": "8340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2297,
												"id": 2324,
												"nodeType": "Return",
												"src": "8333:13:12"
											}
										]
									},
									"documentation": {
										"id": 2284,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "8067:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "8078:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "8089:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "8110:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1906",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2291,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1906,
														"src": "8110:8:12"
													},
													"referencedDeclaration": 1906,
													"src": "8110:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1906",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:12"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "8152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:12"
									},
									"scope": 2949,
									"src": "8051:302:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2437,
										"nodeType": "Block",
										"src": "8644:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2334,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2329,
														"src": "8658:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2340,
												"nodeType": "IfStatement",
												"src": "8654:45:12",
												"trueBody": {
													"id": 2339,
													"nodeType": "Block",
													"src": "8666:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2333,
															"id": 2338,
															"nodeType": "Return",
															"src": "8680:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2342
												],
												"declarations": [
													{
														"constant": false,
														"id": 2342,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2437,
														"src": "9378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2341,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2351,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2345,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2329,
																			"src": "9406:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2344,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2605,
																			2640
																		],
																		"referencedDeclaration": 2605,
																		"src": "9401:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2349,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:12"
											},
											{
												"id": 2436,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:12",
												"statements": [
													{
														"expression": {
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2352,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "9839:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2353,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2342,
																				"src": "9849:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2354,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2329,
																					"src": "9858:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2355,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2342,
																					"src": "9862:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2358,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2362,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:12"
													},
													{
														"expression": {
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2363,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "9888:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2364,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2342,
																				"src": "9898:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2365,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2329,
																					"src": "9907:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2366,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2342,
																					"src": "9911:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2369,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2373,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:12"
													},
													{
														"expression": {
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2374,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "9937:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2375,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2342,
																				"src": "9947:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2376,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2329,
																					"src": "9956:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2377,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2342,
																					"src": "9960:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2380,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2384,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:12"
													},
													{
														"expression": {
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2385,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "9986:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2386,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2342,
																				"src": "9996:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2389,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2387,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2329,
																					"src": "10005:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2388,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2342,
																					"src": "10009:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2391,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2395,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:12"
													},
													{
														"expression": {
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2396,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "10035:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2397,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2342,
																				"src": "10045:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2398,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2329,
																					"src": "10054:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2399,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2342,
																					"src": "10058:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2402,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2406,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:12"
													},
													{
														"expression": {
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2407,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "10084:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2408,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2342,
																				"src": "10094:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2409,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2329,
																					"src": "10103:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2410,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2342,
																					"src": "10107:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2413,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2417,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:12"
													},
													{
														"expression": {
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2418,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "10133:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2419,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2342,
																				"src": "10143:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2420,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2329,
																					"src": "10152:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2421,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2342,
																					"src": "10156:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2424,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2428,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2430,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2342,
																	"src": "10193:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2431,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2329,
																		"src": "10201:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2432,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2342,
																		"src": "10205:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2429,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2100,
																"src": "10189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2333,
														"id": 2435,
														"nodeType": "Return",
														"src": "10182:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "8601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:12"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "8635:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:12"
									},
									"scope": 2949,
									"src": "8587:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2472,
										"nodeType": "Block",
										"src": "10405:164:12",
										"statements": [
											{
												"id": 2471,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:12",
												"statements": [
													{
														"assignments": [
															2450
														],
														"declarations": [
															{
																"constant": false,
																"id": 2450,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2471,
																"src": "10439:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2449,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2454,
														"initialValue": {
															"arguments": [
																{
																	"id": 2452,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2441,
																	"src": "10461:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2451,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2438,
																	2473
																],
																"referencedDeclaration": 2438,
																"src": "10456:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2455,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2450,
																"src": "10484:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2457,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2444,
																						"src": "10511:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1906",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1906",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2456,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2948,
																					"src": "10494:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1906_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2461,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2459,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2450,
																						"src": "10524:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2460,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2450,
																						"src": "10533:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2462,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2441,
																					"src": "10542:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2468,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2448,
														"id": 2470,
														"nodeType": "Return",
														"src": "10477:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2439,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "10343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "10354:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1906",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2443,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2442,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1906,
														"src": "10354:8:12"
													},
													"referencedDeclaration": 1906,
													"src": "10354:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1906",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:12"
									},
									"returnParameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "10396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:12"
									},
									"scope": 2949,
									"src": "10329:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2604,
										"nodeType": "Block",
										"src": "10760:922:12",
										"statements": [
											{
												"assignments": [
													2482
												],
												"declarations": [
													{
														"constant": false,
														"id": 2482,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2604,
														"src": "10770:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2481,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2484,
												"initialValue": {
													"hexValue": "30",
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:12"
											},
											{
												"id": 2601,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2485,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "10826:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2499,
														"nodeType": "IfStatement",
														"src": "10822:99:12",
														"trueBody": {
															"id": 2498,
															"nodeType": "Block",
															"src": "10844:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2490,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2476,
																			"src": "10862:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2493,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:12"
																},
																{
																	"expression": {
																		"id": 2496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2494,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2482,
																			"src": "10893:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2497,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2500,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "10938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2514,
														"nodeType": "IfStatement",
														"src": "10934:96:12",
														"trueBody": {
															"id": 2513,
															"nodeType": "Block",
															"src": "10955:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2505,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2476,
																			"src": "10973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2508,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:12"
																},
																{
																	"expression": {
																		"id": 2511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2509,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2482,
																			"src": "11003:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2512,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2515,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "11047:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2529,
														"nodeType": "IfStatement",
														"src": "11043:96:12",
														"trueBody": {
															"id": 2528,
															"nodeType": "Block",
															"src": "11064:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2520,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2476,
																			"src": "11082:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2523,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:12"
																},
																{
																	"expression": {
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2524,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2482,
																			"src": "11112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2527,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2530,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "11156:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2544,
														"nodeType": "IfStatement",
														"src": "11152:96:12",
														"trueBody": {
															"id": 2543,
															"nodeType": "Block",
															"src": "11173:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2535,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2476,
																			"src": "11191:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2538,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:12"
																},
																{
																	"expression": {
																		"id": 2541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2539,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2482,
																			"src": "11221:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2542,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2545,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "11265:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2559,
														"nodeType": "IfStatement",
														"src": "11261:93:12",
														"trueBody": {
															"id": 2558,
															"nodeType": "Block",
															"src": "11281:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2550,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2476,
																			"src": "11299:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2553,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:12"
																},
																{
																	"expression": {
																		"id": 2556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2554,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2482,
																			"src": "11328:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2557,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2560,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "11371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2574,
														"nodeType": "IfStatement",
														"src": "11367:93:12",
														"trueBody": {
															"id": 2573,
															"nodeType": "Block",
															"src": "11387:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2476,
																			"src": "11405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2568,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:12"
																},
																{
																	"expression": {
																		"id": 2571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2569,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2482,
																			"src": "11434:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2572,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2575,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "11477:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2589,
														"nodeType": "IfStatement",
														"src": "11473:93:12",
														"trueBody": {
															"id": 2588,
															"nodeType": "Block",
															"src": "11493:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2580,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2476,
																			"src": "11511:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2583,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:12"
																},
																{
																	"expression": {
																		"id": 2586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2584,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2482,
																			"src": "11540:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2587,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2590,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "11583:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2600,
														"nodeType": "IfStatement",
														"src": "11579:64:12",
														"trueBody": {
															"id": 2599,
															"nodeType": "Block",
															"src": "11599:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2595,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2482,
																			"src": "11617:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2598,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2602,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2482,
													"src": "11669:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2480,
												"id": 2603,
												"nodeType": "Return",
												"src": "11662:13:12"
											}
										]
									},
									"documentation": {
										"id": 2474,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "10713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:12"
									},
									"returnParameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "10751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:12"
									},
									"scope": 2949,
									"src": "10699:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2639,
										"nodeType": "Block",
										"src": "11915:168:12",
										"statements": [
											{
												"id": 2638,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:12",
												"statements": [
													{
														"assignments": [
															2617
														],
														"declarations": [
															{
																"constant": false,
																"id": 2617,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2638,
																"src": "11949:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2616,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2621,
														"initialValue": {
															"arguments": [
																{
																	"id": 2619,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2608,
																	"src": "11971:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2618,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2605,
																	2640
																],
																"referencedDeclaration": 2605,
																"src": "11966:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2622,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2617,
																"src": "11998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2624,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2611,
																						"src": "12025:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1906",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1906",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2623,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2948,
																					"src": "12008:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1906_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2625,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2628,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2626,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2627,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2617,
																						"src": "12043:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2629,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2608,
																					"src": "12052:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2635,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2615,
														"id": 2637,
														"nodeType": "Return",
														"src": "11991:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2606,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "11849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "11864:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1906",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2609,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1906,
														"src": "11864:8:12"
													},
													"referencedDeclaration": 1906,
													"src": "11864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1906",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:12"
									},
									"returnParameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "11906:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:12"
									},
									"scope": 2949,
									"src": "11835:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2768,
										"nodeType": "Block",
										"src": "12276:854:12",
										"statements": [
											{
												"assignments": [
													2649
												],
												"declarations": [
													{
														"constant": false,
														"id": 2649,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2768,
														"src": "12286:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2648,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2651,
												"initialValue": {
													"hexValue": "30",
													"id": 2650,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:12"
											},
											{
												"id": 2765,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2652,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2643,
																"src": "12342:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2668,
														"nodeType": "IfStatement",
														"src": "12338:103:12",
														"trueBody": {
															"id": 2667,
															"nodeType": "Block",
															"src": "12361:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2657,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2643,
																			"src": "12379:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2662,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:12"
																},
																{
																	"expression": {
																		"id": 2665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2663,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2649,
																			"src": "12414:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2666,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2669,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2643,
																"src": "12458:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2685,
														"nodeType": "IfStatement",
														"src": "12454:103:12",
														"trueBody": {
															"id": 2684,
															"nodeType": "Block",
															"src": "12477:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2674,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2643,
																			"src": "12495:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2679,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:12"
																},
																{
																	"expression": {
																		"id": 2682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2680,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2649,
																			"src": "12530:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2683,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2686,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2643,
																"src": "12574:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2702,
														"nodeType": "IfStatement",
														"src": "12570:103:12",
														"trueBody": {
															"id": 2701,
															"nodeType": "Block",
															"src": "12593:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2691,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2643,
																			"src": "12611:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2696,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:12"
																},
																{
																	"expression": {
																		"id": 2699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2697,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2649,
																			"src": "12646:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2700,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2703,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2643,
																"src": "12690:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2719,
														"nodeType": "IfStatement",
														"src": "12686:100:12",
														"trueBody": {
															"id": 2718,
															"nodeType": "Block",
															"src": "12708:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2708,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2643,
																			"src": "12726:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2713,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:12"
																},
																{
																	"expression": {
																		"id": 2716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2714,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2649,
																			"src": "12760:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2717,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2720,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2643,
																"src": "12803:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2736,
														"nodeType": "IfStatement",
														"src": "12799:100:12",
														"trueBody": {
															"id": 2735,
															"nodeType": "Block",
															"src": "12821:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2725,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2643,
																			"src": "12839:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2730,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:12"
																},
																{
																	"expression": {
																		"id": 2733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2731,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2649,
																			"src": "12873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2734,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2737,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2643,
																"src": "12916:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2753,
														"nodeType": "IfStatement",
														"src": "12912:100:12",
														"trueBody": {
															"id": 2752,
															"nodeType": "Block",
															"src": "12934:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2742,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2643,
																			"src": "12952:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2747,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:12"
																},
																{
																	"expression": {
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2748,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2649,
																			"src": "12986:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2751,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2754,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2643,
																"src": "13029:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2764,
														"nodeType": "IfStatement",
														"src": "13025:66:12",
														"trueBody": {
															"id": 2763,
															"nodeType": "Block",
															"src": "13047:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2759,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2649,
																			"src": "13065:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2762,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2766,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2649,
													"src": "13117:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2647,
												"id": 2767,
												"nodeType": "Return",
												"src": "13110:13:12"
											}
										]
									},
									"documentation": {
										"id": 2641,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "12229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:12"
									},
									"returnParameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "12267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:12"
									},
									"scope": 2949,
									"src": "12214:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2803,
										"nodeType": "Block",
										"src": "13365:170:12",
										"statements": [
											{
												"id": 2802,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:12",
												"statements": [
													{
														"assignments": [
															2781
														],
														"declarations": [
															{
																"constant": false,
																"id": 2781,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2802,
																"src": "13399:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2780,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2785,
														"initialValue": {
															"arguments": [
																{
																	"id": 2783,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2772,
																	"src": "13422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2782,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2769,
																	2804
																],
																"referencedDeclaration": 2769,
																"src": "13416:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2786,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2781,
																"src": "13449:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2788,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2775,
																						"src": "13476:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1906",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1906",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2787,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2948,
																					"src": "13459:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1906_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2790,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2791,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2781,
																						"src": "13495:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2793,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2772,
																					"src": "13504:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2799,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2779,
														"id": 2801,
														"nodeType": "Return",
														"src": "13442:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2770,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "13299:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "13314:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1906",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2774,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2773,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1906,
														"src": "13314:8:12"
													},
													"referencedDeclaration": 1906,
													"src": "13314:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1906",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:12"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "13356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:12"
									},
									"scope": 2949,
									"src": "13284:251:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2890,
										"nodeType": "Block",
										"src": "13855:600:12",
										"statements": [
											{
												"assignments": [
													2813
												],
												"declarations": [
													{
														"constant": false,
														"id": 2813,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2890,
														"src": "13865:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2812,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2815,
												"initialValue": {
													"hexValue": "30",
													"id": 2814,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:12"
											},
											{
												"id": 2887,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2816,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2807,
																	"src": "13921:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2830,
														"nodeType": "IfStatement",
														"src": "13917:98:12",
														"trueBody": {
															"id": 2829,
															"nodeType": "Block",
															"src": "13939:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2821,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2807,
																			"src": "13957:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2824,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:12"
																},
																{
																	"expression": {
																		"id": 2827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2825,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2813,
																			"src": "13988:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2828,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2831,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2807,
																	"src": "14032:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2845,
														"nodeType": "IfStatement",
														"src": "14028:95:12",
														"trueBody": {
															"id": 2844,
															"nodeType": "Block",
															"src": "14049:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2836,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2807,
																			"src": "14067:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2839,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:12"
																},
																{
																	"expression": {
																		"id": 2842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2840,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2813,
																			"src": "14097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2843,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2846,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2807,
																	"src": "14140:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2860,
														"nodeType": "IfStatement",
														"src": "14136:95:12",
														"trueBody": {
															"id": 2859,
															"nodeType": "Block",
															"src": "14157:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2851,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2807,
																			"src": "14175:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2854,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:12"
																},
																{
																	"expression": {
																		"id": 2857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2855,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2813,
																			"src": "14205:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2858,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2861,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2807,
																	"src": "14248:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2875,
														"nodeType": "IfStatement",
														"src": "14244:95:12",
														"trueBody": {
															"id": 2874,
															"nodeType": "Block",
															"src": "14265:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2866,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2807,
																			"src": "14283:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2869,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:12"
																},
																{
																	"expression": {
																		"id": 2872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2870,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2813,
																			"src": "14313:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2873,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2876,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2807,
																	"src": "14356:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2886,
														"nodeType": "IfStatement",
														"src": "14352:64:12",
														"trueBody": {
															"id": 2885,
															"nodeType": "Block",
															"src": "14372:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2881,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2813,
																			"src": "14390:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2884,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2888,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2813,
													"src": "14442:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2811,
												"id": 2889,
												"nodeType": "Return",
												"src": "14435:13:12"
											}
										]
									},
									"documentation": {
										"id": 2805,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "13808:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:12"
									},
									"returnParameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "13846:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:12"
									},
									"scope": 2949,
									"src": "13792:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2928,
										"nodeType": "Block",
										"src": "14692:177:12",
										"statements": [
											{
												"id": 2927,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:12",
												"statements": [
													{
														"assignments": [
															2903
														],
														"declarations": [
															{
																"constant": false,
																"id": 2903,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2927,
																"src": "14726:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2902,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2907,
														"initialValue": {
															"arguments": [
																{
																	"id": 2905,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2894,
																	"src": "14750:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2904,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2891,
																	2929
																],
																"referencedDeclaration": 2891,
																"src": "14743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2908,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2903,
																"src": "14777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2910,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2897,
																						"src": "14804:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1906",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1906",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2909,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2948,
																					"src": "14787:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1906_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2917,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2912,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2915,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2913,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2903,
																									"src": "14823:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2914,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2916,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2918,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2894,
																					"src": "14838:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2924,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2901,
														"id": 2926,
														"nodeType": "Return",
														"src": "14770:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2892,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "14626:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "14641:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1906",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2896,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2895,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1906,
														"src": "14641:8:12"
													},
													"referencedDeclaration": 1906,
													"src": "14641:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1906",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:12"
									},
									"returnParameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "14683:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:12"
									},
									"scope": 2949,
									"src": "14610:259:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2947,
										"nodeType": "Block",
										"src": "15067:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2940,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2933,
																	"src": "15090:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1906",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1906",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2938,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2937,
												"id": 2946,
												"nodeType": "Return",
												"src": "15077:31:12"
											}
										]
									},
									"documentation": {
										"id": 2930,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "15019:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1906",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2932,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2931,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1906,
														"src": "15019:8:12"
													},
													"referencedDeclaration": 1906,
													"src": "15019:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1906",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:12"
									},
									"returnParameters": {
										"id": 2937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "15061:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:12"
									},
									"scope": 2949,
									"src": "14993:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2950,
							"src": "203:14914:12",
							"usedErrors": [
								1901
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3054
						]
					},
					"id": 3055,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2952,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3054,
							"linearizedBaseContracts": [
								3054
							],
							"name": "SignedMath",
							"nameLocation": "224:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2969,
										"nodeType": "Block",
										"src": "376:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2962,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2955,
															"src": "393:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2963,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2957,
															"src": "397:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2966,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2957,
														"src": "405:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:13",
													"trueExpression": {
														"id": 2965,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2955,
														"src": "401:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2961,
												"id": 2968,
												"nodeType": "Return",
												"src": "386:20:13"
											}
										]
									},
									"documentation": {
										"id": 2953,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "325:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2954,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "335:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2956,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:13"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "368:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2959,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:13"
									},
									"scope": 3054,
									"src": "312:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2987,
										"nodeType": "Block",
										"src": "555:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2980,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2973,
															"src": "572:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2981,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2975,
															"src": "576:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2984,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2975,
														"src": "584:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:13",
													"trueExpression": {
														"id": 2983,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "580:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2979,
												"id": 2986,
												"nodeType": "Return",
												"src": "565:20:13"
											}
										]
									},
									"documentation": {
										"id": 2971,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "504:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2972,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "514:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2974,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:13"
									},
									"returnParameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "547:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2977,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:13"
									},
									"scope": 3054,
									"src": "491:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3031,
										"nodeType": "Block",
										"src": "797:162:13",
										"statements": [
											{
												"assignments": [
													2999
												],
												"declarations": [
													{
														"constant": false,
														"id": 2999,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 3031,
														"src": "859:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2998,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3012,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3000,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2991,
																	"src": "871:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3001,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2993,
																	"src": "875:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3003,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3004,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2991,
																				"src": "882:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3005,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2993,
																				"src": "886:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3007,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3010,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3013,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2999,
														"src": "911:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3018,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2999,
																						"src": "931:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3017,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3016,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3014,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3023,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2991,
																				"src": "945:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3024,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2993,
																				"src": "949:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3026,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3028,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2997,
												"id": 3030,
												"nodeType": "Return",
												"src": "904:48:13"
											}
										]
									},
									"documentation": {
										"id": 2989,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2991,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "746:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2990,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "756:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2992,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:13"
									},
									"returnParameters": {
										"id": 2997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "789:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2995,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:13"
									},
									"scope": 3054,
									"src": "729:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3052,
										"nodeType": "Block",
										"src": "1103:158:13",
										"statements": [
											{
												"id": 3051,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3042,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3035,
																			"src": "1228:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:13",
																		"subExpression": {
																			"id": 3046,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3035,
																			"src": "1242:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:13",
																	"trueExpression": {
																		"id": 3045,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3035,
																		"src": "1237:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3040,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3039,
														"id": 3050,
														"nodeType": "Return",
														"src": "1213:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3033,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3053,
												"src": "1061:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3034,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:13"
									},
									"returnParameters": {
										"id": 3039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3053,
												"src": "1094:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:13"
									},
									"scope": 3054,
									"src": "1048:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3055,
							"src": "216:1047:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:13"
				},
				"id": 13
			},
			"NFT Tokens/Tk8.sol": {
				"ast": {
					"absolutePath": "NFT Tokens/Tk8.sol",
					"exportedSymbols": {
						"Context": [
							1604
						],
						"DynamicArtNFT": [
							3304
						],
						"ERC165": [
							1883
						],
						"ERC721": [
							1411
						],
						"IERC165": [
							1895
						],
						"IERC721": [
							1528
						],
						"IERC721Errors": [
							355
						],
						"IERC721Metadata": [
							1574
						],
						"IERC721Receiver": [
							1546
						],
						"LinkTokenInterface": [
							265
						],
						"Strings": [
							1859
						],
						"VRFConsumerBase": [
							120
						],
						"VRFRequestIDBase": [
							170
						]
					},
					"id": 3305,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3056,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:14"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
							"file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
							"id": 3057,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3305,
							"sourceUnit": 121,
							"src": "59:59:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3058,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3305,
							"sourceUnit": 1412,
							"src": "119:57:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3059,
										"name": "VRFConsumerBase",
										"nameLocations": [
											"204:15:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 120,
										"src": "204:15:14"
									},
									"id": 3060,
									"nodeType": "InheritanceSpecifier",
									"src": "204:15:14"
								},
								{
									"baseName": {
										"id": 3061,
										"name": "ERC721",
										"nameLocations": [
											"221:6:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1411,
										"src": "221:6:14"
									},
									"id": 3062,
									"nodeType": "InheritanceSpecifier",
									"src": "221:6:14"
								}
							],
							"canonicalName": "DynamicArtNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3304,
							"linearizedBaseContracts": [
								3304,
								1411,
								355,
								1574,
								1528,
								1883,
								1895,
								1604,
								120,
								170
							],
							"name": "DynamicArtNFT",
							"nameLocation": "187:13:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a3e56fa8",
									"id": 3064,
									"mutability": "mutable",
									"name": "vrfCoordinator",
									"nameLocation": "257:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "234:37:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 3063,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "234:15:14",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "57970e93",
									"id": 3066,
									"mutability": "mutable",
									"name": "linkToken",
									"nameLocation": "292:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "277:24:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3065,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "277:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 3069,
									"mutability": "constant",
									"name": "keyHash",
									"nameLocation": "332:7:14",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "307:101:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3067,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "307:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307831323334353637383930616263646566313233343536373839306162636465663132333435363738393061626364656631323334353637383930616263646566",
										"id": 3068,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "342:66:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8234104122482341265491137074636836252947884782870784360943022469005013929455_by_1",
											"typeString": "int_const 8234...(68 digits omitted)...9455"
										},
										"value": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ddca3f43",
									"id": 3071,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "429:3:14",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "414:18:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3070,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "414:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f68016b7",
									"id": 3073,
									"mutability": "mutable",
									"name": "gasLimit",
									"nameLocation": "453:8:14",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "438:23:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3072,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eb2e578b",
									"id": 3075,
									"mutability": "mutable",
									"name": "requestFee",
									"nameLocation": "482:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "467:25:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3074,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "467:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4eb7e95f",
									"id": 3077,
									"mutability": "mutable",
									"name": "totalNFTsMinted",
									"nameLocation": "513:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "498:30:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3076,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "498:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e84b3ad0",
									"id": 3079,
									"mutability": "mutable",
									"name": "baseArtwork",
									"nameLocation": "548:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "534:25:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3078,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "534:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d72225b",
									"id": 3082,
									"mutability": "mutable",
									"name": "traits",
									"nameLocation": "581:6:14",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "565:22:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
										"typeString": "string[]"
									},
									"typeName": {
										"baseType": {
											"id": 3080,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "565:6:14",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"id": 3081,
										"nodeType": "ArrayTypeName",
										"src": "565:8:14",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
											"typeString": "string[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5ed5b5af",
									"id": 3087,
									"mutability": "mutable",
									"name": "nftTraits",
									"nameLocation": "631:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "598:42:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
										"typeString": "mapping(uint256 => string[])"
									},
									"typeName": {
										"id": 3086,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3083,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "606:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "598:25:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
											"typeString": "mapping(uint256 => string[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 3084,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "614:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"id": 3085,
											"nodeType": "ArrayTypeName",
											"src": "614:8:14",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
												"typeString": "string[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "65f952dd632608f6d1db9e9311e0972e973f6e783ba47c13460083c575bf07f3",
									"id": 3094,
									"name": "NFTMinted",
									"nameLocation": "653:9:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3089,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "668:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "663:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3088,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "663:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3092,
												"indexed": false,
												"mutability": "mutable",
												"name": "traits",
												"nameLocation": "686:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "677:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 3090,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "677:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 3091,
													"nodeType": "ArrayTypeName",
													"src": "677:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:31:14"
									},
									"src": "647:47:14"
								},
								{
									"body": {
										"id": 3137,
										"nodeType": "Block",
										"src": "920:175:14",
										"statements": [
											{
												"expression": {
													"id": 3115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3113,
														"name": "vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3064,
														"src": "930:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3114,
														"name": "_vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3096,
														"src": "947:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "930:32:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 3116,
												"nodeType": "ExpressionStatement",
												"src": "930:32:14"
											},
											{
												"expression": {
													"id": 3119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3117,
														"name": "linkToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3066,
														"src": "972:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3118,
														"name": "_linkToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3098,
														"src": "984:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "972:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3120,
												"nodeType": "ExpressionStatement",
												"src": "972:22:14"
											},
											{
												"expression": {
													"id": 3123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3121,
														"name": "gasLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3073,
														"src": "1004:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3122,
														"name": "_gasLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3100,
														"src": "1015:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1004:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3124,
												"nodeType": "ExpressionStatement",
												"src": "1004:20:14"
											},
											{
												"expression": {
													"id": 3127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3125,
														"name": "requestFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3075,
														"src": "1034:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3126,
														"name": "_requestFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3102,
														"src": "1047:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1034:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3128,
												"nodeType": "ExpressionStatement",
												"src": "1034:24:14"
											},
											{
												"expression": {
													"id": 3135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3129,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3071,
														"src": "1068:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_100000000000000000_by_1",
															"typeString": "int_const 100000000000000000"
														},
														"id": 3134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "302e31",
															"id": 3130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1074:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_10",
																"typeString": "rational_const 1 / 10"
															},
															"value": "0.1"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 3133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1080:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 3132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1086:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "1080:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "1074:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000_by_1",
															"typeString": "int_const 100000000000000000"
														}
													},
													"src": "1068:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3136,
												"nodeType": "ExpressionStatement",
												"src": "1068:20:14"
											}
										]
									},
									"id": 3138,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3105,
													"name": "_vrfCoordinator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3096,
													"src": "859:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												{
													"id": 3106,
													"name": "_linkToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3098,
													"src": "876:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3107,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3104,
												"name": "VRFConsumerBase",
												"nameLocations": [
													"843:15:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 120,
												"src": "843:15:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "843:44:14"
										},
										{
											"arguments": [
												{
													"hexValue": "44796e616d69634172744e4654",
													"id": 3109,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "895:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_dacb8f84956ef6cfe7e83fb61227987a06ac7111461d857060c79dd2e4df6294",
														"typeString": "literal_string \"DynamicArtNFT\""
													},
													"value": "DynamicArtNFT"
												},
												{
													"hexValue": "44415254",
													"id": 3110,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "912:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_74d4880fc999a77360200772b9c01480318093f86f7496213e3c540e79399e5b",
														"typeString": "literal_string \"DART\""
													},
													"value": "DART"
												}
											],
											"id": 3111,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3108,
												"name": "ERC721",
												"nameLocations": [
													"888:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1411,
												"src": "888:6:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "888:31:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3096,
												"mutability": "mutable",
												"name": "_vrfCoordinator",
												"nameLocation": "737:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "721:31:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "721:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3098,
												"mutability": "mutable",
												"name": "_linkToken",
												"nameLocation": "770:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "762:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "_gasLimit",
												"nameLocation": "798:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "790:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "_requestFee",
												"nameLocation": "825:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "817:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:131:14"
									},
									"returnParameters": {
										"id": 3112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "920:0:14"
									},
									"scope": 3304,
									"src": "700:395:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3147,
										"nodeType": "Block",
										"src": "1159:38:14",
										"statements": [
											{
												"expression": {
													"id": 3145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3143,
														"name": "baseArtwork",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3079,
														"src": "1169:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3144,
														"name": "artwork",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3140,
														"src": "1183:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1169:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3146,
												"nodeType": "ExpressionStatement",
												"src": "1169:21:14"
											}
										]
									},
									"functionSelector": "7ba19512",
									"id": 3148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseArtwork",
									"nameLocation": "1114:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3140,
												"mutability": "mutable",
												"name": "artwork",
												"nameLocation": "1143:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3148,
												"src": "1129:21:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3139,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1129:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:23:14"
									},
									"returnParameters": {
										"id": 3142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1159:0:14"
									},
									"scope": 3304,
									"src": "1105:92:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3159,
										"nodeType": "Block",
										"src": "1249:35:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3156,
															"name": "trait",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3150,
															"src": "1271:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 3153,
															"name": "traits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3082,
															"src": "1259:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																"typeString": "string storage ref[] storage ref"
															}
														},
														"id": 3155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1266:4:14",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1259:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
															"typeString": "function (string storage ref[] storage pointer,string storage ref)"
														}
													},
													"id": 3157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1259:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3158,
												"nodeType": "ExpressionStatement",
												"src": "1259:18:14"
											}
										]
									},
									"functionSelector": "9cc8c69b",
									"id": 3160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addTrait",
									"nameLocation": "1212:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3150,
												"mutability": "mutable",
												"name": "trait",
												"nameLocation": "1235:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3160,
												"src": "1221:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1221:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:21:14"
									},
									"returnParameters": {
										"id": 3152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1249:0:14"
									},
									"scope": 3304,
									"src": "1203:81:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3183,
										"nodeType": "Block",
										"src": "1356:143:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3170,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1397:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DynamicArtNFT_$3304",
																					"typeString": "contract DynamicArtNFT"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DynamicArtNFT_$3304",
																					"typeString": "contract DynamicArtNFT"
																				}
																			],
																			"id": 3169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1389:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3168,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1389:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1389:13:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 3166,
																		"name": "LINK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 73,
																		"src": "1374:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LinkTokenInterface_$265",
																			"typeString": "contract LinkTokenInterface"
																		}
																	},
																	"id": 3167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1379:9:14",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 197,
																	"src": "1374:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 3172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1374:29:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3173,
																"name": "requestFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3075,
																"src": "1407:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1374:43:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768204c494e4b20746f6b656e73",
															"id": 3175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1419:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e6b1fab5e2902145d60af20d931dd202525df1dcee37251d6d34ca7cc4f7014",
																"typeString": "literal_string \"Not enough LINK tokens\""
															},
															"value": "Not enough LINK tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e6b1fab5e2902145d60af20d931dd202525df1dcee37251d6d34ca7cc4f7014",
																"typeString": "literal_string \"Not enough LINK tokens\""
															}
														],
														"id": 3165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1366:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1366:78:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3177,
												"nodeType": "ExpressionStatement",
												"src": "1366:78:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3179,
															"name": "keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3069,
															"src": "1479:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3180,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3071,
															"src": "1488:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3178,
														"name": "requestRandomness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1461:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,uint256) returns (bytes32)"
														}
													},
													"id": 3181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1461:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3164,
												"id": 3182,
												"nodeType": "Return",
												"src": "1454:38:14"
											}
										]
									},
									"functionSelector": "3ff6bc4e",
									"id": 3184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestRandomTraits",
									"nameLocation": "1299:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1318:2:14"
									},
									"returnParameters": {
										"id": 3164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3163,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "1345:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3184,
												"src": "1337:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3162,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1336:19:14"
									},
									"scope": 3304,
									"src": "1290:209:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										14
									],
									"body": {
										"id": 3289,
										"nodeType": "Block",
										"src": "1611:612:14",
										"statements": [
											{
												"assignments": [
													3193
												],
												"declarations": [
													{
														"constant": false,
														"id": 3193,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1629:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 3289,
														"src": "1621:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3192,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1621:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3197,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3194,
														"name": "totalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3077,
														"src": "1639:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 3195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1657:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1639:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1621:37:14"
											},
											{
												"assignments": [
													3202
												],
												"declarations": [
													{
														"constant": false,
														"id": 3202,
														"mutability": "mutable",
														"name": "randomTraits",
														"nameLocation": "1684:12:14",
														"nodeType": "VariableDeclaration",
														"scope": 3289,
														"src": "1668:28:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
															"typeString": "string[]"
														},
														"typeName": {
															"baseType": {
																"id": 3200,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1668:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string"
																}
															},
															"id": 3201,
															"nodeType": "ArrayTypeName",
															"src": "1668:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
																"typeString": "string[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3209,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3206,
																"name": "traits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3082,
																"src": "1712:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																	"typeString": "string storage ref[] storage ref"
																}
															},
															"id": 3207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1719:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1712:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1699:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3203,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1703:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string"
																}
															},
															"id": 3204,
															"nodeType": "ArrayTypeName",
															"src": "1703:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
																"typeString": "string[]"
															}
														}
													},
													"id": 3208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
														"typeString": "string memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1668:58:14"
											},
											{
												"assignments": [
													3214
												],
												"declarations": [
													{
														"constant": false,
														"id": 3214,
														"mutability": "mutable",
														"name": "randomWords",
														"nameLocation": "1762:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 3289,
														"src": "1745:28:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3212,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "1745:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3213,
															"nodeType": "ArrayTypeName",
															"src": "1745:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3220,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 3218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1790:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 3217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1776:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3215,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "1780:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3216,
															"nodeType": "ArrayTypeName",
															"src": "1780:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														}
													},
													"id": 3219,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1776:16:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1745:47:14"
											},
											{
												"expression": {
													"id": 3228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3221,
															"name": "randomWords",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3214,
															"src": "1802:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 3223,
														"indexExpression": {
															"hexValue": "30",
															"id": 3222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1814:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1802:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3226,
																"name": "randomness",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3188,
																"src": "1827:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1819:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 3224,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "1819:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 3227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1819:19:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1802:36:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3229,
												"nodeType": "ExpressionStatement",
												"src": "1802:36:14"
											},
											{
												"body": {
													"id": 3267,
													"nodeType": "Block",
													"src": "1898:157:14",
													"statements": [
														{
															"assignments": [
																3242
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3242,
																	"mutability": "mutable",
																	"name": "index",
																	"nameLocation": "1920:5:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 3267,
																	"src": "1912:13:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3241,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1912:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3258,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 3248,
																								"name": "randomWords",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3214,
																								"src": "1963:11:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																									"typeString": "bytes32[] memory"
																								}
																							},
																							"id": 3250,
																							"indexExpression": {
																								"hexValue": "30",
																								"id": 3249,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1975:1:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1963:14:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						{
																							"id": 3251,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3231,
																							"src": "1979:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 3246,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967295,
																							"src": "1946:3:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 3247,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "1950:12:14",
																						"memberName": "encodePacked",
																						"nodeType": "MemberAccess",
																						"src": "1946:16:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 3252,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1946:35:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 3245,
																				"name": "keccak256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967288,
																				"src": "1936:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (bytes memory) pure returns (bytes32)"
																				}
																			},
																			"id": 3253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1936:46:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 3244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1928:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3243,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1928:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1928:55:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"expression": {
																		"id": 3255,
																		"name": "traits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3082,
																		"src": "1986:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																			"typeString": "string storage ref[] storage ref"
																		}
																	},
																	"id": 3256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1993:6:14",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1986:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1928:71:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1912:87:14"
														},
														{
															"expression": {
																"id": 3265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3259,
																		"name": "randomTraits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3202,
																		"src": "2013:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"typeString": "string memory[] memory"
																		}
																	},
																	"id": 3261,
																	"indexExpression": {
																		"id": 3260,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3231,
																		"src": "2026:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2013:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3262,
																		"name": "traits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3082,
																		"src": "2031:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																			"typeString": "string storage ref[] storage ref"
																		}
																	},
																	"id": 3264,
																	"indexExpression": {
																		"id": 3263,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3242,
																		"src": "2038:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2031:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"src": "2013:31:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 3266,
															"nodeType": "ExpressionStatement",
															"src": "2013:31:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3234,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3231,
														"src": "1874:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3235,
															"name": "traits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3082,
															"src": "1878:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																"typeString": "string storage ref[] storage ref"
															}
														},
														"id": 3236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1885:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1878:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1874:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3268,
												"initializationExpression": {
													"assignments": [
														3231
													],
													"declarations": [
														{
															"constant": false,
															"id": 3231,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1867:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 3268,
															"src": "1862:6:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3230,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1862:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3233,
													"initialValue": {
														"hexValue": "30",
														"id": 3232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1871:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1862:10:14"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1893:3:14",
														"subExpression": {
															"id": 3238,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3231,
															"src": "1893:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3240,
													"nodeType": "ExpressionStatement",
													"src": "1893:3:14"
												},
												"nodeType": "ForStatement",
												"src": "1857:198:14"
											},
											{
												"expression": {
													"id": 3273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3269,
															"name": "nftTraits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3087,
															"src": "2073:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
																"typeString": "mapping(uint256 => string storage ref[] storage ref)"
															}
														},
														"id": 3271,
														"indexExpression": {
															"id": 3270,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3193,
															"src": "2083:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2073:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
															"typeString": "string storage ref[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3272,
														"name": "randomTraits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3202,
														"src": "2094:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
															"typeString": "string memory[] memory"
														}
													},
													"src": "2073:33:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
														"typeString": "string storage ref[] storage ref"
													}
												},
												"id": 3274,
												"nodeType": "ExpressionStatement",
												"src": "2073:33:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3276,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2122:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2126:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2122:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3278,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3193,
															"src": "2134:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3275,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "2116:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2116:26:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3280,
												"nodeType": "ExpressionStatement",
												"src": "2116:26:14"
											},
											{
												"expression": {
													"id": 3282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2152:17:14",
													"subExpression": {
														"id": 3281,
														"name": "totalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3077,
														"src": "2152:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3283,
												"nodeType": "ExpressionStatement",
												"src": "2152:17:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3285,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3193,
															"src": "2194:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3286,
															"name": "randomTraits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3202,
															"src": "2203:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														],
														"id": 3284,
														"name": "NFTMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3094,
														"src": "2184:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory[] memory)"
														}
													},
													"id": 3287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2184:32:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3288,
												"nodeType": "EmitStatement",
												"src": "2179:37:14"
											}
										]
									},
									"id": 3290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomness",
									"nameLocation": "1514:17:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1602:8:14"
									},
									"parameters": {
										"id": 3189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3186,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "1549:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "1541:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3185,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1541:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3188,
												"mutability": "mutable",
												"name": "randomness",
												"nameLocation": "1576:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "1568:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1531:61:14"
									},
									"returnParameters": {
										"id": 3191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1611:0:14"
									},
									"scope": 3304,
									"src": "1505:718:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3302,
										"nodeType": "Block",
										"src": "2302:42:14",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3298,
														"name": "nftTraits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3087,
														"src": "2319:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
															"typeString": "mapping(uint256 => string storage ref[] storage ref)"
														}
													},
													"id": 3300,
													"indexExpression": {
														"id": 3299,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3292,
														"src": "2329:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2319:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
														"typeString": "string storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 3297,
												"id": 3301,
												"nodeType": "Return",
												"src": "2312:25:14"
											}
										]
									},
									"functionSelector": "a630fd97",
									"id": 3303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNFTTraits",
									"nameLocation": "2238:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3292,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2256:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3303,
												"src": "2251:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3291,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2251:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:14:14"
									},
									"returnParameters": {
										"id": 3297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3303,
												"src": "2285:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 3294,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "2285:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 3295,
													"nodeType": "ArrayTypeName",
													"src": "2285:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:17:14"
									},
									"scope": 3304,
									"src": "2229:115:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3305,
							"src": "178:2173:14",
							"usedErrors": [
								313,
								318,
								327,
								332,
								337,
								344,
								349,
								354
							],
							"usedEvents": [
								1427,
								1436,
								1445,
								3094
							]
						}
					],
					"src": "33:2318:14"
				},
				"id": 14
			}
		}
	}
}