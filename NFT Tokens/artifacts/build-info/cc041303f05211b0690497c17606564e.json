{
	"id": "cc041303f05211b0690497c17606564e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"NFT Tokens/Tk7.sol": {
				"content": "\n\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.25;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract SupplyChainToken is ERC20 {\n\n    constructor() ERC20(\"SupplyChainToken\", \"SCT\")  {}\n\n    mapping(uint => string) public productDetails;\n\n    function mintProduct(string memory details, uint amount) public {\n        _mint(msg.sender, amount);\n        productDetails[totalSupply()] = details;\n    }\n\n    function transferProduct(address recipient, uint amount) public {\n        _transfer(msg.sender, recipient, amount);\n    }\n\n    function getProductDetails(uint tokenId) public view returns(string memory) {\n        return productDetails[tokenId];\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NFT Tokens/Tk7.sol": {
				"SupplyChainToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getProductDetails",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "details",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintProduct",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "productDetails",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferProduct",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFT Tokens/Tk7.sol\":118:682  contract SupplyChainToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"NFT Tokens/Tk7.sol\":160:210  constructor() ERC20(\"SupplyChainToken\", \"SCT\")  {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x537570706c79436861696e546f6b656e00000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5343540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"NFT Tokens/Tk7.sol\":118:682  contract SupplyChainToken is ERC20 {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"NFT Tokens/Tk7.sol\":118:682  contract SupplyChainToken is ERC20 {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFT Tokens/Tk7.sol\":118:682  contract SupplyChainToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x48f7eb30\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6813b53b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x025a42ae\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2d15e94b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NFT Tokens/Tk7.sol\":429:550  function transferProduct(address recipient, uint amount) public {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk7.sol\":268:423  function mintProduct(string memory details, uint amount) public {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk7.sol\":216:261  mapping(uint => string) public productDetails */\n    tag_10:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk7.sol\":556:679  function getProductDetails(uint tokenId) public view returns(string memory) {... */\n    tag_11:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT Tokens/Tk7.sol\":429:550  function transferProduct(address recipient, uint amount) public {... */\n    tag_21:\n        /* \"NFT Tokens/Tk7.sol\":503:543  _transfer(msg.sender, recipient, amount) */\n      tag_75\n        /* \"NFT Tokens/Tk7.sol\":513:523  msg.sender */\n      caller\n        /* \"NFT Tokens/Tk7.sol\":525:534  recipient */\n      dup4\n        /* \"NFT Tokens/Tk7.sol\":536:542  amount */\n      dup4\n        /* \"NFT Tokens/Tk7.sol\":503:512  _transfer */\n      tag_76\n        /* \"NFT Tokens/Tk7.sol\":503:543  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_75:\n        /* \"NFT Tokens/Tk7.sol\":429:550  function transferProduct(address recipient, uint amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_79\n      jump\t// in\n    tag_80:\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_82\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_81)\n    tag_82:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_83:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_83\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT Tokens/Tk7.sol\":268:423  function mintProduct(string memory details, uint amount) public {... */\n    tag_43:\n        /* \"NFT Tokens/Tk7.sol\":342:367  _mint(msg.sender, amount) */\n      tag_96\n        /* \"NFT Tokens/Tk7.sol\":348:358  msg.sender */\n      caller\n        /* \"NFT Tokens/Tk7.sol\":360:366  amount */\n      dup3\n        /* \"NFT Tokens/Tk7.sol\":342:347  _mint */\n      tag_97\n        /* \"NFT Tokens/Tk7.sol\":342:367  _mint(msg.sender, amount) */\n      jump\t// in\n    tag_96:\n        /* \"NFT Tokens/Tk7.sol\":409:416  details */\n      dup2\n        /* \"NFT Tokens/Tk7.sol\":377:391  productDetails */\n      0x05\n        /* \"NFT Tokens/Tk7.sol\":377:406  productDetails[totalSupply()] */\n      0x00\n        /* \"NFT Tokens/Tk7.sol\":392:405  totalSupply() */\n      tag_98\n        /* \"NFT Tokens/Tk7.sol\":392:403  totalSupply */\n      tag_32\n        /* \"NFT Tokens/Tk7.sol\":392:405  totalSupply() */\n      jump\t// in\n    tag_98:\n        /* \"NFT Tokens/Tk7.sol\":377:406  productDetails[totalSupply()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFT Tokens/Tk7.sol\":377:416  productDetails[totalSupply()] = details */\n      swap1\n      dup2\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      pop\n        /* \"NFT Tokens/Tk7.sol\":268:423  function mintProduct(string memory details, uint amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"NFT Tokens/Tk7.sol\":216:261  mapping(uint => string) public productDetails */\n    tag_51:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      sload\n      tag_102\n      swap1\n      tag_79\n      jump\t// in\n    tag_102:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_79\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"NFT Tokens/Tk7.sol\":556:679  function getProductDetails(uint tokenId) public view returns(string memory) {... */\n    tag_55:\n        /* \"NFT Tokens/Tk7.sol\":617:630  string memory */\n      0x60\n        /* \"NFT Tokens/Tk7.sol\":649:663  productDetails */\n      0x05\n        /* \"NFT Tokens/Tk7.sol\":649:672  productDetails[tokenId] */\n      0x00\n        /* \"NFT Tokens/Tk7.sol\":664:671  tokenId */\n      dup4\n        /* \"NFT Tokens/Tk7.sol\":649:672  productDetails[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFT Tokens/Tk7.sol\":642:672  return productDetails[tokenId] */\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_79\n      jump\t// in\n    tag_108:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_79\n      jump\t// in\n    tag_109:\n      dup1\n      iszero\n      tag_110\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_111\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_110)\n    tag_111:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_112:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_112\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NFT Tokens/Tk7.sol\":556:679  function getProductDetails(uint tokenId) public view returns(string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_79\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_79\n      jump\t// in\n    tag_116:\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n    tag_118:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_151)\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_155)\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_164:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_165:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_166:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_167:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_168:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_217\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_167\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_169:\n        /* \"#utility.yul\":641:665   */\n      tag_219\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_168\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_220:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_170:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_222\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_169\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_171:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_172:\n        /* \"#utility.yul\":997:1021   */\n      tag_225\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_171\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_226:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_173:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_228\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_172\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_20:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_231\n      tag_165\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1290:1409   */\n    tag_230:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_232\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_170\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_233\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_173\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1776   */\n    tag_174:\n        /* \"#utility.yul\":1729:1735   */\n      0x00\n        /* \"#utility.yul\":1763:1768   */\n      dup2\n        /* \"#utility.yul\":1757:1769   */\n      mload\n        /* \"#utility.yul\":1747:1769   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1782:1951   */\n    tag_175:\n        /* \"#utility.yul\":1866:1877   */\n      0x00\n        /* \"#utility.yul\":1900:1906   */\n      dup3\n        /* \"#utility.yul\":1895:1898   */\n      dup3\n        /* \"#utility.yul\":1888:1907   */\n      mstore\n        /* \"#utility.yul\":1940:1944   */\n      0x20\n        /* \"#utility.yul\":1935:1938   */\n      dup3\n        /* \"#utility.yul\":1931:1945   */\n      add\n        /* \"#utility.yul\":1916:1945   */\n      swap1\n      pop\n        /* \"#utility.yul\":1782:1951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1957:2096   */\n    tag_176:\n        /* \"#utility.yul\":2046:2052   */\n      dup3\n        /* \"#utility.yul\":2041:2044   */\n      dup2\n        /* \"#utility.yul\":2036:2039   */\n      dup4\n        /* \"#utility.yul\":2030:2053   */\n      mcopy\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      dup4\n        /* \"#utility.yul\":2073:2076   */\n      dup4\n        /* \"#utility.yul\":2069:2085   */\n      add\n        /* \"#utility.yul\":2062:2089   */\n      mstore\n        /* \"#utility.yul\":1957:2096   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2102:2204   */\n    tag_177:\n        /* \"#utility.yul\":2143:2149   */\n      0x00\n        /* \"#utility.yul\":2194:2196   */\n      0x1f\n        /* \"#utility.yul\":2190:2197   */\n      not\n        /* \"#utility.yul\":2185:2187   */\n      0x1f\n        /* \"#utility.yul\":2178:2183   */\n      dup4\n        /* \"#utility.yul\":2174:2188   */\n      add\n        /* \"#utility.yul\":2170:2198   */\n      and\n        /* \"#utility.yul\":2160:2198   */\n      swap1\n      pop\n        /* \"#utility.yul\":2102:2204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2210:2587   */\n    tag_178:\n        /* \"#utility.yul\":2298:2301   */\n      0x00\n        /* \"#utility.yul\":2326:2365   */\n      tag_239\n        /* \"#utility.yul\":2359:2364   */\n      dup3\n        /* \"#utility.yul\":2326:2365   */\n      tag_174\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2381:2452   */\n      tag_240\n        /* \"#utility.yul\":2445:2451   */\n      dup2\n        /* \"#utility.yul\":2440:2443   */\n      dup6\n        /* \"#utility.yul\":2381:2452   */\n      tag_175\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2374:2452   */\n      swap4\n      pop\n        /* \"#utility.yul\":2461:2526   */\n      tag_241\n        /* \"#utility.yul\":2519:2525   */\n      dup2\n        /* \"#utility.yul\":2514:2517   */\n      dup6\n        /* \"#utility.yul\":2507:2511   */\n      0x20\n        /* \"#utility.yul\":2500:2505   */\n      dup7\n        /* \"#utility.yul\":2496:2512   */\n      add\n        /* \"#utility.yul\":2461:2526   */\n      tag_176\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2551:2580   */\n      tag_242\n        /* \"#utility.yul\":2573:2579   */\n      dup2\n        /* \"#utility.yul\":2551:2580   */\n      tag_177\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2546:2549   */\n      dup5\n        /* \"#utility.yul\":2542:2581   */\n      add\n        /* \"#utility.yul\":2535:2581   */\n      swap2\n      pop\n        /* \"#utility.yul\":2302:2587   */\n      pop\n        /* \"#utility.yul\":2210:2587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2593:2906   */\n    tag_25:\n        /* \"#utility.yul\":2706:2710   */\n      0x00\n        /* \"#utility.yul\":2744:2746   */\n      0x20\n        /* \"#utility.yul\":2733:2742   */\n      dup3\n        /* \"#utility.yul\":2729:2747   */\n      add\n        /* \"#utility.yul\":2721:2747   */\n      swap1\n      pop\n        /* \"#utility.yul\":2793:2802   */\n      dup2\n        /* \"#utility.yul\":2787:2791   */\n      dup2\n        /* \"#utility.yul\":2783:2803   */\n      sub\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2764:2781   */\n      add\n        /* \"#utility.yul\":2757:2804   */\n      mstore\n        /* \"#utility.yul\":2821:2899   */\n      tag_244\n        /* \"#utility.yul\":2894:2898   */\n      dup2\n        /* \"#utility.yul\":2885:2891   */\n      dup5\n        /* \"#utility.yul\":2821:2899   */\n      tag_178\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2813:2899   */\n      swap1\n      pop\n        /* \"#utility.yul\":2593:2906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_179:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_180:\n        /* \"#utility.yul\":3089:3110   */\n      tag_247\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_179\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_30:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_249\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_180\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_181:\n        /* \"#utility.yul\":3426:3450   */\n      tag_251\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_171\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_34:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_253\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_181\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_37:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_256\n      tag_165\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3801:3920   */\n    tag_255:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_257\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_170\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_258\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_170\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_259\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_173\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4433   */\n    tag_182:\n        /* \"#utility.yul\":4425:4426   */\n      0x00\n        /* \"#utility.yul\":4422:4423   */\n      dup1\n        /* \"#utility.yul\":4415:4427   */\n      revert\n        /* \"#utility.yul\":4439:4556   */\n    tag_183:\n        /* \"#utility.yul\":4548:4549   */\n      0x00\n        /* \"#utility.yul\":4545:4546   */\n      dup1\n        /* \"#utility.yul\":4538:4550   */\n      revert\n        /* \"#utility.yul\":4562:4742   */\n    tag_184:\n        /* \"#utility.yul\":4610:4687   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4607:4608   */\n      0x00\n        /* \"#utility.yul\":4600:4688   */\n      mstore\n        /* \"#utility.yul\":4707:4711   */\n      0x41\n        /* \"#utility.yul\":4704:4705   */\n      0x04\n        /* \"#utility.yul\":4697:4712   */\n      mstore\n        /* \"#utility.yul\":4731:4735   */\n      0x24\n        /* \"#utility.yul\":4728:4729   */\n      0x00\n        /* \"#utility.yul\":4721:4736   */\n      revert\n        /* \"#utility.yul\":4748:5029   */\n    tag_185:\n        /* \"#utility.yul\":4831:4858   */\n      tag_264\n        /* \"#utility.yul\":4853:4857   */\n      dup3\n        /* \"#utility.yul\":4831:4858   */\n      tag_177\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4823:4829   */\n      dup2\n        /* \"#utility.yul\":4819:4859   */\n      add\n        /* \"#utility.yul\":4961:4967   */\n      dup2\n        /* \"#utility.yul\":4949:4959   */\n      dup2\n        /* \"#utility.yul\":4946:4968   */\n      lt\n        /* \"#utility.yul\":4925:4943   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4913:4923   */\n      dup3\n        /* \"#utility.yul\":4910:4944   */\n      gt\n        /* \"#utility.yul\":4907:4969   */\n      or\n        /* \"#utility.yul\":4904:4992   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":4972:4990   */\n      tag_266\n      tag_184\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4904:4992   */\n    tag_265:\n        /* \"#utility.yul\":5012:5022   */\n      dup1\n        /* \"#utility.yul\":5008:5010   */\n      0x40\n        /* \"#utility.yul\":5001:5023   */\n      mstore\n        /* \"#utility.yul\":4791:5029   */\n      pop\n        /* \"#utility.yul\":4748:5029   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5035:5164   */\n    tag_186:\n        /* \"#utility.yul\":5069:5075   */\n      0x00\n        /* \"#utility.yul\":5096:5116   */\n      tag_268\n      tag_164\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5086:5116   */\n      swap1\n      pop\n        /* \"#utility.yul\":5125:5158   */\n      tag_269\n        /* \"#utility.yul\":5153:5157   */\n      dup3\n        /* \"#utility.yul\":5145:5151   */\n      dup3\n        /* \"#utility.yul\":5125:5158   */\n      tag_185\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5035:5164   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5170:5478   */\n    tag_187:\n        /* \"#utility.yul\":5232:5236   */\n      0x00\n        /* \"#utility.yul\":5322:5340   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5314:5320   */\n      dup3\n        /* \"#utility.yul\":5311:5341   */\n      gt\n        /* \"#utility.yul\":5308:5364   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":5344:5362   */\n      tag_272\n      tag_184\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5308:5364   */\n    tag_271:\n        /* \"#utility.yul\":5382:5411   */\n      tag_273\n        /* \"#utility.yul\":5404:5410   */\n      dup3\n        /* \"#utility.yul\":5382:5411   */\n      tag_177\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5374:5411   */\n      swap1\n      pop\n        /* \"#utility.yul\":5466:5470   */\n      0x20\n        /* \"#utility.yul\":5460:5464   */\n      dup2\n        /* \"#utility.yul\":5456:5471   */\n      add\n        /* \"#utility.yul\":5448:5471   */\n      swap1\n      pop\n        /* \"#utility.yul\":5170:5478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5484:5632   */\n    tag_188:\n        /* \"#utility.yul\":5582:5588   */\n      dup3\n        /* \"#utility.yul\":5577:5580   */\n      dup2\n        /* \"#utility.yul\":5572:5575   */\n      dup4\n        /* \"#utility.yul\":5559:5589   */\n      calldatacopy\n        /* \"#utility.yul\":5623:5624   */\n      0x00\n        /* \"#utility.yul\":5614:5620   */\n      dup4\n        /* \"#utility.yul\":5609:5612   */\n      dup4\n        /* \"#utility.yul\":5605:5621   */\n      add\n        /* \"#utility.yul\":5598:5625   */\n      mstore\n        /* \"#utility.yul\":5484:5632   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5638:6063   */\n    tag_189:\n        /* \"#utility.yul\":5716:5721   */\n      0x00\n        /* \"#utility.yul\":5741:5807   */\n      tag_276\n        /* \"#utility.yul\":5757:5806   */\n      tag_277\n        /* \"#utility.yul\":5799:5805   */\n      dup5\n        /* \"#utility.yul\":5757:5806   */\n      tag_187\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":5741:5807   */\n      tag_186\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":5732:5807   */\n      swap1\n      pop\n        /* \"#utility.yul\":5830:5836   */\n      dup3\n        /* \"#utility.yul\":5823:5828   */\n      dup2\n        /* \"#utility.yul\":5816:5837   */\n      mstore\n        /* \"#utility.yul\":5868:5872   */\n      0x20\n        /* \"#utility.yul\":5861:5866   */\n      dup2\n        /* \"#utility.yul\":5857:5873   */\n      add\n        /* \"#utility.yul\":5906:5909   */\n      dup5\n        /* \"#utility.yul\":5897:5903   */\n      dup5\n        /* \"#utility.yul\":5892:5895   */\n      dup5\n        /* \"#utility.yul\":5888:5904   */\n      add\n        /* \"#utility.yul\":5885:5910   */\n      gt\n        /* \"#utility.yul\":5882:5994   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":5913:5992   */\n      tag_279\n      tag_183\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5882:5994   */\n    tag_278:\n        /* \"#utility.yul\":6003:6057   */\n      tag_280\n        /* \"#utility.yul\":6050:6056   */\n      dup5\n        /* \"#utility.yul\":6045:6048   */\n      dup3\n        /* \"#utility.yul\":6040:6043   */\n      dup6\n        /* \"#utility.yul\":6003:6057   */\n      tag_188\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5722:6063   */\n      pop\n        /* \"#utility.yul\":5638:6063   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6083:6423   */\n    tag_190:\n        /* \"#utility.yul\":6139:6144   */\n      0x00\n        /* \"#utility.yul\":6188:6191   */\n      dup3\n        /* \"#utility.yul\":6181:6185   */\n      0x1f\n        /* \"#utility.yul\":6173:6179   */\n      dup4\n        /* \"#utility.yul\":6169:6186   */\n      add\n        /* \"#utility.yul\":6165:6192   */\n      slt\n        /* \"#utility.yul\":6155:6277   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":6196:6275   */\n      tag_283\n      tag_182\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6155:6277   */\n    tag_282:\n        /* \"#utility.yul\":6313:6319   */\n      dup2\n        /* \"#utility.yul\":6300:6320   */\n      calldataload\n        /* \"#utility.yul\":6338:6417   */\n      tag_284\n        /* \"#utility.yul\":6413:6416   */\n      dup5\n        /* \"#utility.yul\":6405:6411   */\n      dup3\n        /* \"#utility.yul\":6398:6402   */\n      0x20\n        /* \"#utility.yul\":6390:6396   */\n      dup7\n        /* \"#utility.yul\":6386:6403   */\n      add\n        /* \"#utility.yul\":6338:6417   */\n      tag_189\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6329:6417   */\n      swap2\n      pop\n        /* \"#utility.yul\":6145:6423   */\n      pop\n        /* \"#utility.yul\":6083:6423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6429:7083   */\n    tag_42:\n        /* \"#utility.yul\":6507:6513   */\n      0x00\n        /* \"#utility.yul\":6515:6521   */\n      dup1\n        /* \"#utility.yul\":6564:6566   */\n      0x40\n        /* \"#utility.yul\":6552:6561   */\n      dup4\n        /* \"#utility.yul\":6543:6550   */\n      dup6\n        /* \"#utility.yul\":6539:6562   */\n      sub\n        /* \"#utility.yul\":6535:6567   */\n      slt\n        /* \"#utility.yul\":6532:6651   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":6570:6649   */\n      tag_287\n      tag_165\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6532:6651   */\n    tag_286:\n        /* \"#utility.yul\":6718:6719   */\n      0x00\n        /* \"#utility.yul\":6707:6716   */\n      dup4\n        /* \"#utility.yul\":6703:6720   */\n      add\n        /* \"#utility.yul\":6690:6721   */\n      calldataload\n        /* \"#utility.yul\":6748:6766   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6740:6746   */\n      dup2\n        /* \"#utility.yul\":6737:6767   */\n      gt\n        /* \"#utility.yul\":6734:6851   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":6770:6849   */\n      tag_289\n      tag_166\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6734:6851   */\n    tag_288:\n        /* \"#utility.yul\":6875:6938   */\n      tag_290\n        /* \"#utility.yul\":6930:6937   */\n      dup6\n        /* \"#utility.yul\":6921:6927   */\n      dup3\n        /* \"#utility.yul\":6910:6919   */\n      dup7\n        /* \"#utility.yul\":6906:6928   */\n      add\n        /* \"#utility.yul\":6875:6938   */\n      tag_190\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6865:6938   */\n      swap3\n      pop\n        /* \"#utility.yul\":6661:6948   */\n      pop\n        /* \"#utility.yul\":6987:6989   */\n      0x20\n        /* \"#utility.yul\":7013:7066   */\n      tag_291\n        /* \"#utility.yul\":7058:7065   */\n      dup6\n        /* \"#utility.yul\":7049:7055   */\n      dup3\n        /* \"#utility.yul\":7038:7047   */\n      dup7\n        /* \"#utility.yul\":7034:7056   */\n      add\n        /* \"#utility.yul\":7013:7066   */\n      tag_173\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7003:7066   */\n      swap2\n      pop\n        /* \"#utility.yul\":6958:7076   */\n      pop\n        /* \"#utility.yul\":6429:7083   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7089:7175   */\n    tag_191:\n        /* \"#utility.yul\":7124:7131   */\n      0x00\n        /* \"#utility.yul\":7164:7168   */\n      0xff\n        /* \"#utility.yul\":7157:7162   */\n      dup3\n        /* \"#utility.yul\":7153:7169   */\n      and\n        /* \"#utility.yul\":7142:7169   */\n      swap1\n      pop\n        /* \"#utility.yul\":7089:7175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7181:7293   */\n    tag_192:\n        /* \"#utility.yul\":7264:7286   */\n      tag_294\n        /* \"#utility.yul\":7280:7285   */\n      dup2\n        /* \"#utility.yul\":7264:7286   */\n      tag_191\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7259:7262   */\n      dup3\n        /* \"#utility.yul\":7252:7287   */\n      mstore\n        /* \"#utility.yul\":7181:7293   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7299:7513   */\n    tag_47:\n        /* \"#utility.yul\":7388:7392   */\n      0x00\n        /* \"#utility.yul\":7426:7428   */\n      0x20\n        /* \"#utility.yul\":7415:7424   */\n      dup3\n        /* \"#utility.yul\":7411:7429   */\n      add\n        /* \"#utility.yul\":7403:7429   */\n      swap1\n      pop\n        /* \"#utility.yul\":7439:7506   */\n      tag_296\n        /* \"#utility.yul\":7503:7504   */\n      0x00\n        /* \"#utility.yul\":7492:7501   */\n      dup4\n        /* \"#utility.yul\":7488:7505   */\n      add\n        /* \"#utility.yul\":7479:7485   */\n      dup5\n        /* \"#utility.yul\":7439:7506   */\n      tag_192\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7299:7513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7519:7848   */\n    tag_50:\n        /* \"#utility.yul\":7578:7584   */\n      0x00\n        /* \"#utility.yul\":7627:7629   */\n      0x20\n        /* \"#utility.yul\":7615:7624   */\n      dup3\n        /* \"#utility.yul\":7606:7613   */\n      dup5\n        /* \"#utility.yul\":7602:7625   */\n      sub\n        /* \"#utility.yul\":7598:7630   */\n      slt\n        /* \"#utility.yul\":7595:7714   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":7633:7712   */\n      tag_299\n      tag_165\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7595:7714   */\n    tag_298:\n        /* \"#utility.yul\":7753:7754   */\n      0x00\n        /* \"#utility.yul\":7778:7831   */\n      tag_300\n        /* \"#utility.yul\":7823:7830   */\n      dup5\n        /* \"#utility.yul\":7814:7820   */\n      dup3\n        /* \"#utility.yul\":7803:7812   */\n      dup6\n        /* \"#utility.yul\":7799:7821   */\n      add\n        /* \"#utility.yul\":7778:7831   */\n      tag_173\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":7768:7831   */\n      swap2\n      pop\n        /* \"#utility.yul\":7724:7841   */\n      pop\n        /* \"#utility.yul\":7519:7848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7854:8183   */\n    tag_59:\n        /* \"#utility.yul\":7913:7919   */\n      0x00\n        /* \"#utility.yul\":7962:7964   */\n      0x20\n        /* \"#utility.yul\":7950:7959   */\n      dup3\n        /* \"#utility.yul\":7941:7948   */\n      dup5\n        /* \"#utility.yul\":7937:7960   */\n      sub\n        /* \"#utility.yul\":7933:7965   */\n      slt\n        /* \"#utility.yul\":7930:8049   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":7968:8047   */\n      tag_303\n      tag_165\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7930:8049   */\n    tag_302:\n        /* \"#utility.yul\":8088:8089   */\n      0x00\n        /* \"#utility.yul\":8113:8166   */\n      tag_304\n        /* \"#utility.yul\":8158:8165   */\n      dup5\n        /* \"#utility.yul\":8149:8155   */\n      dup3\n        /* \"#utility.yul\":8138:8147   */\n      dup6\n        /* \"#utility.yul\":8134:8156   */\n      add\n        /* \"#utility.yul\":8113:8166   */\n      tag_170\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":8103:8166   */\n      swap2\n      pop\n        /* \"#utility.yul\":8059:8176   */\n      pop\n        /* \"#utility.yul\":7854:8183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8189:8663   */\n    tag_71:\n        /* \"#utility.yul\":8257:8263   */\n      0x00\n        /* \"#utility.yul\":8265:8271   */\n      dup1\n        /* \"#utility.yul\":8314:8316   */\n      0x40\n        /* \"#utility.yul\":8302:8311   */\n      dup4\n        /* \"#utility.yul\":8293:8300   */\n      dup6\n        /* \"#utility.yul\":8289:8312   */\n      sub\n        /* \"#utility.yul\":8285:8317   */\n      slt\n        /* \"#utility.yul\":8282:8401   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":8320:8399   */\n      tag_307\n      tag_165\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":8282:8401   */\n    tag_306:\n        /* \"#utility.yul\":8440:8441   */\n      0x00\n        /* \"#utility.yul\":8465:8518   */\n      tag_308\n        /* \"#utility.yul\":8510:8517   */\n      dup6\n        /* \"#utility.yul\":8501:8507   */\n      dup3\n        /* \"#utility.yul\":8490:8499   */\n      dup7\n        /* \"#utility.yul\":8486:8508   */\n      add\n        /* \"#utility.yul\":8465:8518   */\n      tag_170\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":8455:8518   */\n      swap3\n      pop\n        /* \"#utility.yul\":8411:8528   */\n      pop\n        /* \"#utility.yul\":8567:8569   */\n      0x20\n        /* \"#utility.yul\":8593:8646   */\n      tag_309\n        /* \"#utility.yul\":8638:8645   */\n      dup6\n        /* \"#utility.yul\":8629:8635   */\n      dup3\n        /* \"#utility.yul\":8618:8627   */\n      dup7\n        /* \"#utility.yul\":8614:8636   */\n      add\n        /* \"#utility.yul\":8593:8646   */\n      tag_170\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8583:8646   */\n      swap2\n      pop\n        /* \"#utility.yul\":8538:8656   */\n      pop\n        /* \"#utility.yul\":8189:8663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8669:8849   */\n    tag_193:\n        /* \"#utility.yul\":8717:8794   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8714:8715   */\n      0x00\n        /* \"#utility.yul\":8707:8795   */\n      mstore\n        /* \"#utility.yul\":8814:8818   */\n      0x22\n        /* \"#utility.yul\":8811:8812   */\n      0x04\n        /* \"#utility.yul\":8804:8819   */\n      mstore\n        /* \"#utility.yul\":8838:8842   */\n      0x24\n        /* \"#utility.yul\":8835:8836   */\n      0x00\n        /* \"#utility.yul\":8828:8843   */\n      revert\n        /* \"#utility.yul\":8855:9175   */\n    tag_79:\n        /* \"#utility.yul\":8899:8905   */\n      0x00\n        /* \"#utility.yul\":8936:8937   */\n      0x02\n        /* \"#utility.yul\":8930:8934   */\n      dup3\n        /* \"#utility.yul\":8926:8938   */\n      div\n        /* \"#utility.yul\":8916:8938   */\n      swap1\n      pop\n        /* \"#utility.yul\":8983:8984   */\n      0x01\n        /* \"#utility.yul\":8977:8981   */\n      dup3\n        /* \"#utility.yul\":8973:8985   */\n      and\n        /* \"#utility.yul\":9004:9022   */\n      dup1\n        /* \"#utility.yul\":8994:9075   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":9060:9064   */\n      0x7f\n        /* \"#utility.yul\":9052:9058   */\n      dup3\n        /* \"#utility.yul\":9048:9065   */\n      and\n        /* \"#utility.yul\":9038:9065   */\n      swap2\n      pop\n        /* \"#utility.yul\":8994:9075   */\n    tag_312:\n        /* \"#utility.yul\":9122:9124   */\n      0x20\n        /* \"#utility.yul\":9114:9120   */\n      dup3\n        /* \"#utility.yul\":9111:9125   */\n      lt\n        /* \"#utility.yul\":9091:9109   */\n      dup2\n        /* \"#utility.yul\":9088:9126   */\n      sub\n        /* \"#utility.yul\":9085:9169   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":9141:9159   */\n      tag_314\n      tag_193\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":9085:9169   */\n    tag_313:\n        /* \"#utility.yul\":8906:9175   */\n      pop\n        /* \"#utility.yul\":8855:9175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9181:9322   */\n    tag_194:\n        /* \"#utility.yul\":9230:9234   */\n      0x00\n        /* \"#utility.yul\":9253:9256   */\n      dup2\n        /* \"#utility.yul\":9245:9256   */\n      swap1\n      pop\n        /* \"#utility.yul\":9276:9279   */\n      dup2\n        /* \"#utility.yul\":9273:9274   */\n      0x00\n        /* \"#utility.yul\":9266:9280   */\n      mstore\n        /* \"#utility.yul\":9310:9314   */\n      0x20\n        /* \"#utility.yul\":9307:9308   */\n      0x00\n        /* \"#utility.yul\":9297:9315   */\n      keccak256\n        /* \"#utility.yul\":9289:9315   */\n      swap1\n      pop\n        /* \"#utility.yul\":9181:9322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9328:9421   */\n    tag_195:\n        /* \"#utility.yul\":9365:9371   */\n      0x00\n        /* \"#utility.yul\":9412:9414   */\n      0x20\n        /* \"#utility.yul\":9407:9409   */\n      0x1f\n        /* \"#utility.yul\":9400:9405   */\n      dup4\n        /* \"#utility.yul\":9396:9410   */\n      add\n        /* \"#utility.yul\":9392:9415   */\n      div\n        /* \"#utility.yul\":9382:9415   */\n      swap1\n      pop\n        /* \"#utility.yul\":9328:9421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9427:9534   */\n    tag_196:\n        /* \"#utility.yul\":9471:9479   */\n      0x00\n        /* \"#utility.yul\":9521:9526   */\n      dup3\n        /* \"#utility.yul\":9515:9519   */\n      dup3\n        /* \"#utility.yul\":9511:9527   */\n      shl\n        /* \"#utility.yul\":9490:9527   */\n      swap1\n      pop\n        /* \"#utility.yul\":9427:9534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9540:9933   */\n    tag_197:\n        /* \"#utility.yul\":9609:9615   */\n      0x00\n        /* \"#utility.yul\":9659:9660   */\n      0x08\n        /* \"#utility.yul\":9647:9657   */\n      dup4\n        /* \"#utility.yul\":9643:9661   */\n      mul\n        /* \"#utility.yul\":9682:9779   */\n      tag_319\n        /* \"#utility.yul\":9712:9778   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9701:9710   */\n      dup3\n        /* \"#utility.yul\":9682:9779   */\n      tag_196\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":9800:9839   */\n      tag_320\n        /* \"#utility.yul\":9830:9838   */\n      dup7\n        /* \"#utility.yul\":9819:9828   */\n      dup4\n        /* \"#utility.yul\":9800:9839   */\n      tag_196\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":9788:9839   */\n      swap6\n      pop\n        /* \"#utility.yul\":9872:9876   */\n      dup1\n        /* \"#utility.yul\":9868:9877   */\n      not\n        /* \"#utility.yul\":9861:9866   */\n      dup5\n        /* \"#utility.yul\":9857:9878   */\n      and\n        /* \"#utility.yul\":9848:9878   */\n      swap4\n      pop\n        /* \"#utility.yul\":9921:9925   */\n      dup1\n        /* \"#utility.yul\":9911:9919   */\n      dup7\n        /* \"#utility.yul\":9907:9926   */\n      and\n        /* \"#utility.yul\":9900:9905   */\n      dup5\n        /* \"#utility.yul\":9897:9927   */\n      or\n        /* \"#utility.yul\":9887:9927   */\n      swap3\n      pop\n        /* \"#utility.yul\":9616:9933   */\n      pop\n      pop\n        /* \"#utility.yul\":9540:9933   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9939:9999   */\n    tag_198:\n        /* \"#utility.yul\":9967:9970   */\n      0x00\n        /* \"#utility.yul\":9988:9993   */\n      dup2\n        /* \"#utility.yul\":9981:9993   */\n      swap1\n      pop\n        /* \"#utility.yul\":9939:9999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10005:10147   */\n    tag_199:\n        /* \"#utility.yul\":10055:10064   */\n      0x00\n        /* \"#utility.yul\":10088:10141   */\n      tag_323\n        /* \"#utility.yul\":10106:10140   */\n      tag_324\n        /* \"#utility.yul\":10115:10139   */\n      tag_325\n        /* \"#utility.yul\":10133:10138   */\n      dup5\n        /* \"#utility.yul\":10115:10139   */\n      tag_171\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":10106:10140   */\n      tag_198\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":10088:10141   */\n      tag_171\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":10075:10141   */\n      swap1\n      pop\n        /* \"#utility.yul\":10005:10147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10153:10228   */\n    tag_200:\n        /* \"#utility.yul\":10196:10199   */\n      0x00\n        /* \"#utility.yul\":10217:10222   */\n      dup2\n        /* \"#utility.yul\":10210:10222   */\n      swap1\n      pop\n        /* \"#utility.yul\":10153:10228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10234:10503   */\n    tag_201:\n        /* \"#utility.yul\":10344:10383   */\n      tag_328\n        /* \"#utility.yul\":10375:10382   */\n      dup4\n        /* \"#utility.yul\":10344:10383   */\n      tag_199\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":10405:10496   */\n      tag_329\n        /* \"#utility.yul\":10454:10495   */\n      tag_330\n        /* \"#utility.yul\":10478:10494   */\n      dup3\n        /* \"#utility.yul\":10454:10495   */\n      tag_200\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":10446:10452   */\n      dup5\n        /* \"#utility.yul\":10439:10443   */\n      dup5\n        /* \"#utility.yul\":10433:10444   */\n      sload\n        /* \"#utility.yul\":10405:10496   */\n      tag_197\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":10399:10403   */\n      dup3\n        /* \"#utility.yul\":10392:10497   */\n      sstore\n        /* \"#utility.yul\":10310:10503   */\n      pop\n        /* \"#utility.yul\":10234:10503   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10509:10582   */\n    tag_202:\n        /* \"#utility.yul\":10554:10557   */\n      0x00\n        /* \"#utility.yul\":10509:10582   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":10588:10777   */\n    tag_203:\n        /* \"#utility.yul\":10665:10697   */\n      tag_333\n      tag_202\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10706:10771   */\n      tag_334\n        /* \"#utility.yul\":10764:10770   */\n      dup2\n        /* \"#utility.yul\":10756:10762   */\n      dup5\n        /* \"#utility.yul\":10750:10754   */\n      dup5\n        /* \"#utility.yul\":10706:10771   */\n      tag_201\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":10641:10777   */\n      pop\n        /* \"#utility.yul\":10588:10777   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10783:10969   */\n    tag_204:\n        /* \"#utility.yul\":10843:10963   */\n    tag_336:\n        /* \"#utility.yul\":10860:10863   */\n      dup2\n        /* \"#utility.yul\":10853:10858   */\n      dup2\n        /* \"#utility.yul\":10850:10864   */\n      lt\n        /* \"#utility.yul\":10843:10963   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":10914:10953   */\n      tag_339\n        /* \"#utility.yul\":10951:10952   */\n      0x00\n        /* \"#utility.yul\":10944:10949   */\n      dup3\n        /* \"#utility.yul\":10914:10953   */\n      tag_203\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":10887:10888   */\n      0x01\n        /* \"#utility.yul\":10880:10885   */\n      dup2\n        /* \"#utility.yul\":10876:10889   */\n      add\n        /* \"#utility.yul\":10867:10889   */\n      swap1\n      pop\n        /* \"#utility.yul\":10843:10963   */\n      jump(tag_336)\n    tag_338:\n        /* \"#utility.yul\":10783:10969   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10975:11518   */\n    tag_205:\n        /* \"#utility.yul\":11076:11078   */\n      0x1f\n        /* \"#utility.yul\":11071:11074   */\n      dup3\n        /* \"#utility.yul\":11068:11079   */\n      gt\n        /* \"#utility.yul\":11065:11511   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":11110:11148   */\n      tag_342\n        /* \"#utility.yul\":11142:11147   */\n      dup2\n        /* \"#utility.yul\":11110:11148   */\n      tag_194\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":11194:11223   */\n      tag_343\n        /* \"#utility.yul\":11212:11222   */\n      dup5\n        /* \"#utility.yul\":11194:11223   */\n      tag_195\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11184:11192   */\n      dup2\n        /* \"#utility.yul\":11180:11224   */\n      add\n        /* \"#utility.yul\":11377:11379   */\n      0x20\n        /* \"#utility.yul\":11365:11375   */\n      dup6\n        /* \"#utility.yul\":11362:11380   */\n      lt\n        /* \"#utility.yul\":11359:11408   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":11398:11406   */\n      dup2\n        /* \"#utility.yul\":11383:11406   */\n      swap1\n      pop\n        /* \"#utility.yul\":11359:11408   */\n    tag_344:\n        /* \"#utility.yul\":11421:11501   */\n      tag_345\n        /* \"#utility.yul\":11477:11499   */\n      tag_346\n        /* \"#utility.yul\":11495:11498   */\n      dup6\n        /* \"#utility.yul\":11477:11499   */\n      tag_195\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":11467:11475   */\n      dup4\n        /* \"#utility.yul\":11463:11500   */\n      add\n        /* \"#utility.yul\":11450:11461   */\n      dup3\n        /* \"#utility.yul\":11421:11501   */\n      tag_204\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":11080:11511   */\n      pop\n      pop\n        /* \"#utility.yul\":11065:11511   */\n    tag_341:\n        /* \"#utility.yul\":10975:11518   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11524:11641   */\n    tag_206:\n        /* \"#utility.yul\":11578:11586   */\n      0x00\n        /* \"#utility.yul\":11628:11633   */\n      dup3\n        /* \"#utility.yul\":11622:11626   */\n      dup3\n        /* \"#utility.yul\":11618:11634   */\n      shr\n        /* \"#utility.yul\":11597:11634   */\n      swap1\n      pop\n        /* \"#utility.yul\":11524:11641   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11647:11816   */\n    tag_207:\n        /* \"#utility.yul\":11691:11697   */\n      0x00\n        /* \"#utility.yul\":11724:11775   */\n      tag_349\n        /* \"#utility.yul\":11772:11773   */\n      0x00\n        /* \"#utility.yul\":11768:11774   */\n      not\n        /* \"#utility.yul\":11760:11765   */\n      dup5\n        /* \"#utility.yul\":11757:11758   */\n      0x08\n        /* \"#utility.yul\":11753:11766   */\n      mul\n        /* \"#utility.yul\":11724:11775   */\n      tag_206\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":11720:11776   */\n      not\n        /* \"#utility.yul\":11805:11809   */\n      dup1\n        /* \"#utility.yul\":11799:11803   */\n      dup4\n        /* \"#utility.yul\":11795:11810   */\n      and\n        /* \"#utility.yul\":11785:11810   */\n      swap2\n      pop\n        /* \"#utility.yul\":11698:11816   */\n      pop\n        /* \"#utility.yul\":11647:11816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11821:12116   */\n    tag_208:\n        /* \"#utility.yul\":11897:11901   */\n      0x00\n        /* \"#utility.yul\":12043:12072   */\n      tag_351\n        /* \"#utility.yul\":12068:12071   */\n      dup4\n        /* \"#utility.yul\":12062:12066   */\n      dup4\n        /* \"#utility.yul\":12043:12072   */\n      tag_207\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":12035:12072   */\n      swap2\n      pop\n        /* \"#utility.yul\":12105:12108   */\n      dup3\n        /* \"#utility.yul\":12102:12103   */\n      0x02\n        /* \"#utility.yul\":12098:12109   */\n      mul\n        /* \"#utility.yul\":12092:12096   */\n      dup3\n        /* \"#utility.yul\":12089:12110   */\n      or\n        /* \"#utility.yul\":12081:12110   */\n      swap1\n      pop\n        /* \"#utility.yul\":11821:12116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12121:13516   */\n    tag_100:\n        /* \"#utility.yul\":12238:12275   */\n      tag_353\n        /* \"#utility.yul\":12271:12274   */\n      dup3\n        /* \"#utility.yul\":12238:12275   */\n      tag_174\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":12340:12358   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12332:12338   */\n      dup2\n        /* \"#utility.yul\":12329:12359   */\n      gt\n        /* \"#utility.yul\":12326:12382   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":12362:12380   */\n      tag_355\n      tag_184\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":12326:12382   */\n    tag_354:\n        /* \"#utility.yul\":12406:12444   */\n      tag_356\n        /* \"#utility.yul\":12438:12442   */\n      dup3\n        /* \"#utility.yul\":12432:12443   */\n      sload\n        /* \"#utility.yul\":12406:12444   */\n      tag_79\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":12491:12558   */\n      tag_357\n        /* \"#utility.yul\":12551:12557   */\n      dup3\n        /* \"#utility.yul\":12543:12549   */\n      dup3\n        /* \"#utility.yul\":12537:12541   */\n      dup6\n        /* \"#utility.yul\":12491:12558   */\n      tag_205\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":12585:12586   */\n      0x00\n        /* \"#utility.yul\":12609:12613   */\n      0x20\n        /* \"#utility.yul\":12596:12613   */\n      swap1\n      pop\n        /* \"#utility.yul\":12641:12643   */\n      0x1f\n        /* \"#utility.yul\":12633:12639   */\n      dup4\n        /* \"#utility.yul\":12630:12644   */\n      gt\n        /* \"#utility.yul\":12658:12659   */\n      0x01\n        /* \"#utility.yul\":12653:13271   */\n      dup2\n      eq\n      tag_359\n      jumpi\n        /* \"#utility.yul\":13315:13316   */\n      0x00\n        /* \"#utility.yul\":13332:13338   */\n      dup5\n        /* \"#utility.yul\":13329:13406   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":13381:13390   */\n      dup3\n        /* \"#utility.yul\":13376:13379   */\n      dup8\n        /* \"#utility.yul\":13372:13391   */\n      add\n        /* \"#utility.yul\":13366:13392   */\n      mload\n        /* \"#utility.yul\":13357:13392   */\n      swap1\n      pop\n        /* \"#utility.yul\":13329:13406   */\n    tag_360:\n        /* \"#utility.yul\":13432:13499   */\n      tag_361\n        /* \"#utility.yul\":13492:13498   */\n      dup6\n        /* \"#utility.yul\":13485:13490   */\n      dup3\n        /* \"#utility.yul\":13432:13499   */\n      tag_208\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":13426:13430   */\n      dup7\n        /* \"#utility.yul\":13419:13500   */\n      sstore\n        /* \"#utility.yul\":13288:13510   */\n      pop\n        /* \"#utility.yul\":12623:13510   */\n      jump(tag_358)\n        /* \"#utility.yul\":12653:13271   */\n    tag_359:\n        /* \"#utility.yul\":12705:12709   */\n      0x1f\n        /* \"#utility.yul\":12701:12710   */\n      not\n        /* \"#utility.yul\":12693:12699   */\n      dup5\n        /* \"#utility.yul\":12689:12711   */\n      and\n        /* \"#utility.yul\":12739:12776   */\n      tag_362\n        /* \"#utility.yul\":12771:12775   */\n      dup7\n        /* \"#utility.yul\":12739:12776   */\n      tag_194\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":12798:12799   */\n      0x00\n        /* \"#utility.yul\":12812:13020   */\n    tag_363:\n        /* \"#utility.yul\":12826:12833   */\n      dup3\n        /* \"#utility.yul\":12823:12824   */\n      dup2\n        /* \"#utility.yul\":12820:12834   */\n      lt\n        /* \"#utility.yul\":12812:13020   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":12905:12914   */\n      dup5\n        /* \"#utility.yul\":12900:12903   */\n      dup10\n        /* \"#utility.yul\":12896:12915   */\n      add\n        /* \"#utility.yul\":12890:12916   */\n      mload\n        /* \"#utility.yul\":12882:12888   */\n      dup3\n        /* \"#utility.yul\":12875:12917   */\n      sstore\n        /* \"#utility.yul\":12956:12957   */\n      0x01\n        /* \"#utility.yul\":12948:12954   */\n      dup3\n        /* \"#utility.yul\":12944:12958   */\n      add\n        /* \"#utility.yul\":12934:12958   */\n      swap2\n      pop\n        /* \"#utility.yul\":13003:13005   */\n      0x20\n        /* \"#utility.yul\":12992:13001   */\n      dup6\n        /* \"#utility.yul\":12988:13006   */\n      add\n        /* \"#utility.yul\":12975:13006   */\n      swap5\n      pop\n        /* \"#utility.yul\":12849:12853   */\n      0x20\n        /* \"#utility.yul\":12846:12847   */\n      dup2\n        /* \"#utility.yul\":12842:12854   */\n      add\n        /* \"#utility.yul\":12837:12854   */\n      swap1\n      pop\n        /* \"#utility.yul\":12812:13020   */\n      jump(tag_363)\n    tag_365:\n        /* \"#utility.yul\":13048:13054   */\n      dup7\n        /* \"#utility.yul\":13039:13046   */\n      dup4\n        /* \"#utility.yul\":13036:13055   */\n      lt\n        /* \"#utility.yul\":13033:13212   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":13106:13115   */\n      dup5\n        /* \"#utility.yul\":13101:13104   */\n      dup10\n        /* \"#utility.yul\":13097:13116   */\n      add\n        /* \"#utility.yul\":13091:13117   */\n      mload\n        /* \"#utility.yul\":13149:13197   */\n      tag_367\n        /* \"#utility.yul\":13191:13195   */\n      0x1f\n        /* \"#utility.yul\":13183:13189   */\n      dup10\n        /* \"#utility.yul\":13179:13196   */\n      and\n        /* \"#utility.yul\":13168:13177   */\n      dup3\n        /* \"#utility.yul\":13149:13197   */\n      tag_207\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":13141:13147   */\n      dup4\n        /* \"#utility.yul\":13134:13198   */\n      sstore\n        /* \"#utility.yul\":13056:13212   */\n      pop\n        /* \"#utility.yul\":13033:13212   */\n    tag_366:\n        /* \"#utility.yul\":13258:13259   */\n      0x01\n        /* \"#utility.yul\":13254:13255   */\n      0x02\n        /* \"#utility.yul\":13246:13252   */\n      dup9\n        /* \"#utility.yul\":13242:13256   */\n      mul\n        /* \"#utility.yul\":13238:13260   */\n      add\n        /* \"#utility.yul\":13232:13236   */\n      dup9\n        /* \"#utility.yul\":13225:13261   */\n      sstore\n        /* \"#utility.yul\":12660:13271   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12623:13510   */\n    tag_358:\n      pop\n        /* \"#utility.yul\":12213:13516   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12121:13516   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13522:13640   */\n    tag_209:\n        /* \"#utility.yul\":13609:13633   */\n      tag_369\n        /* \"#utility.yul\":13627:13632   */\n      dup2\n        /* \"#utility.yul\":13609:13633   */\n      tag_168\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":13604:13607   */\n      dup3\n        /* \"#utility.yul\":13597:13634   */\n      mstore\n        /* \"#utility.yul\":13522:13640   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13646:13868   */\n    tag_127:\n        /* \"#utility.yul\":13739:13743   */\n      0x00\n        /* \"#utility.yul\":13777:13779   */\n      0x20\n        /* \"#utility.yul\":13766:13775   */\n      dup3\n        /* \"#utility.yul\":13762:13780   */\n      add\n        /* \"#utility.yul\":13754:13780   */\n      swap1\n      pop\n        /* \"#utility.yul\":13790:13861   */\n      tag_371\n        /* \"#utility.yul\":13858:13859   */\n      0x00\n        /* \"#utility.yul\":13847:13856   */\n      dup4\n        /* \"#utility.yul\":13843:13860   */\n      add\n        /* \"#utility.yul\":13834:13840   */\n      dup5\n        /* \"#utility.yul\":13790:13861   */\n      tag_209\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":13646:13868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13874:14316   */\n    tag_141:\n        /* \"#utility.yul\":14023:14027   */\n      0x00\n        /* \"#utility.yul\":14061:14063   */\n      0x60\n        /* \"#utility.yul\":14050:14059   */\n      dup3\n        /* \"#utility.yul\":14046:14064   */\n      add\n        /* \"#utility.yul\":14038:14064   */\n      swap1\n      pop\n        /* \"#utility.yul\":14074:14145   */\n      tag_373\n        /* \"#utility.yul\":14142:14143   */\n      0x00\n        /* \"#utility.yul\":14131:14140   */\n      dup4\n        /* \"#utility.yul\":14127:14144   */\n      add\n        /* \"#utility.yul\":14118:14124   */\n      dup7\n        /* \"#utility.yul\":14074:14145   */\n      tag_209\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":14155:14227   */\n      tag_374\n        /* \"#utility.yul\":14223:14225   */\n      0x20\n        /* \"#utility.yul\":14212:14221   */\n      dup4\n        /* \"#utility.yul\":14208:14226   */\n      add\n        /* \"#utility.yul\":14199:14205   */\n      dup6\n        /* \"#utility.yul\":14155:14227   */\n      tag_181\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":14237:14309   */\n      tag_375\n        /* \"#utility.yul\":14305:14307   */\n      0x40\n        /* \"#utility.yul\":14294:14303   */\n      dup4\n        /* \"#utility.yul\":14290:14308   */\n      add\n        /* \"#utility.yul\":14281:14287   */\n      dup5\n        /* \"#utility.yul\":14237:14309   */\n      tag_181\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":13874:14316   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14322:14502   */\n    tag_210:\n        /* \"#utility.yul\":14370:14447   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14367:14368   */\n      0x00\n        /* \"#utility.yul\":14360:14448   */\n      mstore\n        /* \"#utility.yul\":14467:14471   */\n      0x11\n        /* \"#utility.yul\":14464:14465   */\n      0x04\n        /* \"#utility.yul\":14457:14472   */\n      mstore\n        /* \"#utility.yul\":14491:14495   */\n      0x24\n        /* \"#utility.yul\":14488:14489   */\n      0x00\n        /* \"#utility.yul\":14481:14496   */\n      revert\n        /* \"#utility.yul\":14508:14699   */\n    tag_150:\n        /* \"#utility.yul\":14548:14551   */\n      0x00\n        /* \"#utility.yul\":14567:14587   */\n      tag_378\n        /* \"#utility.yul\":14585:14586   */\n      dup3\n        /* \"#utility.yul\":14567:14587   */\n      tag_171\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":14562:14587   */\n      swap2\n      pop\n        /* \"#utility.yul\":14601:14621   */\n      tag_379\n        /* \"#utility.yul\":14619:14620   */\n      dup4\n        /* \"#utility.yul\":14601:14621   */\n      tag_171\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":14596:14621   */\n      swap3\n      pop\n        /* \"#utility.yul\":14644:14645   */\n      dup3\n        /* \"#utility.yul\":14641:14642   */\n      dup3\n        /* \"#utility.yul\":14637:14646   */\n      add\n        /* \"#utility.yul\":14630:14646   */\n      swap1\n      pop\n        /* \"#utility.yul\":14665:14668   */\n      dup1\n        /* \"#utility.yul\":14662:14663   */\n      dup3\n        /* \"#utility.yul\":14659:14669   */\n      gt\n        /* \"#utility.yul\":14656:14692   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":14672:14690   */\n      tag_381\n      tag_210\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":14656:14692   */\n    tag_380:\n        /* \"#utility.yul\":14508:14699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b1f1a7aeaa919085ce74877f1e33b72d2268991bcb7c302a0fe059c21f764b1d64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_798": {
									"entryPoint": null,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:6",
										"nodeType": "YulBlock",
										"src": "0:5231:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "140:152:6",
													"nodeType": "YulBlock",
													"src": "140:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:6",
																		"nodeType": "YulLiteral",
																		"src": "157:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:6",
																		"nodeType": "YulLiteral",
																		"src": "160:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:6"
																},
																"nativeSrc": "150:88:6",
																"nodeType": "YulFunctionCall",
																"src": "150:88:6"
															},
															"nativeSrc": "150:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:6",
																		"nodeType": "YulLiteral",
																		"src": "254:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:6",
																		"nodeType": "YulLiteral",
																		"src": "257:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:6"
																},
																"nativeSrc": "247:15:6",
																"nodeType": "YulFunctionCall",
																"src": "247:15:6"
															},
															"nativeSrc": "247:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:6",
																		"nodeType": "YulLiteral",
																		"src": "278:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:6",
																		"nodeType": "YulLiteral",
																		"src": "281:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:6"
																},
																"nativeSrc": "271:15:6",
																"nodeType": "YulFunctionCall",
																"src": "271:15:6"
															},
															"nativeSrc": "271:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:6"
											},
											{
												"body": {
													"nativeSrc": "326:152:6",
													"nodeType": "YulBlock",
													"src": "326:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:6",
																		"nodeType": "YulLiteral",
																		"src": "343:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:6",
																		"nodeType": "YulLiteral",
																		"src": "346:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:6"
																},
																"nativeSrc": "336:88:6",
																"nodeType": "YulFunctionCall",
																"src": "336:88:6"
															},
															"nativeSrc": "336:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:6",
																		"nodeType": "YulLiteral",
																		"src": "443:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:15:6",
																"nodeType": "YulFunctionCall",
																"src": "433:15:6"
															},
															"nativeSrc": "433:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:6",
																		"nodeType": "YulLiteral",
																		"src": "464:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:6",
																		"nodeType": "YulLiteral",
																		"src": "467:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:6"
																},
																"nativeSrc": "457:15:6",
																"nodeType": "YulFunctionCall",
																"src": "457:15:6"
															},
															"nativeSrc": "457:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:6"
											},
											{
												"body": {
													"nativeSrc": "535:269:6",
													"nodeType": "YulBlock",
													"src": "535:269:6",
													"statements": [
														{
															"nativeSrc": "545:22:6",
															"nodeType": "YulAssignment",
															"src": "545:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:6",
																		"nodeType": "YulLiteral",
																		"src": "565:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:6"
																},
																"nativeSrc": "555:12:6",
																"nodeType": "YulFunctionCall",
																"src": "555:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:6"
																}
															]
														},
														{
															"nativeSrc": "576:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:6",
																		"nodeType": "YulLiteral",
																		"src": "612:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:6"
																},
																"nativeSrc": "602:12:6",
																"nodeType": "YulFunctionCall",
																"src": "602:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:6",
																	"nodeType": "YulTypedName",
																	"src": "580:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:6",
																"nodeType": "YulBlock",
																"src": "653:51:6",
																"statements": [
																	{
																		"nativeSrc": "667:27:6",
																		"nodeType": "YulAssignment",
																		"src": "667:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:6",
																					"nodeType": "YulLiteral",
																					"src": "689:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:6"
																			},
																			"nativeSrc": "677:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:6"
																},
																"nativeSrc": "626:26:6",
																"nodeType": "YulFunctionCall",
																"src": "626:26:6"
															},
															"nativeSrc": "623:81:6",
															"nodeType": "YulIf",
															"src": "623:81:6"
														},
														{
															"body": {
																"nativeSrc": "756:42:6",
																"nodeType": "YulBlock",
																"src": "756:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:6"
																			},
																			"nativeSrc": "770:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:6"
																		},
																		"nativeSrc": "770:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:6",
																				"nodeType": "YulLiteral",
																				"src": "751:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:6"
																		},
																		"nativeSrc": "740:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:6"
																},
																"nativeSrc": "717:38:6",
																"nodeType": "YulFunctionCall",
																"src": "717:38:6"
															},
															"nativeSrc": "714:84:6",
															"nodeType": "YulIf",
															"src": "714:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:6",
														"nodeType": "YulTypedName",
														"src": "519:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:6",
														"nodeType": "YulTypedName",
														"src": "528:6:6",
														"type": ""
													}
												],
												"src": "484:320:6"
											},
											{
												"body": {
													"nativeSrc": "864:87:6",
													"nodeType": "YulBlock",
													"src": "864:87:6",
													"statements": [
														{
															"nativeSrc": "874:11:6",
															"nodeType": "YulAssignment",
															"src": "874:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:6",
																"nodeType": "YulIdentifier",
																"src": "882:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:6",
																		"nodeType": "YulLiteral",
																		"src": "902:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:6"
																},
																"nativeSrc": "895:14:6",
																"nodeType": "YulFunctionCall",
																"src": "895:14:6"
															},
															"nativeSrc": "895:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:6"
														},
														{
															"nativeSrc": "918:26:6",
															"nodeType": "YulAssignment",
															"src": "918:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:6",
																		"nodeType": "YulLiteral",
																		"src": "936:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:6",
																		"nodeType": "YulLiteral",
																		"src": "939:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:6"
																},
																"nativeSrc": "926:18:6",
																"nodeType": "YulFunctionCall",
																"src": "926:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:6",
														"nodeType": "YulTypedName",
														"src": "851:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:6",
														"nodeType": "YulTypedName",
														"src": "859:4:6",
														"type": ""
													}
												],
												"src": "810:141:6"
											},
											{
												"body": {
													"nativeSrc": "1001:49:6",
													"nodeType": "YulBlock",
													"src": "1001:49:6",
													"statements": [
														{
															"nativeSrc": "1011:33:6",
															"nodeType": "YulAssignment",
															"src": "1011:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:6"
																		},
																		"nativeSrc": "1025:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:6"
																},
																"nativeSrc": "1021:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:6",
														"nodeType": "YulTypedName",
														"src": "984:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:6",
														"nodeType": "YulTypedName",
														"src": "994:6:6",
														"type": ""
													}
												],
												"src": "957:93:6"
											},
											{
												"body": {
													"nativeSrc": "1109:54:6",
													"nodeType": "YulBlock",
													"src": "1109:54:6",
													"statements": [
														{
															"nativeSrc": "1119:37:6",
															"nodeType": "YulAssignment",
															"src": "1119:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:6"
																},
																"nativeSrc": "1140:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:6",
														"nodeType": "YulTypedName",
														"src": "1084:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:6",
														"nodeType": "YulTypedName",
														"src": "1090:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:6",
														"nodeType": "YulTypedName",
														"src": "1100:8:6",
														"type": ""
													}
												],
												"src": "1056:107:6"
											},
											{
												"body": {
													"nativeSrc": "1245:317:6",
													"nodeType": "YulBlock",
													"src": "1245:317:6",
													"statements": [
														{
															"nativeSrc": "1255:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:6"
																},
																"nativeSrc": "1272:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:6",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:6",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:6"
																},
																"nativeSrc": "1311:97:6",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:6",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:6",
															"nodeType": "YulAssignment",
															"src": "1417:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:6"
																},
																"nativeSrc": "1429:39:6",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:6"
																}
															]
														},
														{
															"nativeSrc": "1477:30:6",
															"nodeType": "YulAssignment",
															"src": "1477:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:6"
																		},
																		"nativeSrc": "1497:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:6"
																},
																"nativeSrc": "1486:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:6"
																}
															]
														},
														{
															"nativeSrc": "1516:40:6",
															"nodeType": "YulAssignment",
															"src": "1516:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:6"
																		},
																		"nativeSrc": "1536:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:6"
																},
																"nativeSrc": "1526:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:6",
														"nodeType": "YulTypedName",
														"src": "1206:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:6",
														"nodeType": "YulTypedName",
														"src": "1213:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:6",
														"nodeType": "YulTypedName",
														"src": "1225:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:6",
														"nodeType": "YulTypedName",
														"src": "1238:6:6",
														"type": ""
													}
												],
												"src": "1169:393:6"
											},
											{
												"body": {
													"nativeSrc": "1613:32:6",
													"nodeType": "YulBlock",
													"src": "1613:32:6",
													"statements": [
														{
															"nativeSrc": "1623:16:6",
															"nodeType": "YulAssignment",
															"src": "1623:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:6",
																"nodeType": "YulIdentifier",
																"src": "1634:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:6",
														"nodeType": "YulTypedName",
														"src": "1595:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:6",
														"nodeType": "YulTypedName",
														"src": "1605:7:6",
														"type": ""
													}
												],
												"src": "1568:77:6"
											},
											{
												"body": {
													"nativeSrc": "1683:28:6",
													"nodeType": "YulBlock",
													"src": "1683:28:6",
													"statements": [
														{
															"nativeSrc": "1693:12:6",
															"nodeType": "YulAssignment",
															"src": "1693:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:6",
																"nodeType": "YulIdentifier",
																"src": "1700:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:6",
														"nodeType": "YulTypedName",
														"src": "1669:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:6",
														"nodeType": "YulTypedName",
														"src": "1679:3:6",
														"type": ""
													}
												],
												"src": "1651:60:6"
											},
											{
												"body": {
													"nativeSrc": "1777:82:6",
													"nodeType": "YulBlock",
													"src": "1777:82:6",
													"statements": [
														{
															"nativeSrc": "1787:66:6",
															"nodeType": "YulAssignment",
															"src": "1787:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:6"
																				},
																				"nativeSrc": "1827:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:6"
																		},
																		"nativeSrc": "1818:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:6"
																},
																"nativeSrc": "1800:53:6",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:6",
														"nodeType": "YulTypedName",
														"src": "1757:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:6",
														"nodeType": "YulTypedName",
														"src": "1767:9:6",
														"type": ""
													}
												],
												"src": "1717:142:6"
											},
											{
												"body": {
													"nativeSrc": "1912:28:6",
													"nodeType": "YulBlock",
													"src": "1912:28:6",
													"statements": [
														{
															"nativeSrc": "1922:12:6",
															"nodeType": "YulAssignment",
															"src": "1922:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:6",
																"nodeType": "YulIdentifier",
																"src": "1929:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:6",
														"nodeType": "YulTypedName",
														"src": "1898:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:6",
														"nodeType": "YulTypedName",
														"src": "1908:3:6",
														"type": ""
													}
												],
												"src": "1865:75:6"
											},
											{
												"body": {
													"nativeSrc": "2022:193:6",
													"nodeType": "YulBlock",
													"src": "2022:193:6",
													"statements": [
														{
															"nativeSrc": "2032:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:6"
																},
																"nativeSrc": "2056:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:6",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:6"
																				},
																				"nativeSrc": "2145:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:6"
																				},
																				"nativeSrc": "2166:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:6"
																		},
																		"nativeSrc": "2117:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:6"
																},
																"nativeSrc": "2104:105:6",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:6"
															},
															"nativeSrc": "2104:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:6",
														"nodeType": "YulTypedName",
														"src": "1999:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:6",
														"nodeType": "YulTypedName",
														"src": "2005:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:6",
														"nodeType": "YulTypedName",
														"src": "2013:7:6",
														"type": ""
													}
												],
												"src": "1946:269:6"
											},
											{
												"body": {
													"nativeSrc": "2270:24:6",
													"nodeType": "YulBlock",
													"src": "2270:24:6",
													"statements": [
														{
															"nativeSrc": "2280:8:6",
															"nodeType": "YulAssignment",
															"src": "2280:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:6",
																"nodeType": "YulLiteral",
																"src": "2287:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:6",
														"nodeType": "YulTypedName",
														"src": "2266:3:6",
														"type": ""
													}
												],
												"src": "2221:73:6"
											},
											{
												"body": {
													"nativeSrc": "2353:136:6",
													"nodeType": "YulBlock",
													"src": "2353:136:6",
													"statements": [
														{
															"nativeSrc": "2363:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:6"
																},
																"nativeSrc": "2377:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:6"
																},
																"nativeSrc": "2418:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:6"
															},
															"nativeSrc": "2418:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:6",
														"nodeType": "YulTypedName",
														"src": "2339:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:6",
														"nodeType": "YulTypedName",
														"src": "2345:6:6",
														"type": ""
													}
												],
												"src": "2300:189:6"
											},
											{
												"body": {
													"nativeSrc": "2545:136:6",
													"nodeType": "YulBlock",
													"src": "2545:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:6",
																"nodeType": "YulBlock",
																"src": "2612:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:6"
																			},
																			"nativeSrc": "2626:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:6"
																		},
																		"nativeSrc": "2626:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:6"
																},
																"nativeSrc": "2562:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:6"
															},
															"nativeSrc": "2555:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:6",
																"nodeType": "YulBlock",
																"src": "2577:26:6",
																"statements": [
																	{
																		"nativeSrc": "2579:22:6",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:6"
																			},
																			"nativeSrc": "2588:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:6",
																"nodeType": "YulBlock",
																"src": "2559:2:6",
																"statements": []
															},
															"src": "2555:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:6",
														"nodeType": "YulTypedName",
														"src": "2533:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:6",
														"nodeType": "YulTypedName",
														"src": "2540:3:6",
														"type": ""
													}
												],
												"src": "2495:186:6"
											},
											{
												"body": {
													"nativeSrc": "2766:464:6",
													"nodeType": "YulBlock",
													"src": "2766:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:6",
																"nodeType": "YulBlock",
																"src": "2792:431:6",
																"statements": [
																	{
																		"nativeSrc": "2806:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:6"
																			},
																			"nativeSrc": "2822:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:6",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:6"
																					},
																					"nativeSrc": "2906:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:6"
																			},
																			"nativeSrc": "2892:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:6",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:6",
																			"nodeType": "YulBlock",
																			"src": "3093:27:6",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:6",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:6",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:6"
																			},
																			"nativeSrc": "3074:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:6"
																		},
																		"nativeSrc": "3071:49:6",
																		"nodeType": "YulIf",
																		"src": "3071:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:6"
																							},
																							"nativeSrc": "3189:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:6"
																					},
																					"nativeSrc": "3175:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:6"
																			},
																			"nativeSrc": "3133:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:6"
																		},
																		"nativeSrc": "3133:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:6"
																},
																"nativeSrc": "2780:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:6"
															},
															"nativeSrc": "2777:446:6",
															"nodeType": "YulIf",
															"src": "2777:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:6",
														"nodeType": "YulTypedName",
														"src": "2742:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:6",
														"nodeType": "YulTypedName",
														"src": "2749:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:6",
														"nodeType": "YulTypedName",
														"src": "2754:10:6",
														"type": ""
													}
												],
												"src": "2687:543:6"
											},
											{
												"body": {
													"nativeSrc": "3299:54:6",
													"nodeType": "YulBlock",
													"src": "3299:54:6",
													"statements": [
														{
															"nativeSrc": "3309:37:6",
															"nodeType": "YulAssignment",
															"src": "3309:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:6"
																},
																"nativeSrc": "3330:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:6",
														"nodeType": "YulTypedName",
														"src": "3274:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:6",
														"nodeType": "YulTypedName",
														"src": "3280:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:6",
														"nodeType": "YulTypedName",
														"src": "3290:8:6",
														"type": ""
													}
												],
												"src": "3236:117:6"
											},
											{
												"body": {
													"nativeSrc": "3410:118:6",
													"nodeType": "YulBlock",
													"src": "3410:118:6",
													"statements": [
														{
															"nativeSrc": "3420:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:6"
																				},
																				"nativeSrc": "3465:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:6"
																				},
																				"nativeSrc": "3480:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:6"
																		},
																		"nativeSrc": "3436:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:6"
																},
																"nativeSrc": "3432:56:6",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:6",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:6",
															"nodeType": "YulAssignment",
															"src": "3497:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:6"
																},
																"nativeSrc": "3507:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:6",
														"nodeType": "YulTypedName",
														"src": "3387:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:6",
														"nodeType": "YulTypedName",
														"src": "3393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:6",
														"nodeType": "YulTypedName",
														"src": "3403:6:6",
														"type": ""
													}
												],
												"src": "3359:169:6"
											},
											{
												"body": {
													"nativeSrc": "3614:214:6",
													"nodeType": "YulBlock",
													"src": "3614:214:6",
													"statements": [
														{
															"nativeSrc": "3747:37:6",
															"nodeType": "YulAssignment",
															"src": "3747:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:6"
																},
																"nativeSrc": "3755:29:6",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:6"
																}
															]
														},
														{
															"nativeSrc": "3793:29:6",
															"nodeType": "YulAssignment",
															"src": "3793:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:6"
																		},
																		"nativeSrc": "3810:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:6"
																},
																"nativeSrc": "3801:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:6",
														"nodeType": "YulTypedName",
														"src": "3595:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:6",
														"nodeType": "YulTypedName",
														"src": "3601:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:6",
														"nodeType": "YulTypedName",
														"src": "3609:4:6",
														"type": ""
													}
												],
												"src": "3533:295:6"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:6",
													"nodeType": "YulBlock",
													"src": "3925:1303:6",
													"statements": [
														{
															"nativeSrc": "3936:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:6"
																},
																"nativeSrc": "3950:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:6",
																"nodeType": "YulBlock",
																"src": "4072:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:6"
																			},
																			"nativeSrc": "4074:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:6"
																		},
																		"nativeSrc": "4074:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:6",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:6"
																},
																"nativeSrc": "4041:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:6"
															},
															"nativeSrc": "4038:56:6",
															"nodeType": "YulIf",
															"src": "4038:56:6"
														},
														{
															"nativeSrc": "4104:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:6"
																		},
																		"nativeSrc": "4144:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:6"
																},
																"nativeSrc": "4118:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:6"
																},
																"nativeSrc": "4203:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:6"
															},
															"nativeSrc": "4203:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:6"
														},
														{
															"nativeSrc": "4280:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:6",
																"nodeType": "YulLiteral",
																"src": "4297:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:6",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:6",
															"nodeType": "YulAssignment",
															"src": "4308:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:6",
																"nodeType": "YulLiteral",
																"src": "4321:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:6",
																		"nodeType": "YulBlock",
																		"src": "4372:611:6",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:6",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:6"
																							},
																							"nativeSrc": "4413:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:6"
																					},
																					"nativeSrc": "4401:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:6",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:6"
																					},
																					"nativeSrc": "4451:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:6",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:6",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:6",
																					"nodeType": "YulBlock",
																					"src": "4569:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:6"
																												},
																												"nativeSrc": "4608:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:6"
																										},
																										"nativeSrc": "4602:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:6"
																								},
																								"nativeSrc": "4587:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:6"
																							},
																							"nativeSrc": "4587:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:6"
																						},
																						{
																							"nativeSrc": "4646:24:6",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:6",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:6"
																								},
																								"nativeSrc": "4656:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:6",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:6",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:6"
																								},
																								"nativeSrc": "4700:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:6"
																					},
																					"nativeSrc": "4532:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:6"
																				},
																				"nativeSrc": "4524:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:6",
																					"nodeType": "YulBlock",
																					"src": "4547:21:6",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:6",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:6",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:6"
																								},
																								"nativeSrc": "4554:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:6",
																					"nodeType": "YulBlock",
																					"src": "4528:3:6",
																					"statements": []
																				},
																				"src": "4524:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:6",
																					"nodeType": "YulBlock",
																					"src": "4768:156:6",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:6"
																										},
																										"nativeSrc": "4809:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:6"
																								},
																								"nativeSrc": "4803:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:6",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:6",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:6"
																												},
																												"nativeSrc": "4891:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:6"
																										},
																										"nativeSrc": "4861:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:6"
																								},
																								"nativeSrc": "4846:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:6"
																							},
																							"nativeSrc": "4846:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:6"
																					},
																					"nativeSrc": "4748:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:6"
																				},
																				"nativeSrc": "4745:179:6",
																				"nodeType": "YulIf",
																				"src": "4745:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:6",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:6"
																									},
																									"nativeSrc": "4954:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:6",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:6"
																							},
																							"nativeSrc": "4950:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:6"
																					},
																					"nativeSrc": "4937:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:6"
																				},
																				"nativeSrc": "4937:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:6"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:6",
																	"nodeType": "YulCase",
																	"src": "4365:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:6",
																		"nodeType": "YulBlock",
																		"src": "5000:222:6",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:6",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:6",
																					"nodeType": "YulBlock",
																					"src": "5051:67:6",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:6",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:6"
																										},
																										"nativeSrc": "5084:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:6"
																								},
																								"nativeSrc": "5078:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:6"
																				},
																				"nativeSrc": "5041:77:6",
																				"nodeType": "YulIf",
																				"src": "5041:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:6"
																							},
																							"nativeSrc": "5144:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:6"
																					},
																					"nativeSrc": "5131:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:6"
																				},
																				"nativeSrc": "5131:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:6"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:6",
																	"nodeType": "YulCase",
																	"src": "4992:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:6"
																},
																"nativeSrc": "4342:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:6"
															},
															"nativeSrc": "4335:887:6",
															"nodeType": "YulSwitch",
															"src": "4335:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:6",
														"nodeType": "YulTypedName",
														"src": "3914:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:6",
														"nodeType": "YulTypedName",
														"src": "3920:3:6",
														"type": ""
													}
												],
												"src": "3833:1395:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280601081526020017f537570706c79436861696e546f6b656e000000000000000000000000000000008152506040518060400160405280600381526020017f5343540000000000000000000000000000000000000000000000000000000000815250816003908161008b91906102dd565b50806004908161009b91906102dd565b5050506103ac565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061011e57607f821691505b602082108103610131576101306100da565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610158565b61019d8683610158565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101e16101dc6101d7846101b5565b6101be565b6101b5565b9050919050565b5f819050919050565b6101fa836101c7565b61020e610206826101e8565b848454610164565b825550505050565b5f90565b610222610216565b61022d8184846101f1565b505050565b5b81811015610250576102455f8261021a565b600181019050610233565b5050565b601f8211156102955761026681610137565b61026f84610149565b8101602085101561027e578190505b61029261028a85610149565b830182610232565b50505b505050565b5f82821c905092915050565b5f6102b55f198460080261029a565b1980831691505092915050565b5f6102cd83836102a6565b9150826002028217905092915050565b6102e6826100a3565b67ffffffffffffffff8111156102ff576102fe6100ad565b5b6103098254610107565b610314828285610254565b5f60209050601f831160018114610345575f8415610333578287015190505b61033d85826102c2565b8655506103a4565b601f19841661035386610137565b5f5b8281101561037a57848901518255600182019150602085019450602081019050610355565b868310156103975784890151610393601f8916826102a6565b8355505b6001600288020188555050505b505050505050565b6114dd806103b95f395ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c8063313ce5671161008a57806370a082311161006457806370a082311461022357806395d89b4114610253578063a9059cbb14610271578063dd62ed3e146102a1576100cd565b8063313ce567146101a557806348f7eb30146101c35780636813b53b146101f3576100cd565b8063025a42ae146100d157806306fdde03146100ed578063095ea7b31461010b57806318160ddd1461013b57806323b872dd146101595780632d15e94b14610189575b5f80fd5b6100eb60048036038101906100e69190610d5a565b6102d1565b005b6100f56102e0565b6040516101029190610e08565b60405180910390f35b61012560048036038101906101209190610d5a565b610370565b6040516101329190610e42565b60405180910390f35b610143610392565b6040516101509190610e6a565b60405180910390f35b610173600480360381019061016e9190610e83565b61039b565b6040516101809190610e42565b60405180910390f35b6101a3600480360381019061019e9190610fff565b6103c9565b005b6101ad6103fd565b6040516101ba9190611074565b60405180910390f35b6101dd60048036038101906101d8919061108d565b610405565b6040516101ea9190610e08565b60405180910390f35b61020d6004803603810190610208919061108d565b6104a0565b60405161021a9190610e08565b60405180910390f35b61023d600480360381019061023891906110b8565b610541565b60405161024a9190610e6a565b60405180910390f35b61025b610586565b6040516102689190610e08565b60405180910390f35b61028b60048036038101906102869190610d5a565b610616565b6040516102989190610e42565b60405180910390f35b6102bb60048036038101906102b691906110e3565b610638565b6040516102c89190610e6a565b60405180910390f35b6102dc3383836106ba565b5050565b6060600380546102ef9061114e565b80601f016020809104026020016040519081016040528092919081815260200182805461031b9061114e565b80156103665780601f1061033d57610100808354040283529160200191610366565b820191905f5260205f20905b81548152906001019060200180831161034957829003601f168201915b5050505050905090565b5f8061037a6107aa565b90506103878185856107b1565b600191505092915050565b5f600254905090565b5f806103a56107aa565b90506103b28582856107c3565b6103bd8585856106ba565b60019150509392505050565b6103d33382610855565b8160055f6103df610392565b81526020019081526020015f2090816103f8919061131b565b505050565b5f6012905090565b6005602052805f5260405f205f9150905080546104219061114e565b80601f016020809104026020016040519081016040528092919081815260200182805461044d9061114e565b80156104985780601f1061046f57610100808354040283529160200191610498565b820191905f5260205f20905b81548152906001019060200180831161047b57829003601f168201915b505050505081565b606060055f8381526020019081526020015f2080546104be9061114e565b80601f01602080910402602001604051908101604052809291908181526020018280546104ea9061114e565b80156105355780601f1061050c57610100808354040283529160200191610535565b820191905f5260205f20905b81548152906001019060200180831161051857829003601f168201915b50505050509050919050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546105959061114e565b80601f01602080910402602001604051908101604052809291908181526020018280546105c19061114e565b801561060c5780601f106105e35761010080835404028352916020019161060c565b820191905f5260205f20905b8154815290600101906020018083116105ef57829003601f168201915b5050505050905090565b5f806106206107aa565b905061062d8185856106ba565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361072a575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161072191906113f9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361079a575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161079191906113f9565b60405180910390fd5b6107a58383836108d4565b505050565b5f33905090565b6107be8383836001610aed565b505050565b5f6107ce8484610638565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461084f5781811015610840578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161083793929190611412565b60405180910390fd5b61084e84848484035f610aed565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108c5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108bc91906113f9565b60405180910390fd5b6108d05f83836108d4565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610924578060025f8282546109189190611474565b925050819055506109f2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156109ad578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016109a493929190611412565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a39578060025f8282540392505081905550610a83565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ae09190610e6a565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b5d575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b5491906113f9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bcd575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bc491906113f9565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610cb6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cad9190610e6a565b60405180910390a35b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cf682610ccd565b9050919050565b610d0681610cec565b8114610d10575f80fd5b50565b5f81359050610d2181610cfd565b92915050565b5f819050919050565b610d3981610d27565b8114610d43575f80fd5b50565b5f81359050610d5481610d30565b92915050565b5f8060408385031215610d7057610d6f610cc5565b5b5f610d7d85828601610d13565b9250506020610d8e85828601610d46565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610dda82610d98565b610de48185610da2565b9350610df4818560208601610db2565b610dfd81610dc0565b840191505092915050565b5f6020820190508181035f830152610e208184610dd0565b905092915050565b5f8115159050919050565b610e3c81610e28565b82525050565b5f602082019050610e555f830184610e33565b92915050565b610e6481610d27565b82525050565b5f602082019050610e7d5f830184610e5b565b92915050565b5f805f60608486031215610e9a57610e99610cc5565b5b5f610ea786828701610d13565b9350506020610eb886828701610d13565b9250506040610ec986828701610d46565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610f1182610dc0565b810181811067ffffffffffffffff82111715610f3057610f2f610edb565b5b80604052505050565b5f610f42610cbc565b9050610f4e8282610f08565b919050565b5f67ffffffffffffffff821115610f6d57610f6c610edb565b5b610f7682610dc0565b9050602081019050919050565b828183375f83830152505050565b5f610fa3610f9e84610f53565b610f39565b905082815260208101848484011115610fbf57610fbe610ed7565b5b610fca848285610f83565b509392505050565b5f82601f830112610fe657610fe5610ed3565b5b8135610ff6848260208601610f91565b91505092915050565b5f806040838503121561101557611014610cc5565b5b5f83013567ffffffffffffffff81111561103257611031610cc9565b5b61103e85828601610fd2565b925050602061104f85828601610d46565b9150509250929050565b5f60ff82169050919050565b61106e81611059565b82525050565b5f6020820190506110875f830184611065565b92915050565b5f602082840312156110a2576110a1610cc5565b5b5f6110af84828501610d46565b91505092915050565b5f602082840312156110cd576110cc610cc5565b5b5f6110da84828501610d13565b91505092915050565b5f80604083850312156110f9576110f8610cc5565b5b5f61110685828601610d13565b925050602061111785828601610d13565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061116557607f821691505b60208210810361117857611177611121565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026111da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261119f565b6111e4868361119f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61121f61121a61121584610d27565b6111fc565b610d27565b9050919050565b5f819050919050565b61123883611205565b61124c61124482611226565b8484546111ab565b825550505050565b5f90565b611260611254565b61126b81848461122f565b505050565b5b8181101561128e576112835f82611258565b600181019050611271565b5050565b601f8211156112d3576112a48161117e565b6112ad84611190565b810160208510156112bc578190505b6112d06112c885611190565b830182611270565b50505b505050565b5f82821c905092915050565b5f6112f35f19846008026112d8565b1980831691505092915050565b5f61130b83836112e4565b9150826002028217905092915050565b61132482610d98565b67ffffffffffffffff81111561133d5761133c610edb565b5b611347825461114e565b611352828285611292565b5f60209050601f831160018114611383575f8415611371578287015190505b61137b8582611300565b8655506113e2565b601f1984166113918661117e565b5f5b828110156113b857848901518255600182019150602085019450602081019050611393565b868310156113d557848901516113d1601f8916826112e4565b8355505b6001600288020188555050505b505050505050565b6113f381610cec565b82525050565b5f60208201905061140c5f8301846113ea565b92915050565b5f6060820190506114255f8301866113ea565b6114326020830185610e5b565b61143f6040830184610e5b565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61147e82610d27565b915061148983610d27565b92508282019050808211156114a1576114a0611447565b5b9291505056fea2646970667358221220b1f1a7aeaa919085ce74877f1e33b72d2268991bcb7c302a0fe059c21f764b1d64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537570706C79436861696E546F6B656E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5343540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x2DD JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x2DD JUMP JUMPDEST POP POP POP PUSH2 0x3AC JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x131 JUMPI PUSH2 0x130 PUSH2 0xDA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x193 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x19D DUP7 DUP4 PUSH2 0x158 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1 PUSH2 0x1DC PUSH2 0x1D7 DUP5 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x1BE JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FA DUP4 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x206 DUP3 PUSH2 0x1E8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x164 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x216 JUMP JUMPDEST PUSH2 0x22D DUP2 DUP5 DUP5 PUSH2 0x1F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x250 JUMPI PUSH2 0x245 PUSH0 DUP3 PUSH2 0x21A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x233 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x295 JUMPI PUSH2 0x266 DUP2 PUSH2 0x137 JUMP JUMPDEST PUSH2 0x26F DUP5 PUSH2 0x149 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x292 PUSH2 0x28A DUP6 PUSH2 0x149 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x232 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B5 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x29A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD DUP4 DUP4 PUSH2 0x2A6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E6 DUP3 PUSH2 0xA3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FF JUMPI PUSH2 0x2FE PUSH2 0xAD JUMP JUMPDEST JUMPDEST PUSH2 0x309 DUP3 SLOAD PUSH2 0x107 JUMP JUMPDEST PUSH2 0x314 DUP3 DUP3 DUP6 PUSH2 0x254 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x345 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x333 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x33D DUP6 DUP3 PUSH2 0x2C2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x353 DUP7 PUSH2 0x137 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x37A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x355 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x397 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x393 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2A6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14DD DUP1 PUSH2 0x3B9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A1 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x48F7EB30 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x6813B53B EQ PUSH2 0x1F3 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x25A42AE EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x2D15E94B EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AD PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x108D JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x108D JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x10B8 JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC CALLER DUP4 DUP4 PUSH2 0x6BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2EF SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x31B SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x366 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x366 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x349 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x37A PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP PUSH2 0x387 DUP2 DUP6 DUP6 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3A5 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP PUSH2 0x3B2 DUP6 DUP3 DUP6 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x3BD DUP6 DUP6 DUP6 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3D3 CALLER DUP3 PUSH2 0x855 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH0 PUSH2 0x3DF PUSH2 0x392 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x131B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x421 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x498 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x498 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x4BE SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4EA SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x535 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x50C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x535 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x518 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x595 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5C1 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x60C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x60C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x620 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP PUSH2 0x62D DUP2 DUP6 DUP6 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x72A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x721 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x79A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 DUP4 DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7BE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7CE DUP5 DUP5 PUSH2 0x638 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x84F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x840 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAED JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D0 PUSH0 DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x924 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9F2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x9AD JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA39 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA83 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB54 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC4 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCB6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCAD SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCF6 DUP3 PUSH2 0xCCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD06 DUP2 PUSH2 0xCEC JUMP JUMPDEST DUP2 EQ PUSH2 0xD10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD21 DUP2 PUSH2 0xCFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD39 DUP2 PUSH2 0xD27 JUMP JUMPDEST DUP2 EQ PUSH2 0xD43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD54 DUP2 PUSH2 0xD30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD70 JUMPI PUSH2 0xD6F PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD7D DUP6 DUP3 DUP7 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD8E DUP6 DUP3 DUP7 ADD PUSH2 0xD46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDDA DUP3 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0xDE4 DUP2 DUP6 PUSH2 0xDA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xDF4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0xDC0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE20 DUP2 DUP5 PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0xE28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE55 PUSH0 DUP4 ADD DUP5 PUSH2 0xE33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE64 DUP2 PUSH2 0xD27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7D PUSH0 DUP4 ADD DUP5 PUSH2 0xE5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE9A JUMPI PUSH2 0xE99 PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEA7 DUP7 DUP3 DUP8 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEB8 DUP7 DUP3 DUP8 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEC9 DUP7 DUP3 DUP8 ADD PUSH2 0xD46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xF11 DUP3 PUSH2 0xDC0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF30 JUMPI PUSH2 0xF2F PUSH2 0xEDB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF42 PUSH2 0xCBC JUMP JUMPDEST SWAP1 POP PUSH2 0xF4E DUP3 DUP3 PUSH2 0xF08 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF6D JUMPI PUSH2 0xF6C PUSH2 0xEDB JUMP JUMPDEST JUMPDEST PUSH2 0xF76 DUP3 PUSH2 0xDC0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFA3 PUSH2 0xF9E DUP5 PUSH2 0xF53 JUMP JUMPDEST PUSH2 0xF39 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xFBF JUMPI PUSH2 0xFBE PUSH2 0xED7 JUMP JUMPDEST JUMPDEST PUSH2 0xFCA DUP5 DUP3 DUP6 PUSH2 0xF83 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFE6 JUMPI PUSH2 0xFE5 PUSH2 0xED3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFF6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1015 JUMPI PUSH2 0x1014 PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1032 JUMPI PUSH2 0x1031 PUSH2 0xCC9 JUMP JUMPDEST JUMPDEST PUSH2 0x103E DUP6 DUP3 DUP7 ADD PUSH2 0xFD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x104F DUP6 DUP3 DUP7 ADD PUSH2 0xD46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106E DUP2 PUSH2 0x1059 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1087 PUSH0 DUP4 ADD DUP5 PUSH2 0x1065 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10A2 JUMPI PUSH2 0x10A1 PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10AF DUP5 DUP3 DUP6 ADD PUSH2 0xD46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10CD JUMPI PUSH2 0x10CC PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10DA DUP5 DUP3 DUP6 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F8 PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1106 DUP6 DUP3 DUP7 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1117 DUP6 DUP3 DUP7 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1165 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1178 JUMPI PUSH2 0x1177 PUSH2 0x1121 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x11DA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x11E4 DUP7 DUP4 PUSH2 0x119F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x121F PUSH2 0x121A PUSH2 0x1215 DUP5 PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1238 DUP4 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x124C PUSH2 0x1244 DUP3 PUSH2 0x1226 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x11AB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1260 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x126B DUP2 DUP5 DUP5 PUSH2 0x122F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x128E JUMPI PUSH2 0x1283 PUSH0 DUP3 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1271 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x12D3 JUMPI PUSH2 0x12A4 DUP2 PUSH2 0x117E JUMP JUMPDEST PUSH2 0x12AD DUP5 PUSH2 0x1190 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x12BC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x12D0 PUSH2 0x12C8 DUP6 PUSH2 0x1190 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1270 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12F3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x12D8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x130B DUP4 DUP4 PUSH2 0x12E4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1324 DUP3 PUSH2 0xD98 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x133D JUMPI PUSH2 0x133C PUSH2 0xEDB JUMP JUMPDEST JUMPDEST PUSH2 0x1347 DUP3 SLOAD PUSH2 0x114E JUMP JUMPDEST PUSH2 0x1352 DUP3 DUP3 DUP6 PUSH2 0x1292 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1383 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1371 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x137B DUP6 DUP3 PUSH2 0x1300 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1391 DUP7 PUSH2 0x117E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13B8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1393 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x13D5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x13D1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x12E4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13F3 DUP2 PUSH2 0xCEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x140C PUSH0 DUP4 ADD DUP5 PUSH2 0x13EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1425 PUSH0 DUP4 ADD DUP7 PUSH2 0x13EA JUMP JUMPDEST PUSH2 0x1432 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE5B JUMP JUMPDEST PUSH2 0x143F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE5B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x147E DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP PUSH2 0x1489 DUP4 PUSH2 0xD27 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14A1 JUMPI PUSH2 0x14A0 PUSH2 0x1447 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 CALL 0xA7 0xAE 0xAA SWAP2 SWAP1 DUP6 0xCE PUSH21 0x877F1E33B72D2268991BCB7C302A0FE059C21F764B SAR PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "118:564:5:-:0;;;160:50;;;;;;;;;;1896:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;118:564:5;;7:99:6;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;118:564:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1969,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 2797,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 2133,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 1962,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 1987,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1722,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 2260,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 1592,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 880,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1345,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1021,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getProductDetails_850": {
									"entryPoint": 1184,
									"id": 850,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintProduct_823": {
									"entryPoint": 969,
									"id": 823,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 736,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@productDetails_802": {
									"entryPoint": 1029,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 1414,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 914,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 923,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferProduct_838": {
									"entryPoint": 721,
									"id": 838,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transfer_261": {
									"entryPoint": 1558,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 3985,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 4050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5138,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 3923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 4478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 4754,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 4720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 4613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 4891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3506,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 4496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 4864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 4836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3803,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 4646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3795,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 3799,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3269,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 4511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 4824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 4696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 4523,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 4692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14702:6",
										"nodeType": "YulBlock",
										"src": "0:14702:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "886:32:6",
													"nodeType": "YulBlock",
													"src": "886:32:6",
													"statements": [
														{
															"nativeSrc": "896:16:6",
															"nodeType": "YulAssignment",
															"src": "896:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:6",
																"nodeType": "YulIdentifier",
																"src": "907:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:6",
														"nodeType": "YulTypedName",
														"src": "868:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:6",
														"nodeType": "YulTypedName",
														"src": "878:7:6",
														"type": ""
													}
												],
												"src": "841:77:6"
											},
											{
												"body": {
													"nativeSrc": "967:79:6",
													"nodeType": "YulBlock",
													"src": "967:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:6",
																"nodeType": "YulBlock",
																"src": "1024:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:6"
																			},
																			"nativeSrc": "1026:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:6"
																		},
																		"nativeSrc": "1026:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:6"
																				},
																				"nativeSrc": "997:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:6"
																		},
																		"nativeSrc": "987:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:6"
																},
																"nativeSrc": "980:43:6",
																"nodeType": "YulFunctionCall",
																"src": "980:43:6"
															},
															"nativeSrc": "977:63:6",
															"nodeType": "YulIf",
															"src": "977:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:6",
														"nodeType": "YulTypedName",
														"src": "960:5:6",
														"type": ""
													}
												],
												"src": "924:122:6"
											},
											{
												"body": {
													"nativeSrc": "1104:87:6",
													"nodeType": "YulBlock",
													"src": "1104:87:6",
													"statements": [
														{
															"nativeSrc": "1114:29:6",
															"nodeType": "YulAssignment",
															"src": "1114:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:6"
																},
																"nativeSrc": "1123:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:6"
																},
																"nativeSrc": "1152:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:6"
															},
															"nativeSrc": "1152:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:6",
														"nodeType": "YulTypedName",
														"src": "1082:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:6",
														"nodeType": "YulTypedName",
														"src": "1090:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:6",
														"nodeType": "YulTypedName",
														"src": "1098:5:6",
														"type": ""
													}
												],
												"src": "1052:139:6"
											},
											{
												"body": {
													"nativeSrc": "1280:391:6",
													"nodeType": "YulBlock",
													"src": "1280:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:6",
																"nodeType": "YulBlock",
																"src": "1326:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:6"
																			},
																			"nativeSrc": "1328:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:6"
																		},
																		"nativeSrc": "1328:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:6"
																		},
																		"nativeSrc": "1297:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:6"
																},
																"nativeSrc": "1293:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:6"
															},
															"nativeSrc": "1290:119:6",
															"nodeType": "YulIf",
															"src": "1290:119:6"
														},
														{
															"nativeSrc": "1419:117:6",
															"nodeType": "YulBlock",
															"src": "1419:117:6",
															"statements": [
																{
																	"nativeSrc": "1434:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:6"
																				},
																				"nativeSrc": "1494:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:6"
																		},
																		"nativeSrc": "1473:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:6",
															"nodeType": "YulBlock",
															"src": "1546:118:6",
															"statements": [
																{
																	"nativeSrc": "1561:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:6"
																				},
																				"nativeSrc": "1622:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:6"
																		},
																		"nativeSrc": "1601:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:6",
														"nodeType": "YulTypedName",
														"src": "1242:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:6",
														"nodeType": "YulTypedName",
														"src": "1253:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:6",
														"nodeType": "YulTypedName",
														"src": "1265:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:6",
														"nodeType": "YulTypedName",
														"src": "1273:6:6",
														"type": ""
													}
												],
												"src": "1197:474:6"
											},
											{
												"body": {
													"nativeSrc": "1736:40:6",
													"nodeType": "YulBlock",
													"src": "1736:40:6",
													"statements": [
														{
															"nativeSrc": "1747:22:6",
															"nodeType": "YulAssignment",
															"src": "1747:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1763:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1763:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1757:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1757:5:6"
																},
																"nativeSrc": "1757:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1757:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1747:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1677:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1719:5:6",
														"nodeType": "YulTypedName",
														"src": "1719:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1729:6:6",
														"nodeType": "YulTypedName",
														"src": "1729:6:6",
														"type": ""
													}
												],
												"src": "1677:99:6"
											},
											{
												"body": {
													"nativeSrc": "1878:73:6",
													"nodeType": "YulBlock",
													"src": "1878:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1895:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1895:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1900:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1900:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1888:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:6"
																},
																"nativeSrc": "1888:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1888:19:6"
															},
															"nativeSrc": "1888:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "1888:19:6"
														},
														{
															"nativeSrc": "1916:29:6",
															"nodeType": "YulAssignment",
															"src": "1916:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1935:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1935:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1940:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1940:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1931:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1931:3:6"
																},
																"nativeSrc": "1931:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1931:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1916:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "1916:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1782:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1850:3:6",
														"nodeType": "YulTypedName",
														"src": "1850:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1855:6:6",
														"nodeType": "YulTypedName",
														"src": "1855:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1866:11:6",
														"nodeType": "YulTypedName",
														"src": "1866:11:6",
														"type": ""
													}
												],
												"src": "1782:169:6"
											},
											{
												"body": {
													"nativeSrc": "2019:77:6",
													"nodeType": "YulBlock",
													"src": "2019:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2036:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2036:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2041:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2041:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2046:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2046:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2030:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2030:5:6"
																},
																"nativeSrc": "2030:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2030:23:6"
															},
															"nativeSrc": "2030:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "2030:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2073:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2073:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2078:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2078:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:6"
																		},
																		"nativeSrc": "2069:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2087:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2087:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2062:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2062:6:6"
																},
																"nativeSrc": "2062:27:6",
																"nodeType": "YulFunctionCall",
																"src": "2062:27:6"
															},
															"nativeSrc": "2062:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "2062:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1957:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2001:3:6",
														"nodeType": "YulTypedName",
														"src": "2001:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2006:3:6",
														"nodeType": "YulTypedName",
														"src": "2006:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2011:6:6",
														"nodeType": "YulTypedName",
														"src": "2011:6:6",
														"type": ""
													}
												],
												"src": "1957:139:6"
											},
											{
												"body": {
													"nativeSrc": "2150:54:6",
													"nodeType": "YulBlock",
													"src": "2150:54:6",
													"statements": [
														{
															"nativeSrc": "2160:38:6",
															"nodeType": "YulAssignment",
															"src": "2160:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2178:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2178:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2185:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2185:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2174:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2174:3:6"
																		},
																		"nativeSrc": "2174:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2174:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2194:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2190:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2190:3:6"
																		},
																		"nativeSrc": "2190:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2190:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2170:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:6"
																},
																"nativeSrc": "2170:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2170:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2160:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2160:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2102:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2133:5:6",
														"nodeType": "YulTypedName",
														"src": "2133:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2143:6:6",
														"nodeType": "YulTypedName",
														"src": "2143:6:6",
														"type": ""
													}
												],
												"src": "2102:102:6"
											},
											{
												"body": {
													"nativeSrc": "2302:285:6",
													"nodeType": "YulBlock",
													"src": "2302:285:6",
													"statements": [
														{
															"nativeSrc": "2312:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2312:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2359:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2359:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2326:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "2326:32:6"
																},
																"nativeSrc": "2326:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2326:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2316:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2316:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2374:78:6",
															"nodeType": "YulAssignment",
															"src": "2374:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2440:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2440:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2445:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2445:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2381:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2381:58:6"
																},
																"nativeSrc": "2381:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2381:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2374:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2374:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2500:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2500:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2507:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2507:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2496:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:6"
																		},
																		"nativeSrc": "2496:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2496:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2514:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2514:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2519:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2519:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2461:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2461:34:6"
																},
																"nativeSrc": "2461:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2461:65:6"
															},
															"nativeSrc": "2461:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2461:65:6"
														},
														{
															"nativeSrc": "2535:46:6",
															"nodeType": "YulAssignment",
															"src": "2535:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2546:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2546:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2573:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2573:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2551:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "2551:21:6"
																		},
																		"nativeSrc": "2551:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2551:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2542:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2542:3:6"
																},
																"nativeSrc": "2542:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2542:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2535:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2535:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2210:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2283:5:6",
														"nodeType": "YulTypedName",
														"src": "2283:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2290:3:6",
														"nodeType": "YulTypedName",
														"src": "2290:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2298:3:6",
														"nodeType": "YulTypedName",
														"src": "2298:3:6",
														"type": ""
													}
												],
												"src": "2210:377:6"
											},
											{
												"body": {
													"nativeSrc": "2711:195:6",
													"nodeType": "YulBlock",
													"src": "2711:195:6",
													"statements": [
														{
															"nativeSrc": "2721:26:6",
															"nodeType": "YulAssignment",
															"src": "2721:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2733:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2733:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2744:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2744:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2729:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2729:3:6"
																},
																"nativeSrc": "2729:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2729:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2721:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2721:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2768:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2779:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:6"
																		},
																		"nativeSrc": "2764:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2787:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2787:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2793:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2793:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2783:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2783:3:6"
																		},
																		"nativeSrc": "2783:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2783:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2757:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2757:6:6"
																},
																"nativeSrc": "2757:47:6",
																"nodeType": "YulFunctionCall",
																"src": "2757:47:6"
															},
															"nativeSrc": "2757:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "2757:47:6"
														},
														{
															"nativeSrc": "2813:86:6",
															"nodeType": "YulAssignment",
															"src": "2813:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2885:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2885:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2894:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2894:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2821:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "2821:63:6"
																},
																"nativeSrc": "2821:78:6",
																"nodeType": "YulFunctionCall",
																"src": "2821:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2813:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2813:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2593:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2683:9:6",
														"nodeType": "YulTypedName",
														"src": "2683:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2695:6:6",
														"nodeType": "YulTypedName",
														"src": "2695:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2706:4:6",
														"nodeType": "YulTypedName",
														"src": "2706:4:6",
														"type": ""
													}
												],
												"src": "2593:313:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4405:28:6",
													"nodeType": "YulBlock",
													"src": "4405:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4422:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4422:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4425:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4425:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4415:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4415:6:6"
																},
																"nativeSrc": "4415:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4415:12:6"
															},
															"nativeSrc": "4415:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "4415:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4316:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4316:117:6"
											},
											{
												"body": {
													"nativeSrc": "4528:28:6",
													"nodeType": "YulBlock",
													"src": "4528:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4545:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4545:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4548:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4548:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4538:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4538:6:6"
																},
																"nativeSrc": "4538:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4538:12:6"
															},
															"nativeSrc": "4538:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "4538:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4439:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4439:117:6"
											},
											{
												"body": {
													"nativeSrc": "4590:152:6",
													"nodeType": "YulBlock",
													"src": "4590:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4607:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4607:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4610:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4610:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4600:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4600:6:6"
																},
																"nativeSrc": "4600:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4600:88:6"
															},
															"nativeSrc": "4600:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4600:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4704:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4704:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4707:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4707:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4697:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4697:6:6"
																},
																"nativeSrc": "4697:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4697:15:6"
															},
															"nativeSrc": "4697:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4697:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4728:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4728:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4731:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4731:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4721:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:6"
																},
																"nativeSrc": "4721:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4721:15:6"
															},
															"nativeSrc": "4721:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4721:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4562:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4562:180:6"
											},
											{
												"body": {
													"nativeSrc": "4791:238:6",
													"nodeType": "YulBlock",
													"src": "4791:238:6",
													"statements": [
														{
															"nativeSrc": "4801:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4801:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4823:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4823:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "4853:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4853:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4831:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "4831:21:6"
																		},
																		"nativeSrc": "4831:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4831:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4819:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4819:3:6"
																},
																"nativeSrc": "4819:40:6",
																"nodeType": "YulFunctionCall",
																"src": "4819:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4805:10:6",
																	"nodeType": "YulTypedName",
																	"src": "4805:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4970:22:6",
																"nodeType": "YulBlock",
																"src": "4970:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4972:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4972:16:6"
																			},
																			"nativeSrc": "4972:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4972:18:6"
																		},
																		"nativeSrc": "4972:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4972:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4913:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "4913:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4925:18:6",
																				"nodeType": "YulLiteral",
																				"src": "4925:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4910:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4910:2:6"
																		},
																		"nativeSrc": "4910:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4910:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4949:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "4949:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4961:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4961:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4946:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4946:2:6"
																		},
																		"nativeSrc": "4946:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4946:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4907:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4907:2:6"
																},
																"nativeSrc": "4907:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4907:62:6"
															},
															"nativeSrc": "4904:88:6",
															"nodeType": "YulIf",
															"src": "4904:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5008:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5012:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "5012:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5001:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5001:6:6"
																},
																"nativeSrc": "5001:22:6",
																"nodeType": "YulFunctionCall",
																"src": "5001:22:6"
															},
															"nativeSrc": "5001:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "5001:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4748:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4777:6:6",
														"nodeType": "YulTypedName",
														"src": "4777:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4785:4:6",
														"nodeType": "YulTypedName",
														"src": "4785:4:6",
														"type": ""
													}
												],
												"src": "4748:281:6"
											},
											{
												"body": {
													"nativeSrc": "5076:88:6",
													"nodeType": "YulBlock",
													"src": "5076:88:6",
													"statements": [
														{
															"nativeSrc": "5086:30:6",
															"nodeType": "YulAssignment",
															"src": "5086:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5096:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5096:18:6"
																},
																"nativeSrc": "5096:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5096:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5086:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5086:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5145:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5145:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5153:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5153:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5125:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "5125:19:6"
																},
																"nativeSrc": "5125:33:6",
																"nodeType": "YulFunctionCall",
																"src": "5125:33:6"
															},
															"nativeSrc": "5125:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "5125:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5035:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5060:4:6",
														"nodeType": "YulTypedName",
														"src": "5060:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5069:6:6",
														"nodeType": "YulTypedName",
														"src": "5069:6:6",
														"type": ""
													}
												],
												"src": "5035:129:6"
											},
											{
												"body": {
													"nativeSrc": "5237:241:6",
													"nodeType": "YulBlock",
													"src": "5237:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5342:22:6",
																"nodeType": "YulBlock",
																"src": "5342:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5344:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5344:16:6"
																			},
																			"nativeSrc": "5344:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5344:18:6"
																		},
																		"nativeSrc": "5344:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5344:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5314:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5314:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5322:18:6",
																		"nodeType": "YulLiteral",
																		"src": "5322:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5311:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5311:2:6"
																},
																"nativeSrc": "5311:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5311:30:6"
															},
															"nativeSrc": "5308:56:6",
															"nodeType": "YulIf",
															"src": "5308:56:6"
														},
														{
															"nativeSrc": "5374:37:6",
															"nodeType": "YulAssignment",
															"src": "5374:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5404:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5404:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5382:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "5382:21:6"
																},
																"nativeSrc": "5382:29:6",
																"nodeType": "YulFunctionCall",
																"src": "5382:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5374:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5374:4:6"
																}
															]
														},
														{
															"nativeSrc": "5448:23:6",
															"nodeType": "YulAssignment",
															"src": "5448:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5460:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5460:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5466:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5466:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5456:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5456:3:6"
																},
																"nativeSrc": "5456:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5456:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5448:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5448:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "5170:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5221:6:6",
														"nodeType": "YulTypedName",
														"src": "5221:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5232:4:6",
														"nodeType": "YulTypedName",
														"src": "5232:4:6",
														"type": ""
													}
												],
												"src": "5170:308:6"
											},
											{
												"body": {
													"nativeSrc": "5548:84:6",
													"nodeType": "YulBlock",
													"src": "5548:84:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5572:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5572:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5577:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5577:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5582:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5582:6:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5559:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "5559:12:6"
																},
																"nativeSrc": "5559:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5559:30:6"
															},
															"nativeSrc": "5559:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5559:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5609:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5609:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5614:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5614:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5605:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5605:3:6"
																		},
																		"nativeSrc": "5605:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5605:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5623:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5598:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:6"
																},
																"nativeSrc": "5598:27:6",
																"nodeType": "YulFunctionCall",
																"src": "5598:27:6"
															},
															"nativeSrc": "5598:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "5598:27:6"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5484:148:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5530:3:6",
														"nodeType": "YulTypedName",
														"src": "5530:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5535:3:6",
														"nodeType": "YulTypedName",
														"src": "5535:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5540:6:6",
														"nodeType": "YulTypedName",
														"src": "5540:6:6",
														"type": ""
													}
												],
												"src": "5484:148:6"
											},
											{
												"body": {
													"nativeSrc": "5722:341:6",
													"nodeType": "YulBlock",
													"src": "5722:341:6",
													"statements": [
														{
															"nativeSrc": "5732:75:6",
															"nodeType": "YulAssignment",
															"src": "5732:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5799:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5799:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "5757:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "5757:41:6"
																		},
																		"nativeSrc": "5757:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5757:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5741:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "5741:15:6"
																},
																"nativeSrc": "5741:66:6",
																"nodeType": "YulFunctionCall",
																"src": "5741:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5732:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5732:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5823:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5830:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5830:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5816:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:6"
																},
																"nativeSrc": "5816:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5816:21:6"
															},
															"nativeSrc": "5816:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5816:21:6"
														},
														{
															"nativeSrc": "5846:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5846:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5861:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5861:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5868:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5857:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5857:3:6"
																},
																"nativeSrc": "5857:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5857:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5850:3:6",
																	"nodeType": "YulTypedName",
																	"src": "5850:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5911:83:6",
																"nodeType": "YulBlock",
																"src": "5911:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "5913:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5913:77:6"
																			},
																			"nativeSrc": "5913:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5913:79:6"
																		},
																		"nativeSrc": "5913:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5913:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "5892:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5892:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5897:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5897:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5888:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5888:3:6"
																		},
																		"nativeSrc": "5888:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5888:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5906:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5906:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5885:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5885:2:6"
																},
																"nativeSrc": "5885:25:6",
																"nodeType": "YulFunctionCall",
																"src": "5885:25:6"
															},
															"nativeSrc": "5882:112:6",
															"nodeType": "YulIf",
															"src": "5882:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6040:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6040:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6045:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6045:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6050:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6050:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6003:36:6",
																	"nodeType": "YulIdentifier",
																	"src": "6003:36:6"
																},
																"nativeSrc": "6003:54:6",
																"nodeType": "YulFunctionCall",
																"src": "6003:54:6"
															},
															"nativeSrc": "6003:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "6003:54:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "5638:425:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5695:3:6",
														"nodeType": "YulTypedName",
														"src": "5695:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5700:6:6",
														"nodeType": "YulTypedName",
														"src": "5700:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5708:3:6",
														"nodeType": "YulTypedName",
														"src": "5708:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5716:5:6",
														"nodeType": "YulTypedName",
														"src": "5716:5:6",
														"type": ""
													}
												],
												"src": "5638:425:6"
											},
											{
												"body": {
													"nativeSrc": "6145:278:6",
													"nodeType": "YulBlock",
													"src": "6145:278:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6194:83:6",
																"nodeType": "YulBlock",
																"src": "6194:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6196:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6196:77:6"
																			},
																			"nativeSrc": "6196:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6196:79:6"
																		},
																		"nativeSrc": "6196:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6196:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6173:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6173:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6181:4:6",
																						"nodeType": "YulLiteral",
																						"src": "6181:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6169:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6169:3:6"
																				},
																				"nativeSrc": "6169:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6169:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6188:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6188:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6165:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6165:3:6"
																		},
																		"nativeSrc": "6165:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6165:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6158:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6158:6:6"
																},
																"nativeSrc": "6158:35:6",
																"nodeType": "YulFunctionCall",
																"src": "6158:35:6"
															},
															"nativeSrc": "6155:122:6",
															"nodeType": "YulIf",
															"src": "6155:122:6"
														},
														{
															"nativeSrc": "6286:34:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6286:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6313:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6313:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6300:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "6300:12:6"
																},
																"nativeSrc": "6300:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6300:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6290:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6290:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6329:88:6",
															"nodeType": "YulAssignment",
															"src": "6329:88:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6390:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6390:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6398:4:6",
																				"nodeType": "YulLiteral",
																				"src": "6398:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6386:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6386:3:6"
																		},
																		"nativeSrc": "6386:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6386:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6405:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6413:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6413:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "6338:47:6",
																	"nodeType": "YulIdentifier",
																	"src": "6338:47:6"
																},
																"nativeSrc": "6338:79:6",
																"nodeType": "YulFunctionCall",
																"src": "6338:79:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6329:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6329:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "6083:340:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6123:6:6",
														"nodeType": "YulTypedName",
														"src": "6123:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6131:3:6",
														"nodeType": "YulTypedName",
														"src": "6131:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6139:5:6",
														"nodeType": "YulTypedName",
														"src": "6139:5:6",
														"type": ""
													}
												],
												"src": "6083:340:6"
											},
											{
												"body": {
													"nativeSrc": "6522:561:6",
													"nodeType": "YulBlock",
													"src": "6522:561:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6568:83:6",
																"nodeType": "YulBlock",
																"src": "6568:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6570:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6570:77:6"
																			},
																			"nativeSrc": "6570:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6570:79:6"
																		},
																		"nativeSrc": "6570:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6570:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6543:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6543:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6552:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6552:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6539:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6539:3:6"
																		},
																		"nativeSrc": "6539:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6539:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6564:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6564:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6535:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6535:3:6"
																},
																"nativeSrc": "6535:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6535:32:6"
															},
															"nativeSrc": "6532:119:6",
															"nodeType": "YulIf",
															"src": "6532:119:6"
														},
														{
															"nativeSrc": "6661:287:6",
															"nodeType": "YulBlock",
															"src": "6661:287:6",
															"statements": [
																{
																	"nativeSrc": "6676:45:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6676:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6707:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6707:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6718:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6718:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6703:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6703:3:6"
																				},
																				"nativeSrc": "6703:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6703:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6690:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "6690:12:6"
																		},
																		"nativeSrc": "6690:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6680:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6680:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6768:83:6",
																		"nodeType": "YulBlock",
																		"src": "6768:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6770:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "6770:77:6"
																					},
																					"nativeSrc": "6770:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6770:79:6"
																				},
																				"nativeSrc": "6770:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6770:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6740:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6740:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6748:18:6",
																				"nodeType": "YulLiteral",
																				"src": "6748:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6737:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6737:2:6"
																		},
																		"nativeSrc": "6737:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6737:30:6"
																	},
																	"nativeSrc": "6734:117:6",
																	"nodeType": "YulIf",
																	"src": "6734:117:6"
																},
																{
																	"nativeSrc": "6865:73:6",
																	"nodeType": "YulAssignment",
																	"src": "6865:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6910:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6910:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6921:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6921:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6906:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6906:3:6"
																				},
																				"nativeSrc": "6906:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6906:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6930:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6930:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "6875:30:6",
																			"nodeType": "YulIdentifier",
																			"src": "6875:30:6"
																		},
																		"nativeSrc": "6875:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6875:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6865:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6865:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6958:118:6",
															"nodeType": "YulBlock",
															"src": "6958:118:6",
															"statements": [
																{
																	"nativeSrc": "6973:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6973:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6987:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6987:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6977:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6977:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7003:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7003:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7038:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7038:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7049:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7049:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7034:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7034:3:6"
																				},
																				"nativeSrc": "7034:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7034:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7058:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7058:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7013:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7013:20:6"
																		},
																		"nativeSrc": "7013:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7013:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7003:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7003:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nativeSrc": "6429:654:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6484:9:6",
														"nodeType": "YulTypedName",
														"src": "6484:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6495:7:6",
														"nodeType": "YulTypedName",
														"src": "6495:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6507:6:6",
														"nodeType": "YulTypedName",
														"src": "6507:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6515:6:6",
														"nodeType": "YulTypedName",
														"src": "6515:6:6",
														"type": ""
													}
												],
												"src": "6429:654:6"
											},
											{
												"body": {
													"nativeSrc": "7132:43:6",
													"nodeType": "YulBlock",
													"src": "7132:43:6",
													"statements": [
														{
															"nativeSrc": "7142:27:6",
															"nodeType": "YulAssignment",
															"src": "7142:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7157:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7157:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7164:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7164:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7153:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7153:3:6"
																},
																"nativeSrc": "7153:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7153:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7142:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "7142:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7089:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7114:5:6",
														"nodeType": "YulTypedName",
														"src": "7114:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7124:7:6",
														"nodeType": "YulTypedName",
														"src": "7124:7:6",
														"type": ""
													}
												],
												"src": "7089:86:6"
											},
											{
												"body": {
													"nativeSrc": "7242:51:6",
													"nodeType": "YulBlock",
													"src": "7242:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7259:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7259:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7280:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7280:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7264:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "7264:15:6"
																		},
																		"nativeSrc": "7264:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7264:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7252:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7252:6:6"
																},
																"nativeSrc": "7252:35:6",
																"nodeType": "YulFunctionCall",
																"src": "7252:35:6"
															},
															"nativeSrc": "7252:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "7252:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7181:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7230:5:6",
														"nodeType": "YulTypedName",
														"src": "7230:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7237:3:6",
														"nodeType": "YulTypedName",
														"src": "7237:3:6",
														"type": ""
													}
												],
												"src": "7181:112:6"
											},
											{
												"body": {
													"nativeSrc": "7393:120:6",
													"nodeType": "YulBlock",
													"src": "7393:120:6",
													"statements": [
														{
															"nativeSrc": "7403:26:6",
															"nodeType": "YulAssignment",
															"src": "7403:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7415:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7415:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7426:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7426:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7411:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7411:3:6"
																},
																"nativeSrc": "7411:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7411:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7403:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7403:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7479:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7479:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7492:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7492:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7503:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7503:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7488:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7488:3:6"
																		},
																		"nativeSrc": "7488:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7488:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7439:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "7439:39:6"
																},
																"nativeSrc": "7439:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7439:67:6"
															},
															"nativeSrc": "7439:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "7439:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7299:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7365:9:6",
														"nodeType": "YulTypedName",
														"src": "7365:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7377:6:6",
														"nodeType": "YulTypedName",
														"src": "7377:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7388:4:6",
														"nodeType": "YulTypedName",
														"src": "7388:4:6",
														"type": ""
													}
												],
												"src": "7299:214:6"
											},
											{
												"body": {
													"nativeSrc": "7585:263:6",
													"nodeType": "YulBlock",
													"src": "7585:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7631:83:6",
																"nodeType": "YulBlock",
																"src": "7631:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7633:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7633:77:6"
																			},
																			"nativeSrc": "7633:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7633:79:6"
																		},
																		"nativeSrc": "7633:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7633:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7606:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7606:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7615:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7615:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7602:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7602:3:6"
																		},
																		"nativeSrc": "7602:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7602:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7627:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7627:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7598:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7598:3:6"
																},
																"nativeSrc": "7598:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7598:32:6"
															},
															"nativeSrc": "7595:119:6",
															"nodeType": "YulIf",
															"src": "7595:119:6"
														},
														{
															"nativeSrc": "7724:117:6",
															"nodeType": "YulBlock",
															"src": "7724:117:6",
															"statements": [
																{
																	"nativeSrc": "7739:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7739:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7753:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7753:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7743:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7743:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7768:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7768:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7803:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7803:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7814:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7814:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7799:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7799:3:6"
																				},
																				"nativeSrc": "7799:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7799:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7823:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7823:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7778:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7778:20:6"
																		},
																		"nativeSrc": "7778:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7778:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7768:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7768:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7519:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7555:9:6",
														"nodeType": "YulTypedName",
														"src": "7555:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7566:7:6",
														"nodeType": "YulTypedName",
														"src": "7566:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7578:6:6",
														"nodeType": "YulTypedName",
														"src": "7578:6:6",
														"type": ""
													}
												],
												"src": "7519:329:6"
											},
											{
												"body": {
													"nativeSrc": "7920:263:6",
													"nodeType": "YulBlock",
													"src": "7920:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7966:83:6",
																"nodeType": "YulBlock",
																"src": "7966:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7968:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7968:77:6"
																			},
																			"nativeSrc": "7968:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7968:79:6"
																		},
																		"nativeSrc": "7968:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7968:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7941:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7941:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7950:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7950:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7937:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7937:3:6"
																		},
																		"nativeSrc": "7937:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7937:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7962:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7962:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7933:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7933:3:6"
																},
																"nativeSrc": "7933:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7933:32:6"
															},
															"nativeSrc": "7930:119:6",
															"nodeType": "YulIf",
															"src": "7930:119:6"
														},
														{
															"nativeSrc": "8059:117:6",
															"nodeType": "YulBlock",
															"src": "8059:117:6",
															"statements": [
																{
																	"nativeSrc": "8074:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8074:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8088:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8088:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8078:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8078:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8103:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8103:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8138:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8138:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8149:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8149:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8134:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8134:3:6"
																				},
																				"nativeSrc": "8134:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8134:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8158:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8158:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8113:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8113:20:6"
																		},
																		"nativeSrc": "8113:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8113:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8103:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8103:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7854:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7890:9:6",
														"nodeType": "YulTypedName",
														"src": "7890:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7901:7:6",
														"nodeType": "YulTypedName",
														"src": "7901:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7913:6:6",
														"nodeType": "YulTypedName",
														"src": "7913:6:6",
														"type": ""
													}
												],
												"src": "7854:329:6"
											},
											{
												"body": {
													"nativeSrc": "8272:391:6",
													"nodeType": "YulBlock",
													"src": "8272:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8318:83:6",
																"nodeType": "YulBlock",
																"src": "8318:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8320:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8320:77:6"
																			},
																			"nativeSrc": "8320:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8320:79:6"
																		},
																		"nativeSrc": "8320:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8320:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8293:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8293:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8302:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8302:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8289:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8289:3:6"
																		},
																		"nativeSrc": "8289:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8289:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8314:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8314:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8285:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8285:3:6"
																},
																"nativeSrc": "8285:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8285:32:6"
															},
															"nativeSrc": "8282:119:6",
															"nodeType": "YulIf",
															"src": "8282:119:6"
														},
														{
															"nativeSrc": "8411:117:6",
															"nodeType": "YulBlock",
															"src": "8411:117:6",
															"statements": [
																{
																	"nativeSrc": "8426:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8426:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8430:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8430:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8455:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8455:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8490:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8490:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8501:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8501:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8486:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8486:3:6"
																				},
																				"nativeSrc": "8486:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8486:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8510:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8510:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8465:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8465:20:6"
																		},
																		"nativeSrc": "8465:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8465:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8455:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8455:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8538:118:6",
															"nodeType": "YulBlock",
															"src": "8538:118:6",
															"statements": [
																{
																	"nativeSrc": "8553:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8553:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8567:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8567:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8557:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8557:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8583:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8583:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8618:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8618:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8629:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8629:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8614:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8614:3:6"
																				},
																				"nativeSrc": "8614:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8614:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8638:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8638:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8593:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8593:20:6"
																		},
																		"nativeSrc": "8593:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8593:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8583:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8189:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8234:9:6",
														"nodeType": "YulTypedName",
														"src": "8234:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8245:7:6",
														"nodeType": "YulTypedName",
														"src": "8245:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8257:6:6",
														"nodeType": "YulTypedName",
														"src": "8257:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8265:6:6",
														"nodeType": "YulTypedName",
														"src": "8265:6:6",
														"type": ""
													}
												],
												"src": "8189:474:6"
											},
											{
												"body": {
													"nativeSrc": "8697:152:6",
													"nodeType": "YulBlock",
													"src": "8697:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8714:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8714:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8717:77:6",
																		"nodeType": "YulLiteral",
																		"src": "8717:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8707:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8707:6:6"
																},
																"nativeSrc": "8707:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8707:88:6"
															},
															"nativeSrc": "8707:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "8707:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8811:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8811:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8814:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8814:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8804:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8804:6:6"
																},
																"nativeSrc": "8804:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8804:15:6"
															},
															"nativeSrc": "8804:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8804:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8835:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8835:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8838:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8838:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8828:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8828:6:6"
																},
																"nativeSrc": "8828:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8828:15:6"
															},
															"nativeSrc": "8828:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8828:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8669:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "8669:180:6"
											},
											{
												"body": {
													"nativeSrc": "8906:269:6",
													"nodeType": "YulBlock",
													"src": "8906:269:6",
													"statements": [
														{
															"nativeSrc": "8916:22:6",
															"nodeType": "YulAssignment",
															"src": "8916:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8930:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8930:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8936:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8936:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8926:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8926:3:6"
																},
																"nativeSrc": "8926:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8926:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8916:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8916:6:6"
																}
															]
														},
														{
															"nativeSrc": "8947:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8947:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8977:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8977:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8983:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8983:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8973:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8973:3:6"
																},
																"nativeSrc": "8973:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8973:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8951:18:6",
																	"nodeType": "YulTypedName",
																	"src": "8951:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9024:51:6",
																"nodeType": "YulBlock",
																"src": "9024:51:6",
																"statements": [
																	{
																		"nativeSrc": "9038:27:6",
																		"nodeType": "YulAssignment",
																		"src": "9038:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9052:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9052:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9060:4:6",
																					"nodeType": "YulLiteral",
																					"src": "9060:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9048:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "9048:3:6"
																			},
																			"nativeSrc": "9048:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9048:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9038:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9038:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9004:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "9004:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8997:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8997:6:6"
																},
																"nativeSrc": "8997:26:6",
																"nodeType": "YulFunctionCall",
																"src": "8997:26:6"
															},
															"nativeSrc": "8994:81:6",
															"nodeType": "YulIf",
															"src": "8994:81:6"
														},
														{
															"body": {
																"nativeSrc": "9127:42:6",
																"nodeType": "YulBlock",
																"src": "9127:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9141:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9141:16:6"
																			},
																			"nativeSrc": "9141:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9141:18:6"
																		},
																		"nativeSrc": "9141:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9141:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9091:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "9091:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9114:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9114:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9122:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9122:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9111:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "9111:2:6"
																		},
																		"nativeSrc": "9111:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9111:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9088:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9088:2:6"
																},
																"nativeSrc": "9088:38:6",
																"nodeType": "YulFunctionCall",
																"src": "9088:38:6"
															},
															"nativeSrc": "9085:84:6",
															"nodeType": "YulIf",
															"src": "9085:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8855:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8890:4:6",
														"nodeType": "YulTypedName",
														"src": "8890:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8899:6:6",
														"nodeType": "YulTypedName",
														"src": "8899:6:6",
														"type": ""
													}
												],
												"src": "8855:320:6"
											},
											{
												"body": {
													"nativeSrc": "9235:87:6",
													"nodeType": "YulBlock",
													"src": "9235:87:6",
													"statements": [
														{
															"nativeSrc": "9245:11:6",
															"nodeType": "YulAssignment",
															"src": "9245:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "9253:3:6",
																"nodeType": "YulIdentifier",
																"src": "9253:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9245:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9245:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "9276:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9276:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9266:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9266:6:6"
																},
																"nativeSrc": "9266:14:6",
																"nodeType": "YulFunctionCall",
																"src": "9266:14:6"
															},
															"nativeSrc": "9266:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "9266:14:6"
														},
														{
															"nativeSrc": "9289:26:6",
															"nodeType": "YulAssignment",
															"src": "9289:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9307:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9307:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9310:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9310:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "9297:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "9297:9:6"
																},
																"nativeSrc": "9297:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9297:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9289:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9289:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "9181:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9222:3:6",
														"nodeType": "YulTypedName",
														"src": "9222:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9230:4:6",
														"nodeType": "YulTypedName",
														"src": "9230:4:6",
														"type": ""
													}
												],
												"src": "9181:141:6"
											},
											{
												"body": {
													"nativeSrc": "9372:49:6",
													"nodeType": "YulBlock",
													"src": "9372:49:6",
													"statements": [
														{
															"nativeSrc": "9382:33:6",
															"nodeType": "YulAssignment",
															"src": "9382:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9400:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9400:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9407:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9407:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9396:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9396:3:6"
																		},
																		"nativeSrc": "9396:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9396:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9412:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9412:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9392:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9392:3:6"
																},
																"nativeSrc": "9392:23:6",
																"nodeType": "YulFunctionCall",
																"src": "9392:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "9382:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9382:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "9328:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9355:5:6",
														"nodeType": "YulTypedName",
														"src": "9355:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "9365:6:6",
														"nodeType": "YulTypedName",
														"src": "9365:6:6",
														"type": ""
													}
												],
												"src": "9328:93:6"
											},
											{
												"body": {
													"nativeSrc": "9480:54:6",
													"nodeType": "YulBlock",
													"src": "9480:54:6",
													"statements": [
														{
															"nativeSrc": "9490:37:6",
															"nodeType": "YulAssignment",
															"src": "9490:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "9515:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9515:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9521:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9521:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "9511:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9511:3:6"
																},
																"nativeSrc": "9511:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9511:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9490:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "9490:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "9427:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "9455:4:6",
														"nodeType": "YulTypedName",
														"src": "9455:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "9461:5:6",
														"nodeType": "YulTypedName",
														"src": "9461:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9471:8:6",
														"nodeType": "YulTypedName",
														"src": "9471:8:6",
														"type": ""
													}
												],
												"src": "9427:107:6"
											},
											{
												"body": {
													"nativeSrc": "9616:317:6",
													"nodeType": "YulBlock",
													"src": "9616:317:6",
													"statements": [
														{
															"nativeSrc": "9626:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "9626:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "9647:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "9647:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9659:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9659:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9643:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9643:3:6"
																},
																"nativeSrc": "9643:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9643:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "9630:9:6",
																	"nodeType": "YulTypedName",
																	"src": "9630:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9670:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "9670:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "9701:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9701:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9712:66:6",
																		"nodeType": "YulLiteral",
																		"src": "9712:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "9682:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "9682:18:6"
																},
																"nativeSrc": "9682:97:6",
																"nodeType": "YulFunctionCall",
																"src": "9682:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "9674:4:6",
																	"nodeType": "YulTypedName",
																	"src": "9674:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9788:51:6",
															"nodeType": "YulAssignment",
															"src": "9788:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "9819:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9819:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "9830:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "9830:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "9800:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "9800:18:6"
																},
																"nativeSrc": "9800:39:6",
																"nodeType": "YulFunctionCall",
																"src": "9800:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "9788:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "9788:8:6"
																}
															]
														},
														{
															"nativeSrc": "9848:30:6",
															"nodeType": "YulAssignment",
															"src": "9848:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9861:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9861:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "9872:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9872:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "9868:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9868:3:6"
																		},
																		"nativeSrc": "9868:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9868:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9857:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9857:3:6"
																},
																"nativeSrc": "9857:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9857:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9848:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9848:5:6"
																}
															]
														},
														{
															"nativeSrc": "9887:40:6",
															"nodeType": "YulAssignment",
															"src": "9887:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9900:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9900:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "9911:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "9911:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "9921:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9921:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9907:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9907:3:6"
																		},
																		"nativeSrc": "9907:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9907:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9897:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9897:2:6"
																},
																"nativeSrc": "9897:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9897:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "9887:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9887:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "9540:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9577:5:6",
														"nodeType": "YulTypedName",
														"src": "9577:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "9584:10:6",
														"nodeType": "YulTypedName",
														"src": "9584:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "9596:8:6",
														"nodeType": "YulTypedName",
														"src": "9596:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "9609:6:6",
														"nodeType": "YulTypedName",
														"src": "9609:6:6",
														"type": ""
													}
												],
												"src": "9540:393:6"
											},
											{
												"body": {
													"nativeSrc": "9971:28:6",
													"nodeType": "YulBlock",
													"src": "9971:28:6",
													"statements": [
														{
															"nativeSrc": "9981:12:6",
															"nodeType": "YulAssignment",
															"src": "9981:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "9988:5:6",
																"nodeType": "YulIdentifier",
																"src": "9988:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9981:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9981:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "9939:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9957:5:6",
														"nodeType": "YulTypedName",
														"src": "9957:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9967:3:6",
														"nodeType": "YulTypedName",
														"src": "9967:3:6",
														"type": ""
													}
												],
												"src": "9939:60:6"
											},
											{
												"body": {
													"nativeSrc": "10065:82:6",
													"nodeType": "YulBlock",
													"src": "10065:82:6",
													"statements": [
														{
															"nativeSrc": "10075:66:6",
															"nodeType": "YulAssignment",
															"src": "10075:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10133:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "10133:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "10115:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "10115:17:6"
																				},
																				"nativeSrc": "10115:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10115:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10106:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "10106:8:6"
																		},
																		"nativeSrc": "10106:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10106:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10088:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10088:17:6"
																},
																"nativeSrc": "10088:53:6",
																"nodeType": "YulFunctionCall",
																"src": "10088:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10075:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "10075:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "10005:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10045:5:6",
														"nodeType": "YulTypedName",
														"src": "10045:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10055:9:6",
														"nodeType": "YulTypedName",
														"src": "10055:9:6",
														"type": ""
													}
												],
												"src": "10005:142:6"
											},
											{
												"body": {
													"nativeSrc": "10200:28:6",
													"nodeType": "YulBlock",
													"src": "10200:28:6",
													"statements": [
														{
															"nativeSrc": "10210:12:6",
															"nodeType": "YulAssignment",
															"src": "10210:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "10217:5:6",
																"nodeType": "YulIdentifier",
																"src": "10217:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10210:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10210:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "10153:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10186:5:6",
														"nodeType": "YulTypedName",
														"src": "10186:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10196:3:6",
														"nodeType": "YulTypedName",
														"src": "10196:3:6",
														"type": ""
													}
												],
												"src": "10153:75:6"
											},
											{
												"body": {
													"nativeSrc": "10310:193:6",
													"nodeType": "YulBlock",
													"src": "10310:193:6",
													"statements": [
														{
															"nativeSrc": "10320:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10320:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "10375:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "10375:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "10344:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "10344:30:6"
																},
																"nativeSrc": "10344:39:6",
																"nodeType": "YulFunctionCall",
																"src": "10344:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "10324:16:6",
																	"nodeType": "YulTypedName",
																	"src": "10324:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "10399:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10399:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "10439:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "10439:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "10433:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "10433:5:6"
																				},
																				"nativeSrc": "10433:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10433:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "10446:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10446:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "10478:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "10478:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "10454:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "10454:23:6"
																				},
																				"nativeSrc": "10454:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10454:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "10405:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "10405:27:6"
																		},
																		"nativeSrc": "10405:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10405:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "10392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10392:6:6"
																},
																"nativeSrc": "10392:105:6",
																"nodeType": "YulFunctionCall",
																"src": "10392:105:6"
															},
															"nativeSrc": "10392:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "10392:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "10234:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "10287:4:6",
														"nodeType": "YulTypedName",
														"src": "10287:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "10293:6:6",
														"nodeType": "YulTypedName",
														"src": "10293:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "10301:7:6",
														"nodeType": "YulTypedName",
														"src": "10301:7:6",
														"type": ""
													}
												],
												"src": "10234:269:6"
											},
											{
												"body": {
													"nativeSrc": "10558:24:6",
													"nodeType": "YulBlock",
													"src": "10558:24:6",
													"statements": [
														{
															"nativeSrc": "10568:8:6",
															"nodeType": "YulAssignment",
															"src": "10568:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "10575:1:6",
																"nodeType": "YulLiteral",
																"src": "10575:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10568:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10568:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "10509:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10554:3:6",
														"nodeType": "YulTypedName",
														"src": "10554:3:6",
														"type": ""
													}
												],
												"src": "10509:73:6"
											},
											{
												"body": {
													"nativeSrc": "10641:136:6",
													"nodeType": "YulBlock",
													"src": "10641:136:6",
													"statements": [
														{
															"nativeSrc": "10651:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10651:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "10665:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "10665:30:6"
																},
																"nativeSrc": "10665:32:6",
																"nodeType": "YulFunctionCall",
																"src": "10665:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "10655:6:6",
																	"nodeType": "YulTypedName",
																	"src": "10655:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "10750:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10750:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "10756:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10756:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "10764:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10764:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "10706:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10706:43:6"
																},
																"nativeSrc": "10706:65:6",
																"nodeType": "YulFunctionCall",
																"src": "10706:65:6"
															},
															"nativeSrc": "10706:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "10706:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "10588:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "10627:4:6",
														"nodeType": "YulTypedName",
														"src": "10627:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "10633:6:6",
														"nodeType": "YulTypedName",
														"src": "10633:6:6",
														"type": ""
													}
												],
												"src": "10588:189:6"
											},
											{
												"body": {
													"nativeSrc": "10833:136:6",
													"nodeType": "YulBlock",
													"src": "10833:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "10900:63:6",
																"nodeType": "YulBlock",
																"src": "10900:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "10944:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "10944:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10951:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10951:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "10914:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "10914:29:6"
																			},
																			"nativeSrc": "10914:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10914:39:6"
																		},
																		"nativeSrc": "10914:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10914:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "10853:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "10853:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10860:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10860:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10850:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10850:2:6"
																},
																"nativeSrc": "10850:14:6",
																"nodeType": "YulFunctionCall",
																"src": "10850:14:6"
															},
															"nativeSrc": "10843:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10865:26:6",
																"nodeType": "YulBlock",
																"src": "10865:26:6",
																"statements": [
																	{
																		"nativeSrc": "10867:22:6",
																		"nodeType": "YulAssignment",
																		"src": "10867:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "10880:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "10880:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10887:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10887:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10876:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "10876:3:6"
																			},
																			"nativeSrc": "10876:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10876:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "10867:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10867:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10847:2:6",
																"nodeType": "YulBlock",
																"src": "10847:2:6",
																"statements": []
															},
															"src": "10843:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "10783:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "10821:5:6",
														"nodeType": "YulTypedName",
														"src": "10821:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10828:3:6",
														"nodeType": "YulTypedName",
														"src": "10828:3:6",
														"type": ""
													}
												],
												"src": "10783:186:6"
											},
											{
												"body": {
													"nativeSrc": "11054:464:6",
													"nodeType": "YulBlock",
													"src": "11054:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "11080:431:6",
																"nodeType": "YulBlock",
																"src": "11080:431:6",
																"statements": [
																	{
																		"nativeSrc": "11094:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11094:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "11142:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "11142:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "11110:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "11110:31:6"
																			},
																			"nativeSrc": "11110:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11110:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "11098:8:6",
																				"nodeType": "YulTypedName",
																				"src": "11098:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11161:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11161:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "11184:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "11184:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "11212:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "11212:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "11194:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "11194:17:6"
																					},
																					"nativeSrc": "11194:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "11194:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11180:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "11180:3:6"
																			},
																			"nativeSrc": "11180:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11180:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "11165:11:6",
																				"nodeType": "YulTypedName",
																				"src": "11165:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11381:27:6",
																			"nodeType": "YulBlock",
																			"src": "11381:27:6",
																			"statements": [
																				{
																					"nativeSrc": "11383:23:6",
																					"nodeType": "YulAssignment",
																					"src": "11383:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "11398:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "11398:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "11383:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "11383:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "11365:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "11365:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11377:2:6",
																					"nodeType": "YulLiteral",
																					"src": "11377:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11362:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "11362:2:6"
																			},
																			"nativeSrc": "11362:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11362:18:6"
																		},
																		"nativeSrc": "11359:49:6",
																		"nodeType": "YulIf",
																		"src": "11359:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "11450:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "11450:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "11467:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "11467:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "11495:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "11495:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "11477:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "11477:17:6"
																							},
																							"nativeSrc": "11477:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "11477:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11463:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "11463:3:6"
																					},
																					"nativeSrc": "11463:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "11463:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "11421:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "11421:28:6"
																			},
																			"nativeSrc": "11421:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11421:80:6"
																		},
																		"nativeSrc": "11421:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11421:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "11071:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11071:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11076:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11076:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11068:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11068:2:6"
																},
																"nativeSrc": "11068:11:6",
																"nodeType": "YulFunctionCall",
																"src": "11068:11:6"
															},
															"nativeSrc": "11065:446:6",
															"nodeType": "YulIf",
															"src": "11065:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "10975:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11030:5:6",
														"nodeType": "YulTypedName",
														"src": "11030:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11037:3:6",
														"nodeType": "YulTypedName",
														"src": "11037:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "11042:10:6",
														"nodeType": "YulTypedName",
														"src": "11042:10:6",
														"type": ""
													}
												],
												"src": "10975:543:6"
											},
											{
												"body": {
													"nativeSrc": "11587:54:6",
													"nodeType": "YulBlock",
													"src": "11587:54:6",
													"statements": [
														{
															"nativeSrc": "11597:37:6",
															"nodeType": "YulAssignment",
															"src": "11597:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "11622:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11622:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11628:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11628:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "11618:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11618:3:6"
																},
																"nativeSrc": "11618:16:6",
																"nodeType": "YulFunctionCall",
																"src": "11618:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11597:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "11597:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "11524:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "11562:4:6",
														"nodeType": "YulTypedName",
														"src": "11562:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "11568:5:6",
														"nodeType": "YulTypedName",
														"src": "11568:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11578:8:6",
														"nodeType": "YulTypedName",
														"src": "11578:8:6",
														"type": ""
													}
												],
												"src": "11524:117:6"
											},
											{
												"body": {
													"nativeSrc": "11698:118:6",
													"nodeType": "YulBlock",
													"src": "11698:118:6",
													"statements": [
														{
															"nativeSrc": "11708:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "11708:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "11757:1:6",
																						"nodeType": "YulLiteral",
																						"src": "11757:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "11760:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "11760:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "11753:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "11753:3:6"
																				},
																				"nativeSrc": "11753:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11753:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "11772:1:6",
																						"nodeType": "YulLiteral",
																						"src": "11772:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "11768:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "11768:3:6"
																				},
																				"nativeSrc": "11768:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11768:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "11724:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "11724:28:6"
																		},
																		"nativeSrc": "11724:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11724:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "11720:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11720:3:6"
																},
																"nativeSrc": "11720:56:6",
																"nodeType": "YulFunctionCall",
																"src": "11720:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "11712:4:6",
																	"nodeType": "YulTypedName",
																	"src": "11712:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11785:25:6",
															"nodeType": "YulAssignment",
															"src": "11785:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11799:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11799:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "11805:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11805:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11795:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11795:3:6"
																},
																"nativeSrc": "11795:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11795:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11785:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11785:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "11647:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11675:4:6",
														"nodeType": "YulTypedName",
														"src": "11675:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "11681:5:6",
														"nodeType": "YulTypedName",
														"src": "11681:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11691:6:6",
														"nodeType": "YulTypedName",
														"src": "11691:6:6",
														"type": ""
													}
												],
												"src": "11647:169:6"
											},
											{
												"body": {
													"nativeSrc": "11902:214:6",
													"nodeType": "YulBlock",
													"src": "11902:214:6",
													"statements": [
														{
															"nativeSrc": "12035:37:6",
															"nodeType": "YulAssignment",
															"src": "12035:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12062:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12062:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "12068:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12068:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "12043:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "12043:18:6"
																},
																"nativeSrc": "12043:29:6",
																"nodeType": "YulFunctionCall",
																"src": "12043:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12035:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12035:4:6"
																}
															]
														},
														{
															"nativeSrc": "12081:29:6",
															"nodeType": "YulAssignment",
															"src": "12081:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12092:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12092:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12102:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12102:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "12105:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "12105:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "12098:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12098:3:6"
																		},
																		"nativeSrc": "12098:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12098:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12089:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "12089:2:6"
																},
																"nativeSrc": "12089:21:6",
																"nodeType": "YulFunctionCall",
																"src": "12089:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "12081:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12081:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "11821:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11883:4:6",
														"nodeType": "YulTypedName",
														"src": "11883:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11889:3:6",
														"nodeType": "YulTypedName",
														"src": "11889:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "11897:4:6",
														"nodeType": "YulTypedName",
														"src": "11897:4:6",
														"type": ""
													}
												],
												"src": "11821:295:6"
											},
											{
												"body": {
													"nativeSrc": "12213:1303:6",
													"nodeType": "YulBlock",
													"src": "12213:1303:6",
													"statements": [
														{
															"nativeSrc": "12224:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "12224:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12271:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12271:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "12238:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "12238:32:6"
																},
																"nativeSrc": "12238:37:6",
																"nodeType": "YulFunctionCall",
																"src": "12238:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "12228:6:6",
																	"nodeType": "YulTypedName",
																	"src": "12228:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12360:22:6",
																"nodeType": "YulBlock",
																"src": "12360:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12362:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "12362:16:6"
																			},
																			"nativeSrc": "12362:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12362:18:6"
																		},
																		"nativeSrc": "12362:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12362:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12332:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12332:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12340:18:6",
																		"nodeType": "YulLiteral",
																		"src": "12340:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12329:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "12329:2:6"
																},
																"nativeSrc": "12329:30:6",
																"nodeType": "YulFunctionCall",
																"src": "12329:30:6"
															},
															"nativeSrc": "12326:56:6",
															"nodeType": "YulIf",
															"src": "12326:56:6"
														},
														{
															"nativeSrc": "12392:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "12392:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "12438:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12438:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "12432:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "12432:5:6"
																		},
																		"nativeSrc": "12432:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12432:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "12406:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "12406:25:6"
																},
																"nativeSrc": "12406:38:6",
																"nodeType": "YulFunctionCall",
																"src": "12406:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "12396:6:6",
																	"nodeType": "YulTypedName",
																	"src": "12396:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12537:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12537:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "12543:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12543:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "12551:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12551:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "12491:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "12491:45:6"
																},
																"nativeSrc": "12491:67:6",
																"nodeType": "YulFunctionCall",
																"src": "12491:67:6"
															},
															"nativeSrc": "12491:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "12491:67:6"
														},
														{
															"nativeSrc": "12568:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "12568:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "12585:1:6",
																"nodeType": "YulLiteral",
																"src": "12585:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12572:9:6",
																	"nodeType": "YulTypedName",
																	"src": "12572:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12596:17:6",
															"nodeType": "YulAssignment",
															"src": "12596:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "12609:4:6",
																"nodeType": "YulLiteral",
																"src": "12609:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12596:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "12596:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "12660:611:6",
																		"nodeType": "YulBlock",
																		"src": "12660:611:6",
																		"statements": [
																			{
																				"nativeSrc": "12674:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12674:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "12693:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "12693:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "12705:4:6",
																									"nodeType": "YulLiteral",
																									"src": "12705:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "12701:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "12701:3:6"
																							},
																							"nativeSrc": "12701:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "12701:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "12689:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "12689:3:6"
																					},
																					"nativeSrc": "12689:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "12689:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "12678:7:6",
																						"nodeType": "YulTypedName",
																						"src": "12678:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12725:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12725:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "12771:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "12771:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "12739:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "12739:31:6"
																					},
																					"nativeSrc": "12739:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "12739:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "12729:6:6",
																						"nodeType": "YulTypedName",
																						"src": "12729:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12789:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12789:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12798:1:6",
																					"nodeType": "YulLiteral",
																					"src": "12798:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "12793:1:6",
																						"nodeType": "YulTypedName",
																						"src": "12793:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "12857:163:6",
																					"nodeType": "YulBlock",
																					"src": "12857:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12882:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "12882:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "12900:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "12900:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "12905:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "12905:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "12896:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "12896:3:6"
																												},
																												"nativeSrc": "12896:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "12896:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "12890:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "12890:5:6"
																										},
																										"nativeSrc": "12890:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "12890:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "12875:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "12875:6:6"
																								},
																								"nativeSrc": "12875:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "12875:42:6"
																							},
																							"nativeSrc": "12875:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "12875:42:6"
																						},
																						{
																							"nativeSrc": "12934:24:6",
																							"nodeType": "YulAssignment",
																							"src": "12934:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12948:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "12948:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12956:1:6",
																										"nodeType": "YulLiteral",
																										"src": "12956:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12944:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "12944:3:6"
																								},
																								"nativeSrc": "12944:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "12944:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "12934:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "12934:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "12975:31:6",
																							"nodeType": "YulAssignment",
																							"src": "12975:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "12992:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "12992:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13003:2:6",
																										"nodeType": "YulLiteral",
																										"src": "13003:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12988:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "12988:3:6"
																								},
																								"nativeSrc": "12988:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "12988:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "12975:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "12975:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "12823:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "12823:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "12826:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "12826:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "12820:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "12820:2:6"
																					},
																					"nativeSrc": "12820:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "12820:14:6"
																				},
																				"nativeSrc": "12812:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "12835:21:6",
																					"nodeType": "YulBlock",
																					"src": "12835:21:6",
																					"statements": [
																						{
																							"nativeSrc": "12837:17:6",
																							"nodeType": "YulAssignment",
																							"src": "12837:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "12846:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "12846:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12849:4:6",
																										"nodeType": "YulLiteral",
																										"src": "12849:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12842:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "12842:3:6"
																								},
																								"nativeSrc": "12842:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "12842:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "12837:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "12837:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "12816:3:6",
																					"nodeType": "YulBlock",
																					"src": "12816:3:6",
																					"statements": []
																				},
																				"src": "12812:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "13056:156:6",
																					"nodeType": "YulBlock",
																					"src": "13056:156:6",
																					"statements": [
																						{
																							"nativeSrc": "13074:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "13074:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13101:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "13101:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13106:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "13106:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13097:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "13097:3:6"
																										},
																										"nativeSrc": "13097:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "13097:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13091:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "13091:5:6"
																								},
																								"nativeSrc": "13091:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "13091:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "13078:9:6",
																									"nodeType": "YulTypedName",
																									"src": "13078:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13141:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "13141:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "13168:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "13168:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "13183:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "13183:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "13191:4:6",
																														"nodeType": "YulLiteral",
																														"src": "13191:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "13179:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "13179:3:6"
																												},
																												"nativeSrc": "13179:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "13179:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "13149:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "13149:18:6"
																										},
																										"nativeSrc": "13149:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "13149:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13134:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "13134:6:6"
																								},
																								"nativeSrc": "13134:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "13134:64:6"
																							},
																							"nativeSrc": "13134:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "13134:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13039:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "13039:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "13048:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "13048:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13036:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "13036:2:6"
																					},
																					"nativeSrc": "13036:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "13036:19:6"
																				},
																				"nativeSrc": "13033:179:6",
																				"nodeType": "YulIf",
																				"src": "13033:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13232:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "13232:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "13246:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "13246:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "13254:1:6",
																											"nodeType": "YulLiteral",
																											"src": "13254:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "13242:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "13242:3:6"
																									},
																									"nativeSrc": "13242:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "13242:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13258:1:6",
																									"nodeType": "YulLiteral",
																									"src": "13258:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13238:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "13238:3:6"
																							},
																							"nativeSrc": "13238:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "13238:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13225:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "13225:6:6"
																					},
																					"nativeSrc": "13225:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "13225:36:6"
																				},
																				"nativeSrc": "13225:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "13225:36:6"
																			}
																		]
																	},
																	"nativeSrc": "12653:618:6",
																	"nodeType": "YulCase",
																	"src": "12653:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12658:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12658:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13288:222:6",
																		"nodeType": "YulBlock",
																		"src": "13288:222:6",
																		"statements": [
																			{
																				"nativeSrc": "13302:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13302:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13315:1:6",
																					"nodeType": "YulLiteral",
																					"src": "13315:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "13306:5:6",
																						"nodeType": "YulTypedName",
																						"src": "13306:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13339:67:6",
																					"nodeType": "YulBlock",
																					"src": "13339:67:6",
																					"statements": [
																						{
																							"nativeSrc": "13357:35:6",
																							"nodeType": "YulAssignment",
																							"src": "13357:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13376:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "13376:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13381:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "13381:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13372:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "13372:3:6"
																										},
																										"nativeSrc": "13372:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "13372:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13366:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "13366:5:6"
																								},
																								"nativeSrc": "13366:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "13366:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "13357:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "13357:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "13332:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "13332:6:6"
																				},
																				"nativeSrc": "13329:77:6",
																				"nodeType": "YulIf",
																				"src": "13329:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13426:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "13426:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "13485:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "13485:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "13492:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "13492:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "13432:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "13432:52:6"
																							},
																							"nativeSrc": "13432:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "13432:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13419:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "13419:6:6"
																					},
																					"nativeSrc": "13419:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "13419:81:6"
																				},
																				"nativeSrc": "13419:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "13419:81:6"
																			}
																		]
																	},
																	"nativeSrc": "13280:230:6",
																	"nodeType": "YulCase",
																	"src": "13280:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12633:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12633:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12641:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12641:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12630:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "12630:2:6"
																},
																"nativeSrc": "12630:14:6",
																"nodeType": "YulFunctionCall",
																"src": "12630:14:6"
															},
															"nativeSrc": "12623:887:6",
															"nodeType": "YulSwitch",
															"src": "12623:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "12121:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12202:4:6",
														"nodeType": "YulTypedName",
														"src": "12202:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "12208:3:6",
														"nodeType": "YulTypedName",
														"src": "12208:3:6",
														"type": ""
													}
												],
												"src": "12121:1395:6"
											},
											{
												"body": {
													"nativeSrc": "13587:53:6",
													"nodeType": "YulBlock",
													"src": "13587:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13604:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13604:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13627:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "13627:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "13609:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "13609:17:6"
																		},
																		"nativeSrc": "13609:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13609:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13597:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13597:6:6"
																},
																"nativeSrc": "13597:37:6",
																"nodeType": "YulFunctionCall",
																"src": "13597:37:6"
															},
															"nativeSrc": "13597:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "13597:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "13522:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13575:5:6",
														"nodeType": "YulTypedName",
														"src": "13575:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13582:3:6",
														"nodeType": "YulTypedName",
														"src": "13582:3:6",
														"type": ""
													}
												],
												"src": "13522:118:6"
											},
											{
												"body": {
													"nativeSrc": "13744:124:6",
													"nodeType": "YulBlock",
													"src": "13744:124:6",
													"statements": [
														{
															"nativeSrc": "13754:26:6",
															"nodeType": "YulAssignment",
															"src": "13754:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13766:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13766:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13777:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13777:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13762:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13762:3:6"
																},
																"nativeSrc": "13762:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13762:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13754:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13754:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13834:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13834:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13847:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13847:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13858:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13858:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13843:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13843:3:6"
																		},
																		"nativeSrc": "13843:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13843:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13790:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13790:43:6"
																},
																"nativeSrc": "13790:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13790:71:6"
															},
															"nativeSrc": "13790:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13790:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "13646:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13716:9:6",
														"nodeType": "YulTypedName",
														"src": "13716:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13728:6:6",
														"nodeType": "YulTypedName",
														"src": "13728:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13739:4:6",
														"nodeType": "YulTypedName",
														"src": "13739:4:6",
														"type": ""
													}
												],
												"src": "13646:222:6"
											},
											{
												"body": {
													"nativeSrc": "14028:288:6",
													"nodeType": "YulBlock",
													"src": "14028:288:6",
													"statements": [
														{
															"nativeSrc": "14038:26:6",
															"nodeType": "YulAssignment",
															"src": "14038:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14050:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14050:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14061:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14061:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14046:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14046:3:6"
																},
																"nativeSrc": "14046:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14046:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14038:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14038:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14118:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14118:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14131:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14131:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14142:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14142:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14127:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14127:3:6"
																		},
																		"nativeSrc": "14127:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14127:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14074:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14074:43:6"
																},
																"nativeSrc": "14074:71:6",
																"nodeType": "YulFunctionCall",
																"src": "14074:71:6"
															},
															"nativeSrc": "14074:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "14074:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14199:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14199:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14212:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14212:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14223:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14223:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14208:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14208:3:6"
																		},
																		"nativeSrc": "14208:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14208:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14155:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14155:43:6"
																},
																"nativeSrc": "14155:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14155:72:6"
															},
															"nativeSrc": "14155:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14155:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14281:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14281:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14294:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14294:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14305:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14305:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14290:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14290:3:6"
																		},
																		"nativeSrc": "14290:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14290:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14237:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14237:43:6"
																},
																"nativeSrc": "14237:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14237:72:6"
															},
															"nativeSrc": "14237:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14237:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13874:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13984:9:6",
														"nodeType": "YulTypedName",
														"src": "13984:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13996:6:6",
														"nodeType": "YulTypedName",
														"src": "13996:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14004:6:6",
														"nodeType": "YulTypedName",
														"src": "14004:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14012:6:6",
														"nodeType": "YulTypedName",
														"src": "14012:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14023:4:6",
														"nodeType": "YulTypedName",
														"src": "14023:4:6",
														"type": ""
													}
												],
												"src": "13874:442:6"
											},
											{
												"body": {
													"nativeSrc": "14350:152:6",
													"nodeType": "YulBlock",
													"src": "14350:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14367:1:6",
																		"nodeType": "YulLiteral",
																		"src": "14367:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14370:77:6",
																		"nodeType": "YulLiteral",
																		"src": "14370:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14360:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14360:6:6"
																},
																"nativeSrc": "14360:88:6",
																"nodeType": "YulFunctionCall",
																"src": "14360:88:6"
															},
															"nativeSrc": "14360:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "14360:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14464:1:6",
																		"nodeType": "YulLiteral",
																		"src": "14464:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14467:4:6",
																		"nodeType": "YulLiteral",
																		"src": "14467:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14457:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14457:6:6"
																},
																"nativeSrc": "14457:15:6",
																"nodeType": "YulFunctionCall",
																"src": "14457:15:6"
															},
															"nativeSrc": "14457:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "14457:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14488:1:6",
																		"nodeType": "YulLiteral",
																		"src": "14488:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14491:4:6",
																		"nodeType": "YulLiteral",
																		"src": "14491:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14481:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14481:6:6"
																},
																"nativeSrc": "14481:15:6",
																"nodeType": "YulFunctionCall",
																"src": "14481:15:6"
															},
															"nativeSrc": "14481:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "14481:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14322:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14322:180:6"
											},
											{
												"body": {
													"nativeSrc": "14552:147:6",
													"nodeType": "YulBlock",
													"src": "14552:147:6",
													"statements": [
														{
															"nativeSrc": "14562:25:6",
															"nodeType": "YulAssignment",
															"src": "14562:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14585:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14585:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14567:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "14567:17:6"
																},
																"nativeSrc": "14567:20:6",
																"nodeType": "YulFunctionCall",
																"src": "14567:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14562:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "14562:1:6"
																}
															]
														},
														{
															"nativeSrc": "14596:25:6",
															"nodeType": "YulAssignment",
															"src": "14596:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14619:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14619:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14601:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "14601:17:6"
																},
																"nativeSrc": "14601:20:6",
																"nodeType": "YulFunctionCall",
																"src": "14601:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14596:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "14596:1:6"
																}
															]
														},
														{
															"nativeSrc": "14630:16:6",
															"nodeType": "YulAssignment",
															"src": "14630:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14641:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14641:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14644:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14644:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14637:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14637:3:6"
																},
																"nativeSrc": "14637:9:6",
																"nodeType": "YulFunctionCall",
																"src": "14637:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14630:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14630:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14670:22:6",
																"nodeType": "YulBlock",
																"src": "14670:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14672:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "14672:16:6"
																			},
																			"nativeSrc": "14672:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "14672:18:6"
																		},
																		"nativeSrc": "14672:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "14672:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14662:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14662:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14665:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14665:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14659:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "14659:2:6"
																},
																"nativeSrc": "14659:10:6",
																"nodeType": "YulFunctionCall",
																"src": "14659:10:6"
															},
															"nativeSrc": "14656:36:6",
															"nodeType": "YulIf",
															"src": "14656:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14508:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14539:1:6",
														"nodeType": "YulTypedName",
														"src": "14539:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14542:1:6",
														"nodeType": "YulTypedName",
														"src": "14542:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14548:3:6",
														"nodeType": "YulTypedName",
														"src": "14548:3:6",
														"type": ""
													}
												],
												"src": "14508:191:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c8063313ce5671161008a57806370a082311161006457806370a082311461022357806395d89b4114610253578063a9059cbb14610271578063dd62ed3e146102a1576100cd565b8063313ce567146101a557806348f7eb30146101c35780636813b53b146101f3576100cd565b8063025a42ae146100d157806306fdde03146100ed578063095ea7b31461010b57806318160ddd1461013b57806323b872dd146101595780632d15e94b14610189575b5f80fd5b6100eb60048036038101906100e69190610d5a565b6102d1565b005b6100f56102e0565b6040516101029190610e08565b60405180910390f35b61012560048036038101906101209190610d5a565b610370565b6040516101329190610e42565b60405180910390f35b610143610392565b6040516101509190610e6a565b60405180910390f35b610173600480360381019061016e9190610e83565b61039b565b6040516101809190610e42565b60405180910390f35b6101a3600480360381019061019e9190610fff565b6103c9565b005b6101ad6103fd565b6040516101ba9190611074565b60405180910390f35b6101dd60048036038101906101d8919061108d565b610405565b6040516101ea9190610e08565b60405180910390f35b61020d6004803603810190610208919061108d565b6104a0565b60405161021a9190610e08565b60405180910390f35b61023d600480360381019061023891906110b8565b610541565b60405161024a9190610e6a565b60405180910390f35b61025b610586565b6040516102689190610e08565b60405180910390f35b61028b60048036038101906102869190610d5a565b610616565b6040516102989190610e42565b60405180910390f35b6102bb60048036038101906102b691906110e3565b610638565b6040516102c89190610e6a565b60405180910390f35b6102dc3383836106ba565b5050565b6060600380546102ef9061114e565b80601f016020809104026020016040519081016040528092919081815260200182805461031b9061114e565b80156103665780601f1061033d57610100808354040283529160200191610366565b820191905f5260205f20905b81548152906001019060200180831161034957829003601f168201915b5050505050905090565b5f8061037a6107aa565b90506103878185856107b1565b600191505092915050565b5f600254905090565b5f806103a56107aa565b90506103b28582856107c3565b6103bd8585856106ba565b60019150509392505050565b6103d33382610855565b8160055f6103df610392565b81526020019081526020015f2090816103f8919061131b565b505050565b5f6012905090565b6005602052805f5260405f205f9150905080546104219061114e565b80601f016020809104026020016040519081016040528092919081815260200182805461044d9061114e565b80156104985780601f1061046f57610100808354040283529160200191610498565b820191905f5260205f20905b81548152906001019060200180831161047b57829003601f168201915b505050505081565b606060055f8381526020019081526020015f2080546104be9061114e565b80601f01602080910402602001604051908101604052809291908181526020018280546104ea9061114e565b80156105355780601f1061050c57610100808354040283529160200191610535565b820191905f5260205f20905b81548152906001019060200180831161051857829003601f168201915b50505050509050919050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546105959061114e565b80601f01602080910402602001604051908101604052809291908181526020018280546105c19061114e565b801561060c5780601f106105e35761010080835404028352916020019161060c565b820191905f5260205f20905b8154815290600101906020018083116105ef57829003601f168201915b5050505050905090565b5f806106206107aa565b905061062d8185856106ba565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361072a575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161072191906113f9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361079a575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161079191906113f9565b60405180910390fd5b6107a58383836108d4565b505050565b5f33905090565b6107be8383836001610aed565b505050565b5f6107ce8484610638565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461084f5781811015610840578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161083793929190611412565b60405180910390fd5b61084e84848484035f610aed565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108c5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108bc91906113f9565b60405180910390fd5b6108d05f83836108d4565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610924578060025f8282546109189190611474565b925050819055506109f2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156109ad578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016109a493929190611412565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a39578060025f8282540392505081905550610a83565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ae09190610e6a565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b5d575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b5491906113f9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bcd575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bc491906113f9565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610cb6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cad9190610e6a565b60405180910390a35b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cf682610ccd565b9050919050565b610d0681610cec565b8114610d10575f80fd5b50565b5f81359050610d2181610cfd565b92915050565b5f819050919050565b610d3981610d27565b8114610d43575f80fd5b50565b5f81359050610d5481610d30565b92915050565b5f8060408385031215610d7057610d6f610cc5565b5b5f610d7d85828601610d13565b9250506020610d8e85828601610d46565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610dda82610d98565b610de48185610da2565b9350610df4818560208601610db2565b610dfd81610dc0565b840191505092915050565b5f6020820190508181035f830152610e208184610dd0565b905092915050565b5f8115159050919050565b610e3c81610e28565b82525050565b5f602082019050610e555f830184610e33565b92915050565b610e6481610d27565b82525050565b5f602082019050610e7d5f830184610e5b565b92915050565b5f805f60608486031215610e9a57610e99610cc5565b5b5f610ea786828701610d13565b9350506020610eb886828701610d13565b9250506040610ec986828701610d46565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610f1182610dc0565b810181811067ffffffffffffffff82111715610f3057610f2f610edb565b5b80604052505050565b5f610f42610cbc565b9050610f4e8282610f08565b919050565b5f67ffffffffffffffff821115610f6d57610f6c610edb565b5b610f7682610dc0565b9050602081019050919050565b828183375f83830152505050565b5f610fa3610f9e84610f53565b610f39565b905082815260208101848484011115610fbf57610fbe610ed7565b5b610fca848285610f83565b509392505050565b5f82601f830112610fe657610fe5610ed3565b5b8135610ff6848260208601610f91565b91505092915050565b5f806040838503121561101557611014610cc5565b5b5f83013567ffffffffffffffff81111561103257611031610cc9565b5b61103e85828601610fd2565b925050602061104f85828601610d46565b9150509250929050565b5f60ff82169050919050565b61106e81611059565b82525050565b5f6020820190506110875f830184611065565b92915050565b5f602082840312156110a2576110a1610cc5565b5b5f6110af84828501610d46565b91505092915050565b5f602082840312156110cd576110cc610cc5565b5b5f6110da84828501610d13565b91505092915050565b5f80604083850312156110f9576110f8610cc5565b5b5f61110685828601610d13565b925050602061111785828601610d13565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061116557607f821691505b60208210810361117857611177611121565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026111da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261119f565b6111e4868361119f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61121f61121a61121584610d27565b6111fc565b610d27565b9050919050565b5f819050919050565b61123883611205565b61124c61124482611226565b8484546111ab565b825550505050565b5f90565b611260611254565b61126b81848461122f565b505050565b5b8181101561128e576112835f82611258565b600181019050611271565b5050565b601f8211156112d3576112a48161117e565b6112ad84611190565b810160208510156112bc578190505b6112d06112c885611190565b830182611270565b50505b505050565b5f82821c905092915050565b5f6112f35f19846008026112d8565b1980831691505092915050565b5f61130b83836112e4565b9150826002028217905092915050565b61132482610d98565b67ffffffffffffffff81111561133d5761133c610edb565b5b611347825461114e565b611352828285611292565b5f60209050601f831160018114611383575f8415611371578287015190505b61137b8582611300565b8655506113e2565b601f1984166113918661117e565b5f5b828110156113b857848901518255600182019150602085019450602081019050611393565b868310156113d557848901516113d1601f8916826112e4565b8355505b6001600288020188555050505b505050505050565b6113f381610cec565b82525050565b5f60208201905061140c5f8301846113ea565b92915050565b5f6060820190506114255f8301866113ea565b6114326020830185610e5b565b61143f6040830184610e5b565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61147e82610d27565b915061148983610d27565b92508282019050808211156114a1576114a0611447565b5b9291505056fea2646970667358221220b1f1a7aeaa919085ce74877f1e33b72d2268991bcb7c302a0fe059c21f764b1d64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A1 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x48F7EB30 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x6813B53B EQ PUSH2 0x1F3 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x25A42AE EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x2D15E94B EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AD PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x108D JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x108D JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x10B8 JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC CALLER DUP4 DUP4 PUSH2 0x6BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2EF SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x31B SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x366 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x366 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x349 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x37A PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP PUSH2 0x387 DUP2 DUP6 DUP6 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3A5 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP PUSH2 0x3B2 DUP6 DUP3 DUP6 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x3BD DUP6 DUP6 DUP6 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3D3 CALLER DUP3 PUSH2 0x855 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH0 PUSH2 0x3DF PUSH2 0x392 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x131B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x421 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x498 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x498 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x4BE SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4EA SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x535 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x50C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x535 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x518 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x595 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5C1 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x60C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x60C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x620 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP PUSH2 0x62D DUP2 DUP6 DUP6 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x72A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x721 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x79A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 DUP4 DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7BE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7CE DUP5 DUP5 PUSH2 0x638 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x84F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x840 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAED JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D0 PUSH0 DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x924 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9F2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x9AD JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA39 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA83 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB54 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC4 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCB6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCAD SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCF6 DUP3 PUSH2 0xCCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD06 DUP2 PUSH2 0xCEC JUMP JUMPDEST DUP2 EQ PUSH2 0xD10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD21 DUP2 PUSH2 0xCFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD39 DUP2 PUSH2 0xD27 JUMP JUMPDEST DUP2 EQ PUSH2 0xD43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD54 DUP2 PUSH2 0xD30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD70 JUMPI PUSH2 0xD6F PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD7D DUP6 DUP3 DUP7 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD8E DUP6 DUP3 DUP7 ADD PUSH2 0xD46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDDA DUP3 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0xDE4 DUP2 DUP6 PUSH2 0xDA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xDF4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0xDC0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE20 DUP2 DUP5 PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0xE28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE55 PUSH0 DUP4 ADD DUP5 PUSH2 0xE33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE64 DUP2 PUSH2 0xD27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7D PUSH0 DUP4 ADD DUP5 PUSH2 0xE5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE9A JUMPI PUSH2 0xE99 PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEA7 DUP7 DUP3 DUP8 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEB8 DUP7 DUP3 DUP8 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEC9 DUP7 DUP3 DUP8 ADD PUSH2 0xD46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xF11 DUP3 PUSH2 0xDC0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF30 JUMPI PUSH2 0xF2F PUSH2 0xEDB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF42 PUSH2 0xCBC JUMP JUMPDEST SWAP1 POP PUSH2 0xF4E DUP3 DUP3 PUSH2 0xF08 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF6D JUMPI PUSH2 0xF6C PUSH2 0xEDB JUMP JUMPDEST JUMPDEST PUSH2 0xF76 DUP3 PUSH2 0xDC0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFA3 PUSH2 0xF9E DUP5 PUSH2 0xF53 JUMP JUMPDEST PUSH2 0xF39 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xFBF JUMPI PUSH2 0xFBE PUSH2 0xED7 JUMP JUMPDEST JUMPDEST PUSH2 0xFCA DUP5 DUP3 DUP6 PUSH2 0xF83 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFE6 JUMPI PUSH2 0xFE5 PUSH2 0xED3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFF6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1015 JUMPI PUSH2 0x1014 PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1032 JUMPI PUSH2 0x1031 PUSH2 0xCC9 JUMP JUMPDEST JUMPDEST PUSH2 0x103E DUP6 DUP3 DUP7 ADD PUSH2 0xFD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x104F DUP6 DUP3 DUP7 ADD PUSH2 0xD46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106E DUP2 PUSH2 0x1059 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1087 PUSH0 DUP4 ADD DUP5 PUSH2 0x1065 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10A2 JUMPI PUSH2 0x10A1 PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10AF DUP5 DUP3 DUP6 ADD PUSH2 0xD46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10CD JUMPI PUSH2 0x10CC PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10DA DUP5 DUP3 DUP6 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F8 PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1106 DUP6 DUP3 DUP7 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1117 DUP6 DUP3 DUP7 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1165 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1178 JUMPI PUSH2 0x1177 PUSH2 0x1121 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x11DA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x11E4 DUP7 DUP4 PUSH2 0x119F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x121F PUSH2 0x121A PUSH2 0x1215 DUP5 PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1238 DUP4 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x124C PUSH2 0x1244 DUP3 PUSH2 0x1226 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x11AB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1260 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x126B DUP2 DUP5 DUP5 PUSH2 0x122F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x128E JUMPI PUSH2 0x1283 PUSH0 DUP3 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1271 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x12D3 JUMPI PUSH2 0x12A4 DUP2 PUSH2 0x117E JUMP JUMPDEST PUSH2 0x12AD DUP5 PUSH2 0x1190 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x12BC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x12D0 PUSH2 0x12C8 DUP6 PUSH2 0x1190 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1270 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12F3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x12D8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x130B DUP4 DUP4 PUSH2 0x12E4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1324 DUP3 PUSH2 0xD98 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x133D JUMPI PUSH2 0x133C PUSH2 0xEDB JUMP JUMPDEST JUMPDEST PUSH2 0x1347 DUP3 SLOAD PUSH2 0x114E JUMP JUMPDEST PUSH2 0x1352 DUP3 DUP3 DUP6 PUSH2 0x1292 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1383 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1371 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x137B DUP6 DUP3 PUSH2 0x1300 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1391 DUP7 PUSH2 0x117E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13B8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1393 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x13D5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x13D1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x12E4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13F3 DUP2 PUSH2 0xCEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x140C PUSH0 DUP4 ADD DUP5 PUSH2 0x13EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1425 PUSH0 DUP4 ADD DUP7 PUSH2 0x13EA JUMP JUMPDEST PUSH2 0x1432 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE5B JUMP JUMPDEST PUSH2 0x143F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE5B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x147E DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP PUSH2 0x1489 DUP4 PUSH2 0xD27 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14A1 JUMPI PUSH2 0x14A0 PUSH2 0x1447 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 CALL 0xA7 0xAE 0xAA SWAP2 SWAP1 DUP6 0xCE PUSH21 0x877F1E33B72D2268991BCB7C302A0FE059C21F764B SAR PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "118:564:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;429:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;268:155:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;216:45:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;556:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;429:121:5;503:40;513:10;525:9;536:6;503:9;:40::i;:::-;429:121;;:::o;2074:89:1:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;268:155:5:-;342:25;348:10;360:6;342:5;:25::i;:::-;409:7;377:14;:29;392:13;:11;:13::i;:::-;377:29;;;;;;;;;;;:39;;;;;;:::i;:::-;;268:155;;:::o;3002:82:1:-;3051:5;3075:2;3068:9;;3002:82;:::o;216:45:5:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;556:123::-;617:13;649:14;:23;664:7;649:23;;;;;;;;;;;642:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;556:123;;;:::o;3299:116:1:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:99::-;1729:6;1763:5;1757:12;1747:22;;1677:99;;;:::o;1782:169::-;1866:11;1900:6;1895:3;1888:19;1940:4;1935:3;1931:14;1916:29;;1782:169;;;;:::o;1957:139::-;2046:6;2041:3;2036;2030:23;2087:1;2078:6;2073:3;2069:16;2062:27;1957:139;;;:::o;2102:102::-;2143:6;2194:2;2190:7;2185:2;2178:5;2174:14;2170:28;2160:38;;2102:102;;;:::o;2210:377::-;2298:3;2326:39;2359:5;2326:39;:::i;:::-;2381:71;2445:6;2440:3;2381:71;:::i;:::-;2374:78;;2461:65;2519:6;2514:3;2507:4;2500:5;2496:16;2461:65;:::i;:::-;2551:29;2573:6;2551:29;:::i;:::-;2546:3;2542:39;2535:46;;2302:285;2210:377;;;;:::o;2593:313::-;2706:4;2744:2;2733:9;2729:18;2721:26;;2793:9;2787:4;2783:20;2779:1;2768:9;2764:17;2757:47;2821:78;2894:4;2885:6;2821:78;:::i;:::-;2813:86;;2593:313;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:117::-;4425:1;4422;4415:12;4439:117;4548:1;4545;4538:12;4562:180;4610:77;4607:1;4600:88;4707:4;4704:1;4697:15;4731:4;4728:1;4721:15;4748:281;4831:27;4853:4;4831:27;:::i;:::-;4823:6;4819:40;4961:6;4949:10;4946:22;4925:18;4913:10;4910:34;4907:62;4904:88;;;4972:18;;:::i;:::-;4904:88;5012:10;5008:2;5001:22;4791:238;4748:281;;:::o;5035:129::-;5069:6;5096:20;;:::i;:::-;5086:30;;5125:33;5153:4;5145:6;5125:33;:::i;:::-;5035:129;;;:::o;5170:308::-;5232:4;5322:18;5314:6;5311:30;5308:56;;;5344:18;;:::i;:::-;5308:56;5382:29;5404:6;5382:29;:::i;:::-;5374:37;;5466:4;5460;5456:15;5448:23;;5170:308;;;:::o;5484:148::-;5582:6;5577:3;5572;5559:30;5623:1;5614:6;5609:3;5605:16;5598:27;5484:148;;;:::o;5638:425::-;5716:5;5741:66;5757:49;5799:6;5757:49;:::i;:::-;5741:66;:::i;:::-;5732:75;;5830:6;5823:5;5816:21;5868:4;5861:5;5857:16;5906:3;5897:6;5892:3;5888:16;5885:25;5882:112;;;5913:79;;:::i;:::-;5882:112;6003:54;6050:6;6045:3;6040;6003:54;:::i;:::-;5722:341;5638:425;;;;;:::o;6083:340::-;6139:5;6188:3;6181:4;6173:6;6169:17;6165:27;6155:122;;6196:79;;:::i;:::-;6155:122;6313:6;6300:20;6338:79;6413:3;6405:6;6398:4;6390:6;6386:17;6338:79;:::i;:::-;6329:88;;6145:278;6083:340;;;;:::o;6429:654::-;6507:6;6515;6564:2;6552:9;6543:7;6539:23;6535:32;6532:119;;;6570:79;;:::i;:::-;6532:119;6718:1;6707:9;6703:17;6690:31;6748:18;6740:6;6737:30;6734:117;;;6770:79;;:::i;:::-;6734:117;6875:63;6930:7;6921:6;6910:9;6906:22;6875:63;:::i;:::-;6865:73;;6661:287;6987:2;7013:53;7058:7;7049:6;7038:9;7034:22;7013:53;:::i;:::-;7003:63;;6958:118;6429:654;;;;;:::o;7089:86::-;7124:7;7164:4;7157:5;7153:16;7142:27;;7089:86;;;:::o;7181:112::-;7264:22;7280:5;7264:22;:::i;:::-;7259:3;7252:35;7181:112;;:::o;7299:214::-;7388:4;7426:2;7415:9;7411:18;7403:26;;7439:67;7503:1;7492:9;7488:17;7479:6;7439:67;:::i;:::-;7299:214;;;;:::o;7519:329::-;7578:6;7627:2;7615:9;7606:7;7602:23;7598:32;7595:119;;;7633:79;;:::i;:::-;7595:119;7753:1;7778:53;7823:7;7814:6;7803:9;7799:22;7778:53;:::i;:::-;7768:63;;7724:117;7519:329;;;;:::o;7854:::-;7913:6;7962:2;7950:9;7941:7;7937:23;7933:32;7930:119;;;7968:79;;:::i;:::-;7930:119;8088:1;8113:53;8158:7;8149:6;8138:9;8134:22;8113:53;:::i;:::-;8103:63;;8059:117;7854:329;;;;:::o;8189:474::-;8257:6;8265;8314:2;8302:9;8293:7;8289:23;8285:32;8282:119;;;8320:79;;:::i;:::-;8282:119;8440:1;8465:53;8510:7;8501:6;8490:9;8486:22;8465:53;:::i;:::-;8455:63;;8411:117;8567:2;8593:53;8638:7;8629:6;8618:9;8614:22;8593:53;:::i;:::-;8583:63;;8538:118;8189:474;;;;;:::o;8669:180::-;8717:77;8714:1;8707:88;8814:4;8811:1;8804:15;8838:4;8835:1;8828:15;8855:320;8899:6;8936:1;8930:4;8926:12;8916:22;;8983:1;8977:4;8973:12;9004:18;8994:81;;9060:4;9052:6;9048:17;9038:27;;8994:81;9122:2;9114:6;9111:14;9091:18;9088:38;9085:84;;9141:18;;:::i;:::-;9085:84;8906:269;8855:320;;;:::o;9181:141::-;9230:4;9253:3;9245:11;;9276:3;9273:1;9266:14;9310:4;9307:1;9297:18;9289:26;;9181:141;;;:::o;9328:93::-;9365:6;9412:2;9407;9400:5;9396:14;9392:23;9382:33;;9328:93;;;:::o;9427:107::-;9471:8;9521:5;9515:4;9511:16;9490:37;;9427:107;;;;:::o;9540:393::-;9609:6;9659:1;9647:10;9643:18;9682:97;9712:66;9701:9;9682:97;:::i;:::-;9800:39;9830:8;9819:9;9800:39;:::i;:::-;9788:51;;9872:4;9868:9;9861:5;9857:21;9848:30;;9921:4;9911:8;9907:19;9900:5;9897:30;9887:40;;9616:317;;9540:393;;;;;:::o;9939:60::-;9967:3;9988:5;9981:12;;9939:60;;;:::o;10005:142::-;10055:9;10088:53;10106:34;10115:24;10133:5;10115:24;:::i;:::-;10106:34;:::i;:::-;10088:53;:::i;:::-;10075:66;;10005:142;;;:::o;10153:75::-;10196:3;10217:5;10210:12;;10153:75;;;:::o;10234:269::-;10344:39;10375:7;10344:39;:::i;:::-;10405:91;10454:41;10478:16;10454:41;:::i;:::-;10446:6;10439:4;10433:11;10405:91;:::i;:::-;10399:4;10392:105;10310:193;10234:269;;;:::o;10509:73::-;10554:3;10509:73;:::o;10588:189::-;10665:32;;:::i;:::-;10706:65;10764:6;10756;10750:4;10706:65;:::i;:::-;10641:136;10588:189;;:::o;10783:186::-;10843:120;10860:3;10853:5;10850:14;10843:120;;;10914:39;10951:1;10944:5;10914:39;:::i;:::-;10887:1;10880:5;10876:13;10867:22;;10843:120;;;10783:186;;:::o;10975:543::-;11076:2;11071:3;11068:11;11065:446;;;11110:38;11142:5;11110:38;:::i;:::-;11194:29;11212:10;11194:29;:::i;:::-;11184:8;11180:44;11377:2;11365:10;11362:18;11359:49;;;11398:8;11383:23;;11359:49;11421:80;11477:22;11495:3;11477:22;:::i;:::-;11467:8;11463:37;11450:11;11421:80;:::i;:::-;11080:431;;11065:446;10975:543;;;:::o;11524:117::-;11578:8;11628:5;11622:4;11618:16;11597:37;;11524:117;;;;:::o;11647:169::-;11691:6;11724:51;11772:1;11768:6;11760:5;11757:1;11753:13;11724:51;:::i;:::-;11720:56;11805:4;11799;11795:15;11785:25;;11698:118;11647:169;;;;:::o;11821:295::-;11897:4;12043:29;12068:3;12062:4;12043:29;:::i;:::-;12035:37;;12105:3;12102:1;12098:11;12092:4;12089:21;12081:29;;11821:295;;;;:::o;12121:1395::-;12238:37;12271:3;12238:37;:::i;:::-;12340:18;12332:6;12329:30;12326:56;;;12362:18;;:::i;:::-;12326:56;12406:38;12438:4;12432:11;12406:38;:::i;:::-;12491:67;12551:6;12543;12537:4;12491:67;:::i;:::-;12585:1;12609:4;12596:17;;12641:2;12633:6;12630:14;12658:1;12653:618;;;;13315:1;13332:6;13329:77;;;13381:9;13376:3;13372:19;13366:26;13357:35;;13329:77;13432:67;13492:6;13485:5;13432:67;:::i;:::-;13426:4;13419:81;13288:222;12623:887;;12653:618;12705:4;12701:9;12693:6;12689:22;12739:37;12771:4;12739:37;:::i;:::-;12798:1;12812:208;12826:7;12823:1;12820:14;12812:208;;;12905:9;12900:3;12896:19;12890:26;12882:6;12875:42;12956:1;12948:6;12944:14;12934:24;;13003:2;12992:9;12988:18;12975:31;;12849:4;12846:1;12842:12;12837:17;;12812:208;;;13048:6;13039:7;13036:19;13033:179;;;13106:9;13101:3;13097:19;13091:26;13149:48;13191:4;13183:6;13179:17;13168:9;13149:48;:::i;:::-;13141:6;13134:64;13056:156;13033:179;13258:1;13254;13246:6;13242:14;13238:22;13232:4;13225:36;12660:611;;;12623:887;;12213:1303;;;12121:1395;;:::o;13522:118::-;13609:24;13627:5;13609:24;:::i;:::-;13604:3;13597:37;13522:118;;:::o;13646:222::-;13739:4;13777:2;13766:9;13762:18;13754:26;;13790:71;13858:1;13847:9;13843:17;13834:6;13790:71;:::i;:::-;13646:222;;;;:::o;13874:442::-;14023:4;14061:2;14050:9;14046:18;14038:26;;14074:71;14142:1;14131:9;14127:17;14118:6;14074:71;:::i;:::-;14155:72;14223:2;14212:9;14208:18;14199:6;14155:72;:::i;:::-;14237;14305:2;14294:9;14290:18;14281:6;14237:72;:::i;:::-;13874:442;;;;;;:::o;14322:180::-;14370:77;14367:1;14360:88;14467:4;14464:1;14457:15;14491:4;14488:1;14481:15;14508:191;14548:3;14567:20;14585:1;14567:20;:::i;:::-;14562:25;;14601:20;14619:1;14601:20;:::i;:::-;14596:25;;14644:1;14641;14637:9;14630:16;;14665:3;14662:1;14659:10;14656:36;;;14672:18;;:::i;:::-;14656:36;14508:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1068200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "361",
								"getProductDetails(uint256)": "infinite",
								"mintProduct(string,uint256)": "infinite",
								"name()": "infinite",
								"productDetails(uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2499",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferProduct(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 118,
									"end": 682,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 118,
									"end": 682,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 118,
									"end": 682,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 160,
									"end": 210,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 160,
									"end": 210,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 160,
									"end": 210,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 160,
									"end": 210,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 160,
									"end": 210,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 160,
									"end": 210,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 160,
									"end": 210,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 160,
									"end": 210,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 160,
									"end": 210,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 160,
									"end": 210,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 160,
									"end": 210,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "537570706C79436861696E546F6B656E00000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "5343540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 118,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 118,
									"end": 682,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 118,
									"end": 682,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 118,
									"end": 682,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 118,
									"end": 682,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 682,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 118,
									"end": 682,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 682,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 682,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 118,
									"end": 682,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 682,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b1f1a7aeaa919085ce74877f1e33b72d2268991bcb7c302a0fe059c21f764b1d64736f6c63430008190033",
									".code": [
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "48F7EB30"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "6813B53B"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "25A42AE"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "2D15E94B"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 118,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 429,
											"end": 550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 429,
											"end": 550,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 429,
											"end": 550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 429,
											"end": 550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 429,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 429,
											"end": 550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 429,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 429,
											"end": 550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 268,
											"end": 423,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 268,
											"end": 423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 423,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 268,
											"end": 423,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 268,
											"end": 423,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 268,
											"end": 423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 268,
											"end": 423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 268,
											"end": 423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 216,
											"end": 261,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 216,
											"end": 261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 216,
											"end": 261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 216,
											"end": 261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 556,
											"end": 679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 556,
											"end": 679,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 556,
											"end": 679,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 556,
											"end": 679,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 556,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 556,
											"end": 679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 556,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 556,
											"end": 679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 679,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 556,
											"end": 679,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 556,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 556,
											"end": 679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 679,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 429,
											"end": 550,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 429,
											"end": 550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 513,
											"end": 523,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 525,
											"end": 534,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 536,
											"end": 542,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 503,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 503,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 503,
											"end": 543,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 503,
											"end": 543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 423,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 268,
											"end": 423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 342,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 348,
											"end": 358,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 360,
											"end": 366,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 342,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 342,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 342,
											"end": 367,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 342,
											"end": 367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 409,
											"end": 416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 391,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 377,
											"end": 406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 392,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 392,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 392,
											"end": 405,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 392,
											"end": 405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 406,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 377,
											"end": 406,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 377,
											"end": 406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 377,
											"end": 406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 406,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 377,
											"end": 406,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 377,
											"end": 406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 377,
											"end": 406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 406,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 377,
											"end": 416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 377,
											"end": 416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 377,
											"end": 416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 377,
											"end": 416,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 377,
											"end": 416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 268,
											"end": 423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 216,
											"end": 261,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 216,
											"end": 261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 216,
											"end": 261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 216,
											"end": 261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 216,
											"end": 261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 556,
											"end": 679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 617,
											"end": 630,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 649,
											"end": 663,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 649,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 671,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 649,
											"end": 672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 649,
											"end": 672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 649,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 649,
											"end": 672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 649,
											"end": 672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 649,
											"end": 672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 649,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 649,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 672,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 642,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 642,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 556,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1776,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1677,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1776,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1951,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1782,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1898,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 1907,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1935,
											"end": 1938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 1945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1951,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1951,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1951,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1951,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2096,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1957,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2044,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2039,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2030,
											"end": 2053,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2076,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2204,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2102,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2190,
											"end": 2197,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2170,
											"end": 2198,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2587,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2210,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2298,
											"end": 2301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2326,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2326,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2326,
											"end": 2365,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2326,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2443,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2381,
											"end": 2452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2452,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2381,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2452,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2519,
											"end": 2525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2505,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2461,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2526,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2461,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2551,
											"end": 2580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2580,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2551,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2546,
											"end": 2549,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2535,
											"end": 2581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2535,
											"end": 2581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2587,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2593,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2593,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2746,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2803,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2894,
											"end": 2898,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2891,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2821,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2899,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2821,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2593,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2593,
											"end": 2906,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2593,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2593,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2593,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4433,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4316,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4422,
											"end": 4423,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4415,
											"end": 4427,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4439,
											"end": 4556,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 4439,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4562,
											"end": 4742,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 4562,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4687,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4607,
											"end": 4608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4688,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 4711,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4704,
											"end": 4705,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4697,
											"end": 4712,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4735,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4728,
											"end": 4729,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4736,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 5029,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 4748,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4831,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4853,
											"end": 4857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4831,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4831,
											"end": 4858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4831,
											"end": 4858,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4831,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4967,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4949,
											"end": 4959,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4968,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4943,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4913,
											"end": 4923,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4944,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4907,
											"end": 4969,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 4992,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4904,
											"end": 4992,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 4972,
											"end": 4990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 4992,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4904,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5001,
											"end": 5023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 5029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 5029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 5029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 5029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5164,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5035,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5096,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5096,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5116,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5096,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5086,
											"end": 5116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5086,
											"end": 5116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5125,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5151,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5125,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 5125,
											"end": 5158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5125,
											"end": 5158,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5125,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5164,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5170,
											"end": 5478,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5170,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5236,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5340,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5314,
											"end": 5320,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5341,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5308,
											"end": 5364,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5308,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5308,
											"end": 5364,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5344,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5344,
											"end": 5362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5362,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5344,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5308,
											"end": 5364,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5308,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5382,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5411,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5382,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5470,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5460,
											"end": 5464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5448,
											"end": 5471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5448,
											"end": 5471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5170,
											"end": 5478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5170,
											"end": 5478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5170,
											"end": 5478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5170,
											"end": 5478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5484,
											"end": 5632,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 5484,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5577,
											"end": 5580,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5589,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5612,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5605,
											"end": 5621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5625,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5484,
											"end": 5632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5484,
											"end": 5632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5484,
											"end": 5632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5484,
											"end": 5632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5716,
											"end": 5721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 5757,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5799,
											"end": 5805,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5757,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5757,
											"end": 5806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5757,
											"end": 5806,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5757,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5741,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5807,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 5741,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5732,
											"end": 5807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5732,
											"end": 5807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5836,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5816,
											"end": 5837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5872,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5866,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 5873,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5909,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5897,
											"end": 5903,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5895,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5888,
											"end": 5904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5885,
											"end": 5910,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5882,
											"end": 5994,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5882,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5882,
											"end": 5994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5913,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5913,
											"end": 5992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5992,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5913,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5882,
											"end": 5994,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5882,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6050,
											"end": 6056,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6043,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 6003,
											"end": 6057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6057,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6003,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5722,
											"end": 6063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 6063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 6063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6423,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6083,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6139,
											"end": 6144,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6191,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6181,
											"end": 6185,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6173,
											"end": 6179,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6192,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6155,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6155,
											"end": 6277,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6196,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6196,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6196,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6196,
											"end": 6275,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6196,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6155,
											"end": 6277,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6155,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6313,
											"end": 6319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6300,
											"end": 6320,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6338,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 6413,
											"end": 6416,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6398,
											"end": 6402,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6396,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6338,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6338,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6338,
											"end": 6417,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 6338,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6417,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6423,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 7083,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 6429,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6521,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6566,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6550,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6539,
											"end": 6562,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6535,
											"end": 6567,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6651,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6532,
											"end": 6651,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 6570,
											"end": 6649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6570,
											"end": 6649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6649,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 6570,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6651,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6532,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6718,
											"end": 6719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6716,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6720,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6721,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6766,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6740,
											"end": 6746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6851,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6734,
											"end": 6851,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 6770,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6770,
											"end": 6849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6849,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 6770,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6851,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6734,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6910,
											"end": 6919,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6875,
											"end": 6938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6938,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 6875,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6938,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6661,
											"end": 6948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7013,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 7058,
											"end": 7065,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7049,
											"end": 7055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7038,
											"end": 7047,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7034,
											"end": 7056,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7013,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7013,
											"end": 7066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7013,
											"end": 7066,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 7013,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6958,
											"end": 7076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 7083,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 7083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 7083,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 7083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 7083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 7083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7089,
											"end": 7175,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 7089,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7131,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7168,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7157,
											"end": 7162,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7153,
											"end": 7169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7142,
											"end": 7169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7142,
											"end": 7169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7089,
											"end": 7175,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7089,
											"end": 7175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7089,
											"end": 7175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7089,
											"end": 7175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7293,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7181,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 7280,
											"end": 7285,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 7264,
											"end": 7286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7286,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 7264,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7287,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7513,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 7299,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7388,
											"end": 7392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7426,
											"end": 7428,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7415,
											"end": 7424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7403,
											"end": 7429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7403,
											"end": 7429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7439,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 7503,
											"end": 7504,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7501,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7488,
											"end": 7505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7485,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7439,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7439,
											"end": 7506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7439,
											"end": 7506,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 7439,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7513,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7513,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7513,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7513,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7519,
											"end": 7848,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 7519,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7578,
											"end": 7584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7627,
											"end": 7629,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7615,
											"end": 7624,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7606,
											"end": 7613,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7602,
											"end": 7625,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7598,
											"end": 7630,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7714,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 7595,
											"end": 7714,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7633,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 7633,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7633,
											"end": 7712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7633,
											"end": 7712,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 7633,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7714,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 7595,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7753,
											"end": 7754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 7823,
											"end": 7830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7803,
											"end": 7812,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 7821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7778,
											"end": 7831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7831,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7724,
											"end": 7841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7519,
											"end": 7848,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7519,
											"end": 7848,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7519,
											"end": 7848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7519,
											"end": 7848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7519,
											"end": 7848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7964,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7950,
											"end": 7959,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7941,
											"end": 7948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7937,
											"end": 7960,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7933,
											"end": 7965,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7968,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 7968,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7968,
											"end": 8047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7968,
											"end": 8047,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 7968,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 8158,
											"end": 8165,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8138,
											"end": 8147,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8113,
											"end": 8166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8103,
											"end": 8166,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8103,
											"end": 8166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 8183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8663,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 8189,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8265,
											"end": 8271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8302,
											"end": 8311,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8293,
											"end": 8300,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8289,
											"end": 8312,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8285,
											"end": 8317,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8282,
											"end": 8401,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8282,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 8282,
											"end": 8401,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8320,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 8320,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8320,
											"end": 8399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8320,
											"end": 8399,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 8320,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8282,
											"end": 8401,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 8282,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 8510,
											"end": 8517,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8501,
											"end": 8507,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8490,
											"end": 8499,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8486,
											"end": 8508,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8465,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8465,
											"end": 8518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8465,
											"end": 8518,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 8465,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8518,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8411,
											"end": 8528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8567,
											"end": 8569,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8593,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 8638,
											"end": 8645,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8629,
											"end": 8635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8614,
											"end": 8636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8593,
											"end": 8646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8646,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 8593,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8646,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8538,
											"end": 8656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8663,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8663,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 8849,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 8669,
											"end": 8849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8794,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8714,
											"end": 8715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8707,
											"end": 8795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8814,
											"end": 8818,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8811,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8804,
											"end": 8819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 8842,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8835,
											"end": 8836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8828,
											"end": 8843,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 9175,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 8855,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8899,
											"end": 8905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8936,
											"end": 8937,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8930,
											"end": 8934,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8926,
											"end": 8938,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 8984,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8977,
											"end": 8981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8973,
											"end": 8985,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 8994,
											"end": 9075,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9060,
											"end": 9064,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 9052,
											"end": 9058,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9048,
											"end": 9065,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9038,
											"end": 9065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9038,
											"end": 9065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9075,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 8994,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9122,
											"end": 9124,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9114,
											"end": 9120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9111,
											"end": 9125,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9091,
											"end": 9109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9126,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9085,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 9085,
											"end": 9169,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9141,
											"end": 9159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 9141,
											"end": 9159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9141,
											"end": 9159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9141,
											"end": 9159,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 9141,
											"end": 9159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9085,
											"end": 9169,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 9085,
											"end": 9169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8906,
											"end": 9175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 9175,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 9175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 9175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 9175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9181,
											"end": 9322,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 9181,
											"end": 9322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9230,
											"end": 9234,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9245,
											"end": 9256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9245,
											"end": 9256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9279,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9273,
											"end": 9274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9266,
											"end": 9280,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9310,
											"end": 9314,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9307,
											"end": 9308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9315,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9289,
											"end": 9315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9289,
											"end": 9315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9181,
											"end": 9322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9181,
											"end": 9322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9181,
											"end": 9322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9181,
											"end": 9322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9328,
											"end": 9421,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 9328,
											"end": 9421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9365,
											"end": 9371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9414,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9407,
											"end": 9409,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9400,
											"end": 9405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9392,
											"end": 9415,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9382,
											"end": 9415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9382,
											"end": 9415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9328,
											"end": 9421,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9328,
											"end": 9421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9328,
											"end": 9421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9328,
											"end": 9421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9534,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 9427,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9471,
											"end": 9479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9521,
											"end": 9526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9515,
											"end": 9519,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9511,
											"end": 9527,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9490,
											"end": 9527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9490,
											"end": 9527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9534,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9933,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9540,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9615,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9659,
											"end": 9660,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9643,
											"end": 9661,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9682,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 9712,
											"end": 9778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9701,
											"end": 9710,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9682,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 9682,
											"end": 9779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9682,
											"end": 9779,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 9682,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 9830,
											"end": 9838,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9819,
											"end": 9828,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 9800,
											"end": 9839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 9839,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 9800,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9788,
											"end": 9839,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 9788,
											"end": 9839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9872,
											"end": 9876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9868,
											"end": 9877,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9861,
											"end": 9866,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 9878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9848,
											"end": 9878,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9848,
											"end": 9878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 9925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9911,
											"end": 9919,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9926,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9900,
											"end": 9905,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9897,
											"end": 9927,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9616,
											"end": 9933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9616,
											"end": 9933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9933,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9933,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9939,
											"end": 9999,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9939,
											"end": 9999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9967,
											"end": 9970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9988,
											"end": 9993,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9981,
											"end": 9993,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9981,
											"end": 9993,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9939,
											"end": 9999,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9939,
											"end": 9999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9939,
											"end": 9999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9939,
											"end": 9999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10005,
											"end": 10147,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 10005,
											"end": 10147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10088,
											"end": 10141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 10106,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 10115,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 10133,
											"end": 10138,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10115,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 10115,
											"end": 10139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10115,
											"end": 10139,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 10115,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10106,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 10106,
											"end": 10140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10106,
											"end": 10140,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 10106,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10088,
											"end": 10141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 10088,
											"end": 10141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10088,
											"end": 10141,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 10088,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10075,
											"end": 10141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10075,
											"end": 10141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10005,
											"end": 10147,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10005,
											"end": 10147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10005,
											"end": 10147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10005,
											"end": 10147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10228,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 10153,
											"end": 10228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10217,
											"end": 10222,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10228,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10503,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 10234,
											"end": 10503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10344,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 10375,
											"end": 10382,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10344,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 10344,
											"end": 10383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10344,
											"end": 10383,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 10344,
											"end": 10383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10405,
											"end": 10496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 10454,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 10478,
											"end": 10494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 10454,
											"end": 10495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10495,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 10454,
											"end": 10495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10446,
											"end": 10452,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10439,
											"end": 10443,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10433,
											"end": 10444,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10405,
											"end": 10496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 10405,
											"end": 10496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10405,
											"end": 10496,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 10405,
											"end": 10496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10403,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10392,
											"end": 10497,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10310,
											"end": 10503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10509,
											"end": 10582,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 10509,
											"end": 10582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10554,
											"end": 10557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10509,
											"end": 10582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10777,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 10588,
											"end": 10777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10665,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 10665,
											"end": 10697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10697,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10665,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10706,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 10764,
											"end": 10770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10756,
											"end": 10762,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10706,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 10706,
											"end": 10771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10706,
											"end": 10771,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 10706,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10783,
											"end": 10969,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 10783,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10843,
											"end": 10963,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 10843,
											"end": 10963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10860,
											"end": 10863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10853,
											"end": 10858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 10864,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10843,
											"end": 10963,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10843,
											"end": 10963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 10843,
											"end": 10963,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10914,
											"end": 10953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 10951,
											"end": 10952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10944,
											"end": 10949,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10914,
											"end": 10953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 10914,
											"end": 10953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10914,
											"end": 10953,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 10914,
											"end": 10953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10887,
											"end": 10888,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10880,
											"end": 10885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10876,
											"end": 10889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10867,
											"end": 10889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10867,
											"end": 10889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10843,
											"end": 10963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 10843,
											"end": 10963,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10843,
											"end": 10963,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 10843,
											"end": 10963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10783,
											"end": 10969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10783,
											"end": 10969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10783,
											"end": 10969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10975,
											"end": 11518,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10975,
											"end": 11518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11076,
											"end": 11078,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 11071,
											"end": 11074,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11068,
											"end": 11079,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11065,
											"end": 11511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11065,
											"end": 11511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 11065,
											"end": 11511,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11110,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 11142,
											"end": 11147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11110,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 11110,
											"end": 11148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11110,
											"end": 11148,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 11110,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11194,
											"end": 11223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 11212,
											"end": 11222,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11194,
											"end": 11223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 11194,
											"end": 11223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11194,
											"end": 11223,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 11194,
											"end": 11223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11184,
											"end": 11192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11180,
											"end": 11224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11377,
											"end": 11379,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11365,
											"end": 11375,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11362,
											"end": 11380,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11359,
											"end": 11408,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11359,
											"end": 11408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 11359,
											"end": 11408,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11383,
											"end": 11406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11383,
											"end": 11406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11359,
											"end": 11408,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 11359,
											"end": 11408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11421,
											"end": 11501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 11477,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 11495,
											"end": 11498,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 11477,
											"end": 11499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11499,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 11477,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11475,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11463,
											"end": 11500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11450,
											"end": 11461,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11421,
											"end": 11501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 11421,
											"end": 11501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11421,
											"end": 11501,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 11421,
											"end": 11501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11080,
											"end": 11511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11080,
											"end": 11511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11065,
											"end": 11511,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 11065,
											"end": 11511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10975,
											"end": 11518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10975,
											"end": 11518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10975,
											"end": 11518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10975,
											"end": 11518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11524,
											"end": 11641,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 11524,
											"end": 11641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11578,
											"end": 11586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11628,
											"end": 11633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11622,
											"end": 11626,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11618,
											"end": 11634,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 11597,
											"end": 11634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11597,
											"end": 11634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11524,
											"end": 11641,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11524,
											"end": 11641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11524,
											"end": 11641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11524,
											"end": 11641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11524,
											"end": 11641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11647,
											"end": 11816,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 11647,
											"end": 11816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11691,
											"end": 11697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11724,
											"end": 11775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 11772,
											"end": 11773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11768,
											"end": 11774,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 11760,
											"end": 11765,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11757,
											"end": 11758,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 11753,
											"end": 11766,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11724,
											"end": 11775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 11724,
											"end": 11775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11724,
											"end": 11775,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 11724,
											"end": 11775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11720,
											"end": 11776,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 11805,
											"end": 11809,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11799,
											"end": 11803,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11795,
											"end": 11810,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 11810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 11810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11698,
											"end": 11816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11647,
											"end": 11816,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11647,
											"end": 11816,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11647,
											"end": 11816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11647,
											"end": 11816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11647,
											"end": 11816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 12116,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 11821,
											"end": 12116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11897,
											"end": 11901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12043,
											"end": 12072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 12068,
											"end": 12071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12062,
											"end": 12066,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12043,
											"end": 12072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 12043,
											"end": 12072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12043,
											"end": 12072,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 12043,
											"end": 12072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12035,
											"end": 12072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12035,
											"end": 12072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12105,
											"end": 12108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12102,
											"end": 12103,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 12098,
											"end": 12109,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12092,
											"end": 12096,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12089,
											"end": 12110,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 12081,
											"end": 12110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12081,
											"end": 12110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 12116,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 12116,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 12116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 12116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 12116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12121,
											"end": 13516,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12121,
											"end": 13516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12238,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 12271,
											"end": 12274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12238,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 12238,
											"end": 12275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12238,
											"end": 12275,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 12238,
											"end": 12275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12340,
											"end": 12358,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12332,
											"end": 12338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12329,
											"end": 12359,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12326,
											"end": 12382,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12326,
											"end": 12382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 12326,
											"end": 12382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 12362,
											"end": 12380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 12362,
											"end": 12380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12380,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 12362,
											"end": 12380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12326,
											"end": 12382,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 12326,
											"end": 12382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 12438,
											"end": 12442,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12432,
											"end": 12443,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 12406,
											"end": 12444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12491,
											"end": 12558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 12551,
											"end": 12557,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12543,
											"end": 12549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12537,
											"end": 12541,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12491,
											"end": 12558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 12491,
											"end": 12558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12491,
											"end": 12558,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 12491,
											"end": 12558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12585,
											"end": 12586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12609,
											"end": 12613,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12596,
											"end": 12613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12596,
											"end": 12613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12641,
											"end": 12643,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 12633,
											"end": 12639,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12630,
											"end": 12644,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12658,
											"end": 12659,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12653,
											"end": 13271,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 13271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 13271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 12653,
											"end": 13271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13315,
											"end": 13316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13332,
											"end": 13338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13329,
											"end": 13406,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13329,
											"end": 13406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 13329,
											"end": 13406,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13381,
											"end": 13390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13376,
											"end": 13379,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 13372,
											"end": 13391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13366,
											"end": 13392,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13357,
											"end": 13392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13357,
											"end": 13392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13329,
											"end": 13406,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 13329,
											"end": 13406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13432,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 13492,
											"end": 13498,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13485,
											"end": 13490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13432,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 13432,
											"end": 13499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13432,
											"end": 13499,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 13432,
											"end": 13499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13426,
											"end": 13430,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13419,
											"end": 13500,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 13288,
											"end": 13510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12623,
											"end": 13510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 12623,
											"end": 13510,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 13271,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 12653,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12705,
											"end": 12709,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 12701,
											"end": 12710,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 12693,
											"end": 12699,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12689,
											"end": 12711,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12739,
											"end": 12776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 12771,
											"end": 12775,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12739,
											"end": 12776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 12739,
											"end": 12776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12739,
											"end": 12776,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 12739,
											"end": 12776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12798,
											"end": 12799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12812,
											"end": 13020,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 12812,
											"end": 13020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12826,
											"end": 12833,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12823,
											"end": 12824,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12820,
											"end": 12834,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12812,
											"end": 13020,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12812,
											"end": 13020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 12812,
											"end": 13020,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12905,
											"end": 12914,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12900,
											"end": 12903,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 12896,
											"end": 12915,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12890,
											"end": 12916,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12882,
											"end": 12888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12875,
											"end": 12917,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12956,
											"end": 12957,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12948,
											"end": 12954,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12944,
											"end": 12958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12934,
											"end": 12958,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12934,
											"end": 12958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13003,
											"end": 13005,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12992,
											"end": 13001,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12988,
											"end": 13006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12975,
											"end": 13006,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 12975,
											"end": 13006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12849,
											"end": 12853,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12846,
											"end": 12847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12842,
											"end": 12854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12837,
											"end": 12854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12837,
											"end": 12854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12812,
											"end": 13020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 12812,
											"end": 13020,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12812,
											"end": 13020,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 12812,
											"end": 13020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13048,
											"end": 13054,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13039,
											"end": 13046,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13036,
											"end": 13055,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13033,
											"end": 13212,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13033,
											"end": 13212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 13033,
											"end": 13212,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13106,
											"end": 13115,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13101,
											"end": 13104,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 13097,
											"end": 13116,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13091,
											"end": 13117,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13149,
											"end": 13197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 13191,
											"end": 13195,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 13183,
											"end": 13189,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 13179,
											"end": 13196,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13168,
											"end": 13177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13149,
											"end": 13197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 13149,
											"end": 13197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13149,
											"end": 13197,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 13149,
											"end": 13197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13141,
											"end": 13147,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13134,
											"end": 13198,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 13056,
											"end": 13212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13033,
											"end": 13212,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 13033,
											"end": 13212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13258,
											"end": 13259,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13254,
											"end": 13255,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 13246,
											"end": 13252,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 13242,
											"end": 13256,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 13238,
											"end": 13260,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13232,
											"end": 13236,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 13225,
											"end": 13261,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12660,
											"end": 13271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12660,
											"end": 13271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12660,
											"end": 13271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12623,
											"end": 13510,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 12623,
											"end": 13510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12623,
											"end": 13510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12213,
											"end": 13516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12213,
											"end": 13516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12213,
											"end": 13516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12121,
											"end": 13516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12121,
											"end": 13516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12121,
											"end": 13516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13522,
											"end": 13640,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 13522,
											"end": 13640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13609,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 13627,
											"end": 13632,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13609,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 13609,
											"end": 13633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13609,
											"end": 13633,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 13609,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13604,
											"end": 13607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13597,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13522,
											"end": 13640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13522,
											"end": 13640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13522,
											"end": 13640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13868,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 13646,
											"end": 13868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13739,
											"end": 13743,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13779,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13766,
											"end": 13775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13762,
											"end": 13780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13754,
											"end": 13780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13754,
											"end": 13780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13790,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 13858,
											"end": 13859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13847,
											"end": 13856,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13843,
											"end": 13860,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13834,
											"end": 13840,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13790,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 13790,
											"end": 13861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13790,
											"end": 13861,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 13790,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 14316,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 13874,
											"end": 14316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14023,
											"end": 14027,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14061,
											"end": 14063,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 14050,
											"end": 14059,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14046,
											"end": 14064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14038,
											"end": 14064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14038,
											"end": 14064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14074,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 14142,
											"end": 14143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14131,
											"end": 14140,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14127,
											"end": 14144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14118,
											"end": 14124,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 14074,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 14074,
											"end": 14145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14074,
											"end": 14145,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 14074,
											"end": 14145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14155,
											"end": 14227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 14223,
											"end": 14225,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14212,
											"end": 14221,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14208,
											"end": 14226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14199,
											"end": 14205,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 14155,
											"end": 14227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 14155,
											"end": 14227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14155,
											"end": 14227,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 14155,
											"end": 14227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14237,
											"end": 14309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 14305,
											"end": 14307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14294,
											"end": 14303,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14290,
											"end": 14308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14281,
											"end": 14287,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14237,
											"end": 14309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 14237,
											"end": 14309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14237,
											"end": 14309,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 14237,
											"end": 14309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 14316,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 14316,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 14316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 14316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 14316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 14316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 14316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14322,
											"end": 14502,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 14322,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14370,
											"end": 14447,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14367,
											"end": 14368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14467,
											"end": 14471,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 14464,
											"end": 14465,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14457,
											"end": 14472,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14491,
											"end": 14495,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14488,
											"end": 14489,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14481,
											"end": 14496,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14508,
											"end": 14699,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 14508,
											"end": 14699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14548,
											"end": 14551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14567,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 14585,
											"end": 14586,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14567,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 14567,
											"end": 14587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14567,
											"end": 14587,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 14567,
											"end": 14587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14562,
											"end": 14587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14562,
											"end": 14587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14601,
											"end": 14621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 14619,
											"end": 14620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14601,
											"end": 14621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 14601,
											"end": 14621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14601,
											"end": 14621,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 14601,
											"end": 14621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14644,
											"end": 14645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14641,
											"end": 14642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14637,
											"end": 14646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14630,
											"end": 14646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14630,
											"end": 14646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14665,
											"end": 14668,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14662,
											"end": 14663,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14659,
											"end": 14669,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 14656,
											"end": 14692,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14656,
											"end": 14692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 14656,
											"end": 14692,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 14672,
											"end": 14690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14656,
											"end": 14692,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 14656,
											"end": 14692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14508,
											"end": 14699,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14508,
											"end": 14699,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14508,
											"end": 14699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14508,
											"end": 14699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14508,
											"end": 14699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"NFT Tokens/Tk7.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getProductDetails(uint256)": "6813b53b",
							"mintProduct(string,uint256)": "2d15e94b",
							"name()": "06fdde03",
							"productDetails(uint256)": "48f7eb30",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferProduct(address,uint256)": "025a42ae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getProductDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"productDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFT Tokens/Tk7.sol\":\"SupplyChainToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"NFT Tokens/Tk7.sol\":{\"keccak256\":\"0x2a1bdea3dcd1b4e0fb5172c69d3d3277fda3489f7c9c360240a1619ff08fbeef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d85baac6c2205c3459c717eec4a60936ebd09f7977c6dcbcdf5c2b4d4b38ef6b\",\"dweb:/ipfs/QmereXvFdiR5a4nZW151PoqAVCvspXLM9xzZ44Jf2fvYDb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "NFT Tokens/Tk7.sol:SupplyChainToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "NFT Tokens/Tk7.sol:SupplyChainToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "NFT Tokens/Tk7.sol:SupplyChainToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "NFT Tokens/Tk7.sol:SupplyChainToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "NFT Tokens/Tk7.sol:SupplyChainToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 802,
								"contract": "NFT Tokens/Tk7.sol:SupplyChainToken",
								"label": "productDetails",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"NFT Tokens/Tk7.sol": {
				"ast": {
					"absolutePath": "NFT Tokens/Tk7.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"SupplyChainToken": [
							851
						]
					},
					"id": 852,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 852,
							"sourceUnit": 652,
							"src": "61:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "ERC20",
										"nameLocations": [
											"147:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "147:5:5"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "147:5:5"
								}
							],
							"canonicalName": "SupplyChainToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 851,
							"linearizedBaseContracts": [
								851,
								651,
								41,
								755,
								729,
								785
							],
							"name": "SupplyChainToken",
							"nameLocation": "127:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "208:2:5",
										"statements": []
									},
									"id": 798,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "537570706c79436861696e546f6b656e",
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "180:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_110d06b6aac9f401f87cc6bb4d6837fd2a58b14798b3cd483981d561a602a395",
														"typeString": "literal_string \"SupplyChainToken\""
													},
													"value": "SupplyChainToken"
												},
												{
													"hexValue": "534354",
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "200:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
														"typeString": "literal_string \"SCT\""
													},
													"value": "SCT"
												}
											],
											"id": 795,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 792,
												"name": "ERC20",
												"nameLocations": [
													"174:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "174:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "174:32:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:2:5"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "208:0:5"
									},
									"scope": 851,
									"src": "160:50:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48f7eb30",
									"id": 802,
									"mutability": "mutable",
									"name": "productDetails",
									"nameLocation": "247:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 851,
									"src": "216:45:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 801,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 799,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "224:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "216:23:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 800,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "232:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "332:91:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 810,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "348:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "352:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "348:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 812,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "360:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 809,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "342:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "342:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "342:25:5"
											},
											{
												"expression": {
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 815,
															"name": "productDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "377:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 818,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 816,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "392:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "392:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "377:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 819,
														"name": "details",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "409:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "377:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "377:39:5"
											}
										]
									},
									"functionSelector": "2d15e94b",
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintProduct",
									"nameLocation": "277:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "details",
												"nameLocation": "303:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "289:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 803,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "289:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "317:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "312:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "312:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:36:5"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "332:0:5"
									},
									"scope": 851,
									"src": "268:155:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "493:57:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 831,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "513:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "517:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "513:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "525:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 834,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "536:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "503:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "503:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "503:40:5"
											}
										]
									},
									"functionSelector": "025a42ae",
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferProduct",
									"nameLocation": "438:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "462:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "454:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "454:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "478:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "473:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "473:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "453:32:5"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "493:0:5"
									},
									"scope": 851,
									"src": "429:121:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "632:47:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 845,
														"name": "productDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "649:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 847,
													"indexExpression": {
														"id": 846,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "664:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "649:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 844,
												"id": 848,
												"nodeType": "Return",
												"src": "642:30:5"
											}
										]
									},
									"functionSelector": "6813b53b",
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getProductDetails",
									"nameLocation": "565:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "588:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "583:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "583:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:14:5"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "617:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 842,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "617:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:15:5"
									},
									"scope": 851,
									"src": "556:123:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 852,
							"src": "118:564:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "35:647:5"
				},
				"id": 5
			}
		}
	}
}